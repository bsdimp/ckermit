File CKC190.UPD, Update history for C-Kermit.                      -*- text -*-

As of version:      5A(190)
Most recent update: Fri Oct 28 10:32:11 1994

Author:  Frank da Cruz
Address: Watson Laboratory, Columbia University Academic Information Systems
         612 West 115th Street, New York, NY 10025, USA
Phone:   +1 212 854-5126
Fax:     +1 212 662-6442  -- or --  +1 212 663-8202
E-Mail:  fdc@columbia.edu (Internet), FDCCU@CUVMA (BITNET/EARN/CREN)

  Copyright (C) 1985, 1994, Trustees of Columbia University in the City of New
  York.  The C-Kermit software may not be, in whole or in part, licensed or
  sold for profit as a software product itself, nor may it be included in or
  distributed with commercial products or otherwise distributed by commercial
  concerns to their clients or customers without written permission of the
  Office of Kermit Development and Distribution, Columbia University.  This
  copyright notice must not be removed, altered, or obscured.

This file is for programmers.  It contains the detailed edit history for
C-Kermit 5A edit 190; that is, all the changes since 5A(189) was
released on 30 June 1993.  C-Kermit users should read the file CKCKER.UPD
for a description of the new features of C-Kermit since 5A(188).  The
CKCKER.UPD file should be used as a supplement to the book "Using C-Kermit".

The edit history prior to the version 5A(188) release in November 1992 can be
found in the following files:

  CKCV4E.UPD -- Version 4E and earlier (through January 1989)
  CKCV4F.UPD -- Version 4F (which was never formally released)
  CKC178.UPD -- Version 5A prior to the first Beta release, edit 179 (huge).
  CKC188.UPD -- Version 5A from edit 179 until final release, edit 188.

And the following files contain the edit history since 5A(188):

  CKC189.UPD -- Version 5A edit 189, November 1992 - June 1993.
  CKC190.UPD -- Version 5A edit 190, July 1993 - ??? (this file).

------------------------------
C-KERMIT DOCUMENTATION

  Frank da Cruz and Christine M. Gianone, "Using C-Kermit", Digital Press /
  Butterworth-Heinemann, Woburn, MA, 1993, 514 pages, ISBN: 1-55558-108-0.

  US single-copy price: $34.95; quantity discounts available.  Available in
  computer bookstores or directly from Columbia University:

    Kermit Development and Distribution
    Columbia University Academic Information Systems
    612 West 115th Street
    New York, NY  10025  USA
    Telephone: (USA) 212 854-3703

  Domestic and overseas orders accepted.  Price: $34.95 (US, Canada, and
  Mexico), $45 elsewhere.  Orders may be paid by MasterCard or Visa, or
  prepaid by check in US dollars.  Add $35 bank fee for checks not drawn on
  a US bank.  Price includes shipping.  Do not include sales tax.
  Inquire about quantity discounts.

  You can also order by phone from the publisher, Digital Press /
  Butterworth-Heinemann, with MasterCard, Visa, or American Express:

    +1 800 366-2665 (Woburn, Massachusetts office for USA & Canada)
    +44 993 58521   (Rushden, England office for Europe)
    +61 2 372-5511  (Chatswood, NSW office for Australia & New Zealand)
    +65 220-3684    (Singapore office for Asia)

  A German-language edition is also available:

    Frank da Cruz and Christine M. Gianone, "C-Kermit - Einfuehrung und
    Referenz", Verlag Heinz Heise, Hannover, Germany (1994).
    ISBN 3-88229-023-4.  Deutsch von Gisbert W. Selke.  Price: DM 90,00.  
    Verlag Heinz Heise GmbH & Co. KG, Helstorfer Strasse 7, D-30625 Hannover.
    Tel. +49 (05 11) 53 52-0, Fax. +49 (05 11) 53 53-1 29.

------------------------------
C-KERMIT 5A(190) EDIT HISTORY, 5 AUG 93 - 4 OCT 94.

In ckutio.c, corrected a typo that might have prevented setting a serial
port's speed to 57600 bps.  Also, consistently added support for 57600 and
115200 bps if symbols for those speeds are defined.  (But this is still an
issue for the command processor, which does not have access to
system-dependent symbols like this).  ckutio.c 5A(111), 5 Aug 93.

From Bill Glass - fixed a statistics counter (file bytes) that was still
counting some non-file material (contents of server command packets) in
the decode() function.  ckcfns.c 5A(090), 6 Aug 93.

Added types to all functions in VMS-specific modules, CKVFIO.C and CKVTIO.C
(CKVCON was already OK) to pacify the new, stricter Alpha AXP (DEC C)
compilers.  CKVFIO.C 5A(056), CKUTIO.C 5A(101), 8 Aug 93.

Added patches to enable SET FLOW RTS/CTS in Linux, originally from Rick
Sladkey, jrs@world.std.com.  Depends on symbol "linux".  ckcdeb.h, ckutio.c.

Terry Kennedy pointed out that VMS C-Kermit follows FILE TYPE when
TRANSMITting, even if it is IMAGE or LABELED.  Changed the TRANSMIT command
to treat any of the system-specific binary modes (IMAGE, LABELED, MACBINARY,
etc) as ordinary binary mode, i.e. saved and restored the "binary" variable
in the TRANSMIT command.  ckuus4.c, 10 Aug 93.

Shinichi Sakata <ssakata@weber.ucsd.edu> discovered that if an "application
file" (a file whose name is given as the first command-line argument) contains
a CD command, that C-Kermit would, after finishing the application file,
act as if it had been given an invalid command-line argument.  Fixed by adding
yet another flag, cfilef - set in ckcmai.c, tested in ckuusy.c.  10 Aug 93.

From Rob Weiner <rweiner@watsun.cc.columbia.edu>, a new makefile entry,
sys5r4sxtcpc, for CONSENSYS System V R4.2-1 with TCP/IP and curses.  makefile.
12 Aug 93.

From Rich Sladkey <jrs@world.std.com>: (1) fix prototype of ttrpid() in
ckutio.c; (2) fix fixes to Linux hardware flow control.  It's still ugly
internally, but cleaning up the hardware flow control code would be a major
undertaking due to the geometrically expanding combinations of flow control
settings and different APIs for setting them.  ckutio.c 5A(112) 22 Aug 93.

Added conditional compilation support for system-wide init file.  If the
compile-time symbol CK_SYSINI is defined (to be a character string in
doublequotes), it is taken as the file specification of the initialization
file, to be used instead of the built-in default.  This can be absolute or
relative, so it can point to a single system-wide file, or to something like
~/.kermrc (UNIX) or SYS$LOGIN:CKERMIT.INI (VMS) to indicate the user's own.
If it is system wide, it can (and probably should) still "chain" to the user's
own initialization file, by ending (or starting, depending on the desired
precedence) with a command like:

  if exist \v(home)ckermit.ini take \v(home)ckermit.ini

ckuus5.c, 10 Sep 93.

Fixes for VMS C-Kermit, all in CKVTIO.C:
 * 058 27-Sep-93 HG   Fix for real the SHARE issue when allocating terminal
 *		      by dropping SHARE before trying to assign the channel.
 * 059  7-Oct-93 mlo  Added support for CMU-OpenVMS/IP ("CMU/Tek").  Requires
 *                    CMU-OpenVMS/IP sockets library, also by mlo.
 * 060  9-Oct-93 HG   Fix improper call to vms_assign_channel in edit 058,
 *                    noticed by Fritz@GEMS.VCU.EDU.
 * 061  9-Oct-93 fdc  For some reason, conbin() was turning off flow control.
 *                    This caused massive data loss during CONNECT mode when
 *                    running C-Kermit from a low-speed connection through
 *                    a DECserver.  Now conbin() leaves the console flow
 *                    control setting alone.
 * 062 10-Oct-93 ttj  Correcting parameters to time() and ctime(). Was long,
 *                    is now time_t (pointers).  Made prototype for
 *                    vms_assign_channel and caught an erroneous function call.

Plus CMU/Tek TCP/IP support for VMS C-Kermit from Mike O'Malley at DEC
<mlomall@sav324.sandia.gov>; minor source changes to CKCNET.C, CKCNET.H,
CKUUS4.C, and (noted above) CKVTIO.C.

Plus compiler-related and/or typo fixes to CKVFIO.C from Tarjei Jensen:
 * 102 18-Aug-93 ttj Minor updates in zsattr() and do_label_recv() mainly to
 *                   quieten the compiler (which had every reason to complain).
(Installed 10 Oct 93).

Added keypad period (".") to the list of numeric keypad keys that return
different scan codes from their main keypad equivalents -- final step in
making the PC numeric keypad able to work like the DEC one.  From Kai Uwe
Rommel.  ckotio.c 5A(105) 11 Oct 93.

Corrections to X.25 functions from <David_Lane_@vos.stratus.com>: A PAD
command (either a SET, READ, or SETANDREAD) without any parameters specified
in the command means "all supported parameters."  For the SET commands, it is
a "reset to initial values."  As passed to qbitpkt(), n is the number of data
bytes in the packet, which starts at s.  The control byte has already been
stripped off.  When passed to either setpad() or readpad(), n is the number of
parameters in the command/query.  ckcnet.c 5A(020) 13 Oct 93.

A change from Alex Dupuy <dupuy@smarts.com>: if C-Kermit is compiled with
-DNOCMDL (no command-line arguments) and -DNOICP (no interactive command
parser), then instead of building a program that just exits, build one that
goes into server mode with all default settings.  Alex suggests that we can
also rip out all local-mode supporting code in this case (since there is no
way to SET LINE any more) to make a truly minimal remote-only version.
Settings can still be accomplished via REMOTE SET commands.  C-Kermit built
on a PC with 'make dellsys5r4m "KFLAGS=-DNOCMDL -DNOICP"' weighs in at 90K.
ckcmai.c 5A(190) 14 Oct 93.

Changed the protocol module to issue "KERMIT READY TO blah..." messages
consistently, and to make them appear (in remote mode) no matter whether
the file transfer command was given interactively or from a command file
or macro.  ckcpro.w 5A(056) 14 Oct 93.

Changes for BSDI from John T. Kohl <jtk@kolvir.blrc.ma.us>.  ckcdeb.h,
ckutio.c.  Aside from adjusting BSDI-isms, John (partially) fixed a big
problem with tthflow() that had previously been hacked around in the Linux
case, by passing the appropriate terminal info structure to tthflow() as an
argument.  I removed the special case for Linux.  Unfortunately, the hardware
flow control status is not kept in the terminal info on some systems,
e.g. SVR4, SunOS.  And since John started things off in this direction, I made
further attempts to clean up the hardware flow control situtation in the UNIX
version, adding a new parameter to tthflow() to specify whether hardware f/c
is to be turned on (1) or off (0), and then replacing various chunks of
misplaced system-specific code by calls to tthflow().  Compiles OK on SunOS
4.1.3, 4.4BSD, SVR4, needs testing.  ckutio.c 5A(113) 20 Oct 93.

John also added a new command, which he called PUSHREM and which I decided to
call REDIRECT, which is like RUN, but with stdin and stdout redirected to the
communication device (serial or network connection).  For UNIX only, needs
forks, dup(), wait(), and needs <sys/wait.h> to define WIFEXITED() and
WEXITSTATUS().  This commmand is compiled in only if the symbol CK_REDIR is
defined at compile time, and then only when NOPUSH is not defined.  Fixed up,
adapted to, and tested on SunOS 4.1.3, SVR4, Linux.  Could not get it working
on the NeXT or AIX, which have no definition for WEXITSTATUS().  If you try to
build the program with CK_REDIR defined and the required macros are not
available, C-Kermit will print a message "?Sorry, can't execute this command -
missing pieces" if you try to use the REDIRECT command.  Also, I added a new
token, "<" (leftbracket), as a synonym for REDIRECT (like "!" is a synonym for
RUN), and, when CK_REDIR is defined, made "red" and "redi" valid non-unique
abbreviations for REDIAL.  ckuusr.h, ckuusr.c 5A(104), ckutio.c, ckuus[25].c.
25 Oct 93.

Added "designer banners" for Linux and BSDI BSD/386.  ckuver.h.  20 Oct 93.

After testing of new RTS/CTS code by Rick Sladkey, made some more changes,
unified Linux and BSDI RTS/CTS code, reorganized, consolidated, cleaned up,
documented.  ckutio.c 5A(114) 21 Oct 93.

Fixes from Chuck Goodhart <ceg@hyper-bret.jpl.nasa.gov>:
 . The SCRIPT command can sometimes cause TELNET negotiations to be ignored.
 . The SCRIPT command is slowed by unbuffered output to the console
   and the session log.
 . The SCRIPT command does not filter out carriage returns when
   SET SESSION-LOG TEXT is set.
 . While SET SESSION-LOG TEXT, TELNET negotiations should not be logged.
 . The INPUT command is also slowed by unbuffered output to the console and
   the session log.
 . ttinc(timo) should ignore the timeout when, if MYREAD buffered
   input is being used, a character is known to be available.  This
   saves two calls to signal() and two calls to alarm(), dramatically
   improving the performance of the INPUT command.
ckuscr.c 5A(017), ckutio.c 5A(115), ckuus4.c 5A(105), ckcnet.c 5A(021),
21 Oct 93.  And again, ckuscr.c 5A(018) 25 Oct 93.

Fixed a bug that caused TELNET negotiations to be ignored if C-Kermit was
used to make a TELNET connection, then a serial connection, and then a
another TELNET connection, in that order.  ckuus7.c, 25 Oct 93.

Merged in support for a whole new and different proprietary operating system,
Stratus VOS, from David Lane at Bellsouth <David_Lane_@vos.stratus.com>.  This
is a full new C-Kermit implementation, including TCP/IP and X.25.  Changes to
all modules are within #ifdef STRATUS..#endif.  For X.25, the symbol is
STRATUSX25.  Elements common to SunLink and Stratus X.25 are now combined
under the new ANYX25 symbol.  All ckc* and cku* modules affected (except
cku[ft]io.c).  All modules must now #include "ckcsym.h" first thing to pick up
other symbol definitions -- the VOS C compiler doesn't allow -D/-d for this.
David also VOS-ified the ckbmkb and ckbunb programs, wart, and the malloc
debugger.  25 Oct 93.  Supporting system-dependent modules -- ckl*.[ch] --
still to come, along with VOS-specific documentation, build procedure, etc.

Last month, Olaf Seibert <rhialto@mbfys.kun.nl> pointed out that C-Kermit,
particularly on the Mac, would seem to operate in stop-and-wait mode,
even though a nonzero window size was successfully negotiated.  The behavior
would sometimes change during the transfer a particular file -- windowing
one minute, stop-and-wait the next.  Olaf figured out that, in the "PARSENSE"
case (in which C-Kermit's packet reader is length-driven rather than waiting
for the packet terminator), the packet terminator is left over in the buffer.
Meanwhile, back in sdata() -- the Data-Packet sender in ckcfns.c -- the
following code:

	spack('D',pktnum,len,data);	/* Send the data packet. */
	x = ttchk();			/* Peek at input buffer. */
	debug(F101,"sdata ttchk","",x);	/* ACKs waiting, maybe?  */
	if (x) return(1);		/* Yes, stop sending data packets */

checks whether *any* data has arrived, in which case it breaks out of sending
the current windowful and goes to read a packet.  And that's just what happens
when the packet terminator is still waiting to be read.  The fix turned out to
be simple:

	if (x) return(1);
becomes:
	if (x > 4) return(1);

The minimum number of characters in a Kermit packet is 5, so we don't break
out of the send loop unless there are at least that many characters waiting.
This tiny change should speed things up quite a bit in situations where
windowing is needed.  ckcfns.c 5A(092) 25 Oct 93.

Fixed an incorrect test (nettype == NP_TELNET) in ckvtio.c.  5A(030) 27 Oct 93.
Noticed by David Lane.

Fixed incorrect setting of network type via command-line arguments.
Noticed by David Lane.  ckuusy.c.

Changed the UNIX CONNECT command to buffer keystrokes, rather than reading
them one at a time.  This turns out to be important when C-Kermit is "in the
middle", in CONNECT mode, between two other computers that are transferring
data.  Fulvio Marino of Olivetti in Italy recoded C-Kermit's communications
and console i/o for this very reason, but his changes are massive and would
require months or years of testing, debugging, adaptation to every UNIX
variant in the world, etc, which might well be worth it, since his generalized
i/o buffering scheme makes most kinds of i/o in Kermit MUCH faster and easier
on the system in terms of cycles, system calls, etc...  In other words, the
present change is just a quick fix to get a modest improvement in this
particular case.  Benchmarks using a 58K file on a network connection:

					   No Buffering   With Buffering
  SEND through C-Kermit in CONNECT mode:      102 sec         47 sec
  TRANSMIT thru C-Kermit in CONNECT mode:     237 sec         94 sec

So, about a 100%+ speedup.

The buffer size is only 256 bytes, since that's the biggest amount that UNIX
itself seems to buffer from the console (i.e. tests on SunOS showed that
conchk() never returned a value greater than 256).  No ill or side effects
were noted -- CONNECT works in the normal way during interactive use.
ckucon.c 5A(055) 27 Oct 93.

This code could not be adapted to VMS C-Kermit because of the insane way that
it reads characters from the keyboard.  It was not adapted to OS/2 because
OS/2 C-Kermit is never "in the middle".

Changed the SET NETWORK keyword table to allow any combination of networks
without getting compile-time syntax errors caused by too many or too few
commas.  Problem noticed by David Lane when he built VOS C-Kermit with X.25
and no TCP/IP.  ckuusr.c 5A(107), 28 Oct 93.

Added vanity herald for NetBSD based on preprocessor symbol __NetBSD__.
ckuver.h, 28 Oct 93.

Disabled -j command-line option if TCPSOCKET not defined.
Disabled -X and -Y command-line options if ANYX25 not defined.
Suggested by David Lane.  ckuusy.c, 29 Oct 93.

Added a new variable, \v(parity), to allow script programs to get the current
parity, in case they need to save, change, and restore it, e.g. around a
dialog with a modem that doesn't work right if it sees a parity bit.
ckuusr.h, ckuus4.c, 29 Oct 93.

Added a new variable, \v(dialstatus), a return code from the last DIAL
command, either success or else any of twenty-some specific error codes (busy,
no answer, no dialtone, etc).  This allows users to write script programs that
can decide whether to redial based on the failure reason.  For now, the value
of \v(dialstatus) is a number.  ckcker.h, ckudia.c, ckuus4.c.  The failure
reason codes are:

#define DIA_UNK  -1			/* No DIAL command given yet */
#define DIA_OK    0			/* DIAL succeeded */
#define DIA_NOMO  1			/* Modem type not specified */
#define DIA_NOLI  2			/* Communication line not spec'd */
#define DIA_OPEN  3			/* Line can't be opened */
#define DIA_NOSP  4			/* Speed not specified */
#define DIA_HANG  5			/* Hangup failure */
#define DIA_IE    6			/* Internal error (malloc, etc) */
#define DIA_IO    7			/* I/O error */
#define DIA_TIMO  8			/* Dial timeout expired */
#define DIA_INTR  9			/* Dialing interrupted by user */
#define DIA_NRDY  10			/* Modem not ready */
#define DIA_ERR   20			/* Modem command error */
#define DIA_NOIN  21			/* Failure to initialize modem */
#define DIA_BUSY  22			/* Phone busy */
#define DIA_NOCA  23			/* No carrier */
#define DIA_NODT  24			/* No dialtone */
#define DIA_RING  25			/* Ring, incoming call */
#define DIA_NOAN  26			/* No answer */
#define DIA_DISC  27			/* Disconnected */
#define DIA_VOIC  28			/* Answered by voice */
#define DIA_NOAC  29			/* Access denied, forbidden call */
#define DIA_UERR  98			/* Unknown error */
#define DIA_UNSP  99		/* Unspecified failure detected by modem */

From Jamie Watson <jw@adasoft.ch>:

- On AIX 3.x, the xon/xoff and rts/cts values in the tty line discipline
  stack are saved on startup and restored on exit.  This fixes a very
  irritating problem in which C-Kermit could leave a tty in a state that
  was unusable by uucp or cu.

- The REDIRECT command is enabled and working on AIX 3.x and on DEC Ultrix.
  The AIX version has been tested on AIX 3.1.5 and AIX 3.2.x (heaven only
  knows what the "x" might be; I defy anyone to assign a specific value
  to any currently running AIX 3.2 system).
  The Ultrix version has been tested on a DECsystem 5000/25, Ultrix 4.3,
  and on a MicroVAX 2000, Ultrix 4.2.

ckutio.c 5A(116) 1 Nov 93.

Jamie also noticed that the new keyboard-input buffering invariably caused
CONNECT/TELNET to fail under AIX, as it would have under most any System V
implementation.  The culprit turns out to be that the read() in kbget() was
getting interrupted by the lower CONNECT fork as a result of TELNET echo
negotiations, thus read() would fail with EINTR.  Solution: ignore EINTR
errors when read()ing from keyboard during CONNECT.  ckucon.c 5A(056) 1 Nov 93.

Fixed prototype-mismatch complaints in new buffering code in SCRIPT and INPUT
commands.  ckuscr.c 5A(019), ckuus4.c, 1 Nov 93.

Added a compile-time symbol for ckufio.c: ISREGBUG.  If this symbol is
defined, it tells ckufio.c to define S_ISREG and S_ISDIR itself, rather than
using definitions from header files, when the latter don't work.  There is
already code in ckufio.c to do this for certain systems, but the new symbol
allows it to be done from the CC command line (or with KFLAGS on the "make"
command line) without modifying the source code.  This is necessary for at
least one of the NCR UNIX versions.

Added numeric C-Kermit program version number to OS/2 C-Kermit ENQ/Answerback
string so now it says "OS/2 C-Kermit 501190".  ckocon.c 5A(104), 2 Nov 93.

From CKUKER.BWR:
"If a file arrives that has the same name as a directory, and C-Kermit's FILE
COLLISION setting is BACKUP, C-Kermit will either: (a) rename the directory,
or (b) not be able to rename the directory and so will refuse the incoming
file with the message "Can't transform filename".  Similarly, if C-Kermit's
FILE COLLISION setting is OVERWRITE, C-Kermit will, hopefully (!), not be able
to delete the directory, and so will refuse the incoming file."

And from CKOKER.BWR:
"You can't give a command like "RECEIVE A:".  C-Kermit will fail to open
the output file.  You must also include a filename, e.g. "RECEIVE A:X.X"."

These are now fixed.  C-Kermit -- at least the UNIX and OS/2 versions -- now
has the ability to recognize disk and directory names when they are given as
output filespecs.  When this happens, primarily when "as-names" are given in
RECEIVE or GET commands, or in a '-a' command-line argument, C-Kermit now
changes its directory (or disk) to the one given for the duration of that
command, and then restores the previous current disk/directory when the
command is done.  So now in UNIX, you can say "receive foo", where foo is a
directory name (relative or absolute, need not end in slash), and C-Kermit
will CD to that directory and store all the incoming files there under their
own names until protocol mode exits, at which time C-Kermit goes back to the
directory that was current when the RECEIVE command was given.  If "foo" is
not a directory, then C-Kermit stores the (first) incoming file in the current
directory, under the name of "foo", as before.  This feature depends on the
symbol CK_TMPDIR, which is automatically defined in ckcker.h for UNIX and
OS/2, and a new supporting CK?FIO.C function, isdir(), which has been filled
in for UNIX and OS/2.  Also, files that arrive under names which correspond to
directory names are no longer able to cause renaming or other modification to
directory files, and useful error messages are now returned in this case.
Also, 'kermit -r' is bit more careful about checking whether the output file
can be created before going into protocol mode.  ckcker.h, ckcfns.c 5A(093),
ckuus[r56y].c 5A(108), ckufio.c 5A(075), 2 Nov 93.

(Ideally, the receiving system should be able to send back a fully qualified
file specification in the ACK to F packet, but most systems where C-Kermit
runs are not able to do this.  The temporary directory name might be absolute
or relative, might have or lack a terminating separator, etc, so we'd need a
ton of system-dependent code to do this right.)

Added the ability to repaint the fullscreen file transfer display screen, for
example if the screen gets messed up by talk or broadcast messages during file
transfer.  User types Ctrl-L (or L) to repaint.  Internally, two methods are
used.  If the symbol CK_WREFRESH is defined, which can be added to ckcdeb.h
for a particular version (as I have done for SunOS, NeXTSTEP, and AIX), or
added to a makefile entry, or given as "KFLAGS=-DCK_WREFRESH", or otherwise
defined at compile time, then the real-curses-library functions clearok() and
wrefresh() are called, which totally repaint the screen -- just what we want.
Otherwise, Kermit uses a do-it-yourself method which clears the screen and
repaints most of the fields, but not all of them, because certain information
might be lost by the time repainting occurs, such as the filename and the
direction of transfer.  The latter method works for all implementations of
fullscreen file transfer display, but making this method work for all fields
would be a major recoding task, and would add a lot of complexity and storage
space, basically duplicating the functionality of curses itself (keeping each
field, or an entire screen image, for repainting purposes).  ckcdeb.h,
ckuusx.c, ckuus5.c, 3 Nov 93.

Added CK_WREFRESH for AT&T System V R3 and later, since it's in the SVID.
Also for BSD 4.4 and derivatives.  However, this type of change is always
risky, so I also added a new symbol, NOWREFRESH, to allow this decision to be
overriden from the CC or 'make' command line.  In other words, if your linker
complains that _clearok or _wrefresh are undefined, then "touch ckuusx.c"
and rebuild with -DNOWREFRESH.  ckcdeb.h, 3 Nov 93.

Added VMS support for CK_WREFRESH, contributed by William Bader
<wbader@pluto.CSEE.Lehigh.Edu>.  ckcdeb.h, ckuusx.c, 4 Nov 93.

Added a makefile entry for DECstation 5000 models based on R4000 "MIPS-3"
chip, Ultrix 4.3A, from Jamie Watson <jw@adasoft.ch>.  4 Nov 93.

A few more minor Stratus VOS changes, having to do with X.25, from David Lane.
ckcmai.c, ckuus7.c.  4 Nov 93.

Added KANJI, RTS/CTS, Curses, CK_WREFRESH to DEC OSF/1 version, built, tested
OK on OSF/1-AlphaAXP 1.3.111.  RTS/CTS compiled OK, but I don't know if it
actually works.  REDIRECT compiles but doesn't work ("missing pieces").
4 Nov 93.

Added CK_TMPDIR feature to VMS version.  isdir() function for VMS received
from William Bader <wbader@pluto.csee.lehigh.edu>.  Moved CK_TMPDIR definition
from ckcker.h to ckcdeb.h, because we might want to use it in the ck?fio.c
modules.  ckuusr.c, ckcker.h, ckcker.h, ckcfns.c, ckuus[r6].c;
ckvfio.c 5A(102), 5 Nov 93. 

Rearranged #ifdefs for CK_SYSINI (compile-time option for system-wide init
file) and moved them from ckuusr.c to ckuusr.h.  Now you can (at least in
UNIX) give CK_DSYSINI as a command-line option to accept a built-in default
fully qualified file specification for a system-wide C-Kermit init file,
/usr/local/bin/kermit.sysini.  5 Nov 93.

Added Stratus-VOS-specific modules from David R. Lane, SoftCom Systems Inc:
cklcon.c, cklfio.c, ckltio.c, cklnet.c (includes TCP/IP and X.25), ckldef.c,
plus build procedure cklmak.cm.  5 Nov 93.

Added automatic enabling of REDIRECT command for various UNIX systems where
we know it works in ckcdeb.h.  Can be overridden by defining NOREDIRECT at
compile time.  6 Nov 93.

Fixed stupid mistake in system-wide init-file #ifdefs, noticed by Jamie
Watson.  ckuusr.h, 6 Nov 93.  Also, fixed SHOW commands to display system-wide
init file name if it has been configured and used, and to allow more space for
displaying it.  Also, changed init file name buffer to be dynamically
allocated if DCMDBUF defined, and increased its size from 100 to 256 since it
can now be a full path name.

Added a new command-line argument: -D n (uppercase D followed by a number),
equivalent of SET DELAY command.  Jamie Watson noticed there was no way to
get Kermit to use a shorter (or different) delay when sending files via
command-line arguments.  ckuusy.c.  6 Nov 93.

Added correct identification of Alpha (AXP) CPU for \v(cpu), designer banners
for DEC OSF/1 on Alpha.  Also added O2 optimization, ANSI C prototyping, plus
REDIRECT command is now working on Alpha-OSF/1.  \v(cpu) also works on OpenVMS
AXP.  Combined dec-osf and dec-osf-pc UNIX makefile entries.  6 Nov 93.

After EXITing from the wrong Kermit one time too many, unintentionally
dropping a connection, I added a new command SET EXIT WARNING { ON, OFF }.
If ON, and Kermit is in local mode, and it thinks it has an open serial or
network connection, it will warn you and give you a chance to back out of
the EXIT command.  EXIT WARNING OFF is the default, for compatibility.
ckuusr.h ckuusr.c ckuus3.c, 6 Nov 93.  NOTE: the ability of C-Kermit to know
whether a connection is open or not depends on a lot of system-dependent
things.  In UNIX and OS/2, Kermit's guess is pretty reliable, based on the
"tty" file descriptor (ttyfd), modem signals, etc.  In other versions, we
can't tell so well, so we always warn and ask if EXIT WARNING is ON.

In the course of adding SET EXIT WARNING, fixed a bug in the command package,
in which, if a temporary prompt was in effect and prompt() was called with a
NULL conversion function, then ?-help would put back the regular prompt
instead of the temporary one.  ckucmd.c 5A(055) 6 Nov 93.

Added SHOW EXIT to display EXIT WARNING setting, exit status.  ckuus5.c.

Added ttruncmd() code for OS/2 from Kai Uwe Rommel, and enabled
REDIRECT command for OS/2.  ckotio.c 5A(106), 6 Nov 93.

Added IF DIRECTORY command.  Succeeds if operand is a directory, fails
otherwise.  Uses new isdir() function, currently filled in for UNIX, VMS,
OS/2.  Is included if CK_TMPDIR symbol is defined.  ckuusr.h, ckuus6.c,
6 Nov 93.

Added IF NEWER command.  Compares modification (or creation) date/times
of two files, succeeds if first file is newer than second file.  Depends
on zfcdat() function, which is defined for most versions, but not for VMS
or OS-9.  Added a section to ckcdeb.h that defines the symbol ZFCDAT for
each implementation that provides this function.  ckcdeb.h, ckuusr.h,
ckuus6.c, 6 Nov 93.

Added new function \Fdate(filename).  Available if ZFCDAT is defined.
Returns creation date of file in "yyyymmdd hh:mm:ss" format, or else the
null string upon failure.  Also changed SHOW FUNCTIONS to do "more?"-style
paging, like SHOW VARIABLES.  ckuusr.h, ckuus4.c, ckuus5.c.  6 Nov 93.

Changed SET BUFFERS command to default the second (receive) buffer to be
the same size as the first (send) buffer, so user doesn't have to type two
numbers.  ckuus3.c, 6 Nov 93.

Added CK_WREFRESH support for DEC ULTRIX (all versions) and IBM RT PC AIX.
Verified by Jamie Watson.  ckcdeb.h, 7 Nov 93.

Increased -Olimit for ULTRIX 4.2, since new \v(dialstatus) code pushed the
optimizer over the edge.  From Jamie Watson.  makefile, 7 Nov 93.

Changed SET EXIT WARNING to not warn on a serial connection if SET CARRIER
is OFF.  ckuusr.c, 7 Nov 93.

Added SET EXIT STATUS to let user set program return code without actually
having to exit.  For example, user can OR in various bits at different times.
ckuus3.c, 7 Nov 93.

Updated UNIX man page.  ckuker.nr, 8 Nov 93.

Added zfcdat() to VMS version, for \fdate(filename), IF NEWER, etc.
Contributed by William Bader.  CKVFIO.C 5A(104), 9 Nov 93.

Changed VMS C-Kermit version to always be in foreground mode, i.e. to never
set the backgrd flag.  There is no notion of background (in the UNIX sense) in
VMS.  If C-Kermit is not running on a real terminal, then either it has its
SYS$INPUT and/or SYS$OUTPUT redirected, or it's running in batch.  In either
case, it can always do console output.  Also, I installed a patch from
<tcwkw@sf.msc.edu> to sysinit() to prevent it from trying to get info about
the console terminal when the console is not a terminal.  CKVTIO.C 2.0(063),
9 Nov 93.

Got new LIBCMU ...

Discovered that the new INPUT buffering broke code the INPUT command under
certain circumstances, notably when using a VMS C-Kermit script to make a
TCP/IP connection; after the first 1-second timeout, netinc(1) would start to
get i/o errors (socket_errno == EBUSY, "Mount device busy") and then would
return -1 immediately without actually timing out any more.  The INPUT
buffering code made the erroneous assumption that if ttchk() returned a
positive number n, that n successive calls to ttinc() would succeed, and this
is apparently not always the case in VMS.  For now, the quick fix is to remove
the INPUT buffering code (I left it in place, but conditionalized on CK_BURST,
which is #undef'd).  When I have some spare time, I'll change INPUT to do its
own buffering, just like CONNECT, rather than relying on some unseen and
possibly unreliable underlying buffering mechanism.  ckuus4.c, 9 Nov 93.

Edited OS/2 section of standard (sample) CKERMOD.INI file to not swap Esc and
accent grave keys, and to include hint messages about key mapping and colors.

Changed -Otcl in SCO Xenix 3.2 to -O.  It seems that -Otcl was producing bad
code, at least in the SCRIPT command (noticed by Michael Haws
<michael@suntex.com>; expect strings would always fail).  makefile, 12 Nov 93.

Added \v(keyboard) for OS/2 C-Kermit.  Returns keyboard type: 88, 101, 122,
are the known types.  If OS/2 senses some other type, its 4-byte hex code is
returned.  If OS/2 fails to get the keyboard type, the empty string is
returned.  Code adapted from Kai Uwe Rommel's example.  ckcdeb.h, ckuusr.h,
ckuus4.c, ckotio.c, cpcplm.doc.  15 Nov 93.

Added WILL SGA response to DO SGA.  This never came up before.  Problem
reported by Wayne Hauber <wjhauber@isstate.edu>, with Apartus Technologies
Telnet Gateway Service to Iowa State U Library's NOTIS system.  ckcnet.c
5A(022), 17 Nov 93.

Changed debug log entries for TELNET negotiations to be one-liners, all
starting with TELNET, looking mostly like the UNIX telnet "toggle options"
display.  Now you can get all TELNET negotions via "grep ^TELNET debug.log".
ckcnet.c.  17 Nov 93.

Peter Kabal <kabal@aldebaran.ee.mcgill.ca> noticed that SET SPEED can fail in
Ultrix 4.2 on the DECstation 2100 for speeds over 9600, but the system call
does not return any error indication.  Therefore, all three places in C-Kermit
that call ttsspd() to set the device's speed were changed to read it back
with ttgspd() before setting the global 'speed' variable.  ckuus3.c, ckuus7.c,
ckuusy.c, 17 Nov 93.

Changed the OS/2 C-Kermit installation procedure to skip all COM-port related
questions if the user says she will not be using a COM port (e.g. for
TCP/IP-only installation), and to skip modem-related questions if a modem will
not be used.  ckoins.cmd (= install.cmd), 17 Nov 93.

Discovered why certain login scripts were not working on OS/2.  The clause
"for (j = i; i-- > 0; )" was not generating the intended code, at least not
when compiled by IBMCPP (the same code worked OK in most other versions).
Moved the decrementing of i into the loop and then it worked fine.  ckuus4.c,
18 Nov 93.

After successfully executing a login script, OS/2 C-Kermit tended to have its
echoing wrong.  To alleviate this problem, apparently caused by tn_ini() being
called multiple times gratuitously, in spite of seemingly scrupulous setting
and clearing of the tn_init flag at all appropriate places, I removed all
calls to tn_ini() (and all references to tn_init) from all modules of all
C-Kermit versions.  tn_ini() is now called only from within net_open(), after
net_open() has determined that it has just made a successful TELNET
connection.  Many modules affected: ck*tio.c, ck*net.c, ck*con.c, 18 Nov 93.

Changed OS/2 C-Kermit "set terminal color normal" to "set terminal color
terminal-screen", which makes more sense.  Left "normal" as an invisible
synonym.  ckuus7.c, 18 Nov 93.

Discovered that TELNET'ing from OS/2 C-Kermit to a host with a long name
tended not to work.  In one case ("telnet martini.eecs.umich.edu 3000"), it
would crash C-Kermit completely.  Traced the problem to (a) an inadequate
buffer size in ckotio.c, which in turn was based on a pre-network definition
of the symbol DEVNAMLEN, and (b) the use of strcpy() rather than strncpy() in
ckocon for setting up the status line.  Also, I rearranged the status line
to give more room to display the host name.
ckocon.c 5A(105), ckotio.c 5A(108) 18 Nov 93.

REDIRECT doesn't work on OS/2 network connections, so I changed the REDIRECT
command to fail under these conditions (instead of doing nothing).  ckuusr.c
5A(111) 18 Nov 93.

The INPUT command did not work correctly on VMS systems with DEC TCP/IP (UCX)
when executed over a TELNET connection.  Diagnosis: when the socket_read()
call was interrupted by an alarm/longjmp, subsequent calls to socket_read()
would fail with socket_errno 16, EBUSY, "mount device busy".  Cure: replace
the timer in netinc(), formerly alarm/signal/longjmp, with select().
Complication: the UCX programming environment did not include the necessary
header file, so the needed items (including copyright notice) had to be copied
from 4.4BSD /usr/include/sys/types.h.  Note: It would also be possible to add
select() for MultiNet, but it doesn't seem necessary; scripts, timeouts, etc,
work ok.  ckcnet.h, ckcnet.c 5A, 20 Nov 93.

Now that the VMS and OS/2 INPUT commands are fixed, I tried turning on
CK_BURST again (speedup for INPUT command by detecting bursts, code from Chuck
Goodheart at NASA).  It works in MultiNet on the Alpha.  It works in MultiNet
on the VAX.  It works in UCX on the VAX.  It works in UNIX.  It works in OS/2
on both serial and TCP/IP connections.  And it's fast.  Tested with many
services directory entries.  ckuus4.c, 20 Nov 93.

Added a new variable \v(cps), that tells the speed in characters per second of
the last protocol operation.  ckuusr.h, ckuus4.c.  20 Nov 93.

Added a new function \fsize(filename), which returns the size of the given
file.  ckuusr.h, ckuus4.c.  20 Nov 93.

Changed SHOW FUNCTIONS and SHOW VARIABLES not to list invisible items.
ckuus5.c, 20 Nov 93.

Peter Manzella at DEC noticed that MSEND commands could fail in VMS because of
a memory leak in ckuusr.c.  Solution: (1) increase the size of the buffer for
VMS from 1K to 4K (since it needs it, and can afford the memory); (2) plug the
memory leak.  The same thing could happen in UNIX as a result of
tilde-expansion.  ckucmd.h (CMDBL definition), ckuusr.c 5A(112), 20 Nov 93.

Added a trailing catch-all #else clause for the new CK_TMPDIR section in
the RECEIVE command, suggested by David Lane.  ckuusr.c, 20 Nov 93.

Changed SET KEY to allow { braces } around the key definition, like OUTPUT,
INPUT, ECHO, and other commands, to allow easier specification of strings
with leading and/or trailing blanks, and for consistency with all the other
commands.  ckuusr.c, 20 Nov 93.

Noticed that curses did not always do a great job of optimizing screen
writes, particularly in the "estimated time left" slot, so I added 3 lines
of code to screenc() so Kermit could optimize this itself.
ckuusx.c, 21 Nov 93.

From Kai Uwe Rommel, 21 Nov 93 (begin quote):

I have fixed the problems. Included I send a few diffs and a new ckotio.c,
because I took the opportunity for a few cleanups in this module.

I have also made changes to allow compilation with IBM's TCP/IP 2.0, which has
a 32-bit socket interface.  Unfortunately, this has the implication, that now
*two* DLL's are required, SO32DLL.DLL and TCP32DLL.DLL.  Also, the executable
doesn't run with TCP/IP 1.2.1 any longer.  So, we should make the distributed
32-bit executable for TCP/IP 1.2.1 and it also runs with TCP/IP 2.0.  I made
changes only to allow someone to recompile C-Kermit if he has only TCP/IP
2.0.  To fully support it, we will have to wait until I finally find the time
to restructure the TCP/IP support.

I have, BTW, dropped the IBMSELECT code, because it is not needed, both TCP/IP
1.2.1 and 2.0 support the BSD select() call and that is more portable.

Another problem: It is currently not possible to check for the return code of
programs run via zshcmd().  In addition, the exit code was not returned
correctly from zsyscmd() in the aegis and OS/2 cases.  I have somewhat quick-
fixed zshcmd() for the OS/2 case to allow the "IF FAIL" command to work.  The
UNIX branch has to be fixed too.  However, that only allows to check if the
return code is not zero.  Sometimes it would be convenient to determine the
exact exit code of the program.  How about adding a variable \v(exitcode)
which holds the return code of the last program run via zshcmd() or zsyscmd()?

My current wish list of things I would like to do looks like:
- Fix timed keyboard input with an additional thread instead of alarm()
- Restructure TCP/IP code to support multiple vendors with one executable
- Allow remote operation over serial lines and TELNET connections
- Add Tektronix emulation

(End quote)

Built 16- and 32-bit OS/2 versions OK, 21 Nov 93; put cko190.zip up for
testing on net.  All reactions so far are positive.

Another INPUT command speedup: Rather than always doing 1-second timed reads,
time each read for the amount of time left in given timeout interval.  This
reduces the number of system calls considerably, and still works fine --
succeeds when it should succeed, fails when it should fail, terminates
correctly under both extremes: no characters arriving at all; a steady stream
of characters arriving.  ckuus4.c 21 Nov 93.

Revisited old problem of UNIX and VMS CONNECT showing a couple garbage
characters upon first accessing a second or subsequent connection.  It was
just a matter of having the CONNECT module reset its i/o buffer pointers
whenever it knew it had a new connection, or that the current connection had
terminated because of an i/o error.  CKVCON.C (VMS) 5A(031), ckucon.c (UNIX)
5A(058), 23 Nov 93.

When transferring a file with packets longer than about 2300, debug() calls
would fail because the text to be logged was longer than the debug-record
buffer.  This made it tough to track down certain kinds of errors related to
long packets.  I changed the debug code to grow the buffer as necessary,
dynamically.  ckuusx.c, 24 Nov 93.

Moved closing of debug log to just before _exit() is called, so now we can log
the actions of ttres(), ttclos(), etc.  Reorganized UNIX ttclos() to not do a
lot of silly things to the command terminal, especially if it was using stdin
(file descriptor 0) to communicate with it.  ckutio.c, 24 Nov 93.

Added new WRITE-LINE (synonym: WRITELN) command.  Just like WRITE, except
it writes its argument string in the form of a line or record, appropriate to
the underlying operating system.  This lets scripts create output files
in a system-independent fashion.  ckuusr.c 5A(113), 24 Nov 93.

Change ttclos() in ckutio.c for UNIX to unset the TIOCSINUSE flag for the
device, since this bit had been set for it in ttopen().  I'm not sure if this
fixes any problem, but it shouldn't hurt.  Also, changed sysinit() to call
priv_ini() before doing anything else at all.  Apparently some UNIX versions
(386BSD, etc) won't allow a set[gu]id program to open /dev/tty to get the
terminal modes, etc, so this makes Kermit's effective UID be the user's real
UID before any attempt is made to get terminal modes, etc.  ckutio.c 5A(117)
24 Nov 93.

Removed "#define WAIT_T pid_t" from ckcdeb.h (within #ifdef POSIX).
Apparently, this is just completely wrong -- nowhere is the argument to wait()
a pid_t; it's always either an int or else a struct of some kind.  According
"Portable C Software", it's always safe to call wait() with an (int *).
ckcdeb.h 24 Nov 93.

Changed lockfile for 386BSD from /var/spool/uucp to /var/spool/lock --
suggested by many people.  makefile.

Changed ckhost(), the routine that gets the local host name, to call
gethostbyname() in 386BSD, rather than utsname().  Suggested by Nick Sayer
<mrappe@quack.kfu.com>, who says 386BSD (a.k.a. Jolix 0.1+pk0.2.4) didn't have
utsname().  ckuusx.c.

Chased down a report that SET DIAL INIT-STRING didn't work when invoked from
a macro.  As far as I can tell, it works fine.  However, SHOW DIAL did not
report your DIAL INIT-STRING or PREFIX if you had not previously SET MODEM to
something, which could be misleading.  ckudia.c 5A(051) 24 Nov 93.

The file attributes structure, zsattr, defined in ckcdeb.h, contained a member
called passwd.  But some C compilers can't deal with structure members having
the same names as other identifiers.  This killed C-Kermit compilation under
Altos Xenix 3.0.  Reported by Ken George <nsaho@tuns.ca>.  ck*fio.c, 24 Nov 93.

Fixed BSEND and TSEND macros in standard CKERMIT.INI file; they would mess
up if given wildcards.

Fixed SET HOST and TELNET commands to automatically SET CONTROL PREFIX 255
for TCP/IP connections.  This omission pointed out by Bill Glass.  ckuus7.c,
25 Nov 93.

INPUT commands, when executed from VMS C-Kermit in remote mode for reading
material from the console terminal (e.g. for checking terminal answerback
sequence), were not working right because the VMS version of coninc() did not
check to see if it timed out in certain cases and returned a character value
like 0 or 127 rather than -1 in these cases.  Fixed in coninc(), CKVTIO.C
2.0-064 25 Nov 93.

VMS C-Kermit session logs were being written in Stream_LF format, but still
contained carriage returns, which made them look funny when viewed in VMS
editors (little arrows showed up at the end of each line).  This was fixed by
opening the session log with "rfm=stm" (new) as well as "ctx=stm".  Suggested
by Jason Seaman <jason@wccf.mit.edu>, Whitaker College, MIT.  CKVFIO.C
2.0-105, 25 Nov 93.

Executing a series of file transfer commands from a command file or macro took
an inordinate amount of time because of long, annoying pauses between each
command.  It seems there were some gratuitous sleep(1)'s and sleep(2)'s in the
protocol module.  These were to allow "nonblocking" mode changes to take place
between command and protocol mode.  These sleeps really had no business in the
protocol module, and should be placed -- if necessary! -- in the appropriate
system-dependent modules.  Removing them makes multiple local-mode transfers
(send this, send that, send another, ...) go just as fast as a single wildcard
transfer.  For remote-mode transfers: same speedup, but you have to remember
to put SET DELAY 0 in your command file!  ckcpro.w 5A(057), ckutio.c 5A(118),
25 Nov 93.

Built today's version on SunOS 4.1.3, NeXTSTEP 3.0, Dell System V R4,
OpenVMS/VAX, OpenVMS/AXP, Linux 0.99.13, RS/6000 AIX 3.1, DEC OSF/1-AXP.

A couple minor adjustments for FreeBSD to yesterday's code from Scott Mace
<smace@freefall.cdrom.com>: declaration of sys_errlist[] in ckcfn3.c, SET
SPEED keyword list in ckuus3.c, vanity banner for FreeBSD.  While futzing with
the SET SPEED list yet again, I took the opportunity to redesign how it works.
Kermit-specific symbols are now defined (or undefined) in ckcdeb.h for the
uncommon speeds, and these can be augmented or overriden from the CC command
line using BPS_xxxx or NOB_xxxx symbols.  Also, added 57600 and 115200 for
Linux, and added an as-yet-unused entry for 230400 bps.  Documentation on
speed configuration added to ckccfg.doc.  26 Nov 93.

Added SET CONSOLE as an invisible synonym for SET COMMAND, as the word CONSOLE
is bit more intuitive, and in preparation for possibly adding other console-
related items, like SPEED, PARITY, FLOW, ...  ckuusr.c 5A(114) 26 Nov 93.

About 6-8 weeks ago, Paul Placeway sent in a new set of source for Macintosh
Kermit, in which several bugs were fixed in the Mac-specific (ckm*.*) modules,
and which had been adapted for compilation under Think C as well as MPW C.
These have now been adapted to C-Kermit edit 190, and I made several other
changes too: added a fix to doactive() from Ed Huff <huff@mcclb0.med.nyu.edu>,
apparently overlooked by Paul (?); I filled in the zhome() and zgtdir()
functions (code from Steven Woolgar <famus2@dmi.usherb.ca>); enabled the CD
and PWD commands as well as the corresponding functions and variables.  Some
changes to ckcdeb.h, ckuus5.c, ckuusr.c, ckcfns.c.  Compiles under MPW C 3.2
just fine, seems to run OK too, except CD command still pops up a bunch of
windows on the screen saying "Writing to the console in applications is NOT
supported!".  And zhome() always seems to return the null string.  And
zgtdir() always seems to return the name of the disk, but not the current
folder... (see code for these in ckmfio.c.)  26 Nov 93.

Added makefile entry for FreeBSD from Scott Mace <smace@freefall.cdrom.com>.
29 Nov 93.

Added SET PRINTER and SHOW PRINTER commands for OS/2 C-Kermit.  ckuusr.h,
ckuusr.c, ckuus2.c, ckuus3.c, ckuus5.c.  30 Nov 93.

ID swapping needed for access() in the BSDI version: -DSW_ACC_ID added to
the bsdi makefile entry.  From John Kohl.  1 Dec 93.

A fix from Kai Uwe Rommel for an OS/2 C-Kermit bug: if Kermit was left in
CONNECT mode, the OS/2 system could not be shut down.  ckotio.c 5A(110)
1 Dec 93.

Added SET { FILE, TERMINAL } CHARACTER-SET HP-ROMAN8, to support Hewlett
Packard's proprietary Latin-1-like 8-bit character set.  The translation used
is the one provided by HP (e.g. via iconv); it is not invertible.  Also, fixed
incorrect translation from DGI to Latin-2.  ckuxla.h, ckuxla.c 5A(021),
1 Dec 93.

Fixed TRANSLATE command to work right when one (or both) of the character-sets
is Latin-2 or CP852.  ckuus4.c, 1 Dec 93.

Changed terminal emulator in OS/2 C-Kermit to not display transparent-print
material on the screen, since this is how a real VT102 works.
ckocon.c 5A(106) 1 Dec 93.

Consolidated and rearranged some Mac-specific definitions and declarations:
ckcdeb.h, ckmusr.c, ckmtio.c, ckuus5.c, ckuus6.c.  The need for this was
pointed out by Joe Bearly <jst@itsa.ucsf.edu>.  1 Dec 93.

Fixed sdata() to make a special case for the Atari ST when looking to see
whether to interrupt the D-packet-sending loop, because the ST version of
ttchk() never returns a value > 1.  ckcfn2.c 5A(049) 1 Dec 93.

Changed the packet-mode interruption defaults from 2 Ctrl-C's to 3 Ctrl-C's.
This prevents protocol breakouts when users SET CONTROL UNPREFIX 3 or 131,
because 3 Ctrl-C's in a row will be encoded with a repeat count.  This change
might be a little disconcerting to users, but when they type two and nothing
happens, they will almost certainly type a third.  ckcmai.c, 2 Dec 93.

Added a new compile-time symbol: NDGPWNAM.  If you define this, e.g. in
CFLAGS or KFLAGS, it skips the forward declaration of getpwnam() in ckufio.c,
presumably because it was already declared in <pwd.h>, and avoid "conflicting
types for getpwnam" errors, e.g. from GCC 2.5.6.  ckufio.c 5A(077) 5 Dec 77.

The 32-bit version of OS/2 C-Kermit, when in server mode, failed to redirect
the output of REMOTE DIRECTORY, REMOTE TYPE, and similar commands (which work
by running a copy of CMD.COM via popen()), to the Kermit client.  Rather, the
output would appear on the server's screen.  This was caused by a bug in the
IBM C++ PDK Beta compiler which I have been using.  I upgraded to IBM C++ Set
2.0, and the problem went away.  8 Dec 93.

When Kai Uwe dropped the OS/2 C-Kermit IBM-style select() in favor of the BSD
version, he forgot to update ckotcp.c and ckotcp.def, so OS/2 C-Kermit would
no longer run on systems where IBM TCP/IP was not installed, because of a
dynamic linking error at startup time caused by _bsdselect missing from the
dummy DLL.  Kai Uwe to the rescue.  8 Dec 93.

Bo Kullmar noticed that SET TRANSFER CANCELLATION 3 3 does not quite make it
safe to SET CONTROL UNPREFIX 3.  This is because the code in ttinl() to check
for cancellation ignored the parity bit, so (for example) \x03\x83\x03 could
still kill a transfer.  I changed ttinl() to ignore the parity bit only if
PARITY was not NONE; this should be nearly 100% safe now that all C-Kermit
programs capable of remote-mode operation also do automatic parity detection.
Also, packet-mode interruption should occur only when C-Kermit is in remote
mode, but ttinl() was letting it happen in local mode too, so I changed it.
Also, I removed cancellation code from two C-Kermit programs that included it,
but that could never be in remote mode: Mac Kermit and Atari ST Kermit.
ck[9dlmsuv]tio.c, 9 Dec 93.  (OS/2 and Amiga Kermit were already OK.)

Added a new command-line option, -R (uppercase).  It is tied to a new IF
command, IF REMOTE-ONLY.  This allows us to skip all the local-mode setups
in the initialization files if we don't intend to use C-Kermit in local mode.
ckuusr.h, ckuus6.c, ckuusy.c, ckuus2.c, ckuus4.c.  Also, in making this
change, I discovered that prescan() did not handle bundled arguments
correctly; fixed in ckuus4.c.  ckuusr.c 5A(115), 9 Dec 93.

Edited the standard initialization file, CKERMIT.INI, to skip dial and
services directory setups if the -R command-line option given.  This makes
C-Kermit startup WAY faster.  Ditto for CKERMOD.INI.  9 Dec 93.

Fixed another bug discovered by Bo Kullmar, namely that the automatic
re-mallocation of the debug-log string buffer could make C-Kermit core dump
under certain circumstances.  I flushed this code and used sprintf() formats
to cut off the strings to fit in the buffer.  No more core dumps.  ckuusx.c,
9 Dec 93.

Michael Godfrey noticed that if a SET LINE command has been given (to open a
serial line), a subsequent TELNET command, given without a hostname/address,
acts like a CONNECT command on the serial line.  In OS/2 C-Kermit, which
starts up using COM1 by default, this usually gives a message like "No carrier
detected", which is not exactly what we want to say.  Now it gives an
appropriate error message.  ckuus7.c, 9 Dec 93.

Backed off on yesterday's debug-log change because it turns out sprintf()
field-width formats aren't portable after all.  Yesterday's change totally
broke debug logging on VMS.  Now we just decline to log any string that's
too big for the buffer.  ckuusx.c, 10 Dec 93.

One of the biggest problems with VMS C-Kermit was that it could not send
packets longer than MAXBUF (a SYSGEN parameter), nor longer than any of
various user quotas, such as BYTLM.  Attempts to do this resulted in SYS$QIOW
failing with error 28, Quota Exceeded (as finally revealed by the new and
improved debug log).  The low-level packet writer in VMS C-Kermit, ttol(), has
now been recoded to handle these errors more or (mostly) less gracefully: if a
write attempt fails with error 28, we chop the data in half and try again,
repeating until the write succeeds or the length goes below 70, at which point
we fail.  If the write succeeds, we remember the size for next time, so all
subsequent writes use it and bypass the trial-and-error rigamarole.  The
impact on performance is hardly noticeable, e.g. when sending 9000-byte
packets with MAXBUF = 2064.  So now we no longer have to tell VMS sites to
reconfigure and reboot their systems to solve this problem (though it is still
a good idea to have sufficient MAXBUF and BYTLM on systems where file transfer
is a commonplace activity).  Too see the new code in action, have VMS C-Kermit
send a file using 9K packets, with its debug log active, preferably on a
system with a small MAXBUF.  Then "search debug.log ttol" to see what happened
internally.  The packet sizes are not optimal: This could be achieved using a
binary-search trial-and-error technique, but it's not worth it -- the
performance difference is negligible.  CKVTIO.C 5A(067), 15 Dec 93.

Catch and ignore SIGDANGER in sysinit().  Suggested by Marc Pawliger,
<marc@sti.com>.  This code is enabled if SIGDANGER is defined.  As far as I
know, this holds true only on RS/6000 AIX.  The new code prevents C-Kermit
from being killed by AIX's swap-space police, except as a final resort.
ckutio.c 5A(120), 17 Dec 93.

The VMS version was not releasing the OPEN READ file descriptor, so successive
OPEN READ commands could use them up and then no further files could be
opened.  Noticed by Carl Friedburg, fixed by Terry Kennedy, ckvtio.c 5A(106),
22 Dec 93.

ESC/Tab keyword completion of R into RECEIVE did not work (as C does for
CONNECT and S for SEND).  Noticed and fixed by Mike Freeman
<mikef@pacifier.rain.com>, ckuusr.c, 27 Dec 93.

Added APC support to OS/2 C-Kermit's terminal emulator, and made various fixes
and speedups to it also.  ckocon.c 5A(107), ckuus4.c, 29 Dec 93.

Added SET TERMINAL APC { ON, OFF, UNCHECKED } to control execution of APC
commands received by C-Kermit.  Conditionalized all APC-execution-related code
under CK_APC, so it can easily be activated for the Macintosh too, or any
other C-Kermit implementation that has a built-in terminal emulator.  I might
even consider adding it to the UNIX and VMS versions, but for now, this
feature is activated only in the OS/2 version.
ckuus[r23457].c, ckuusr.h, 30 Dec 93.

Added automatic parity detection and DDK to OS/2 version.  This was done by
adapting UNIX ttinl() to OS/2, which is not the optimal solution.  My original
plan was to restructure the system-independent packet-reader, rpack(), to take
over the many functions that have been improperly delegated to ttinl() and, in
fact, to retire ttinl() altogether.  But this will be a much bigger job than
it seemed, because of the many and diverse ways in which the various ttinl()
versions handle timed reads, blocking vs nonblocking reads, buffering, etc.
We no longer allow the device driver to handle parity; like all other Kermit
programs, OS/2 C-Kermit now does this itself.  In particular, the ttsettings()
routine always sets no parity, 8 data bits.  ckotio.c, 5A(111) 30 Dec 93.

In adding parity detection to the OS/2 version, I discovered that it often
failed because, when looking at the packet control fields, it neglected to
strip the parity bit first, thus misinterpreting (in particular) the packet
length fields.  I migrated this fix into the UNIX, VMS, AOS/VS, and Stratus
versions.   ck[uvodl]tio.c, 31 Dec 93.

When using OS/2 C-Kermit's VT102 emulator with UNIX 'more', I discovered that
lines that were wrapped around the "more?" prompt caused the inverse video of
the "more?" prompt to extend to the right margin, but only when this occurred
at the bottom of the screen, i.e. when scrolling a wrapped line.  Experiments
showed this happening whenever scrolling any wrapped line that had nondefault
video attributes.  Diagnosis: the scroll() routine was creating the new bottom
line using the current attributes.  Cure: the scroll routine should use the
normal, default attributes to create the new bottom line, and then let
subsequent character-writing operations take care of the attributes.
ckocon.c, 5A(108) 4 Jan 94.

Added a new UNIX makefile entry for Amdahl UTSV with TCP/IP support, from
Gerald J. Werner, Marshfield Clinic <wernerg@dgabby.mfldclin.edu>.  5 Jan 94.

Installed new Stratus VOS modules: ckltio.c, cklfio.c, cklnet.c.  From David
Lane <David_Lane@vos.stratus.com>, 5 Jan 94.

Added print / dump screen to OS/2 C-Kermit.  Works in both the 32-bit and the
16-bit version.  Activate during CONNECT mode via Alt-P (or Alt-p), or by
<Escape-character>F/f as in MS-DOS Kermit.  Also had to add special code to
make it work for rolled-back screens.  Entries added to the two CONNECT-mode
help screens.  ckocon.c 5A(109), 6 Jan 94.

Fixed a screen-rollback bug in OS/2 C-Kermit, which occurred when a wrapped
line scrolled off the screen; the wrapped portion was not saved in the
rollback buffer.  The same thing happened with Index (ESC D); that's fixed
too.  ckocon.c 5A(109), 6 Jan 94.

Added TELNET NAWS (Negotiate About Window Size, RFC 1073) to the UNIX and OS/2
versions.  This feature is configured only if the program is built with the
CK_NAWS symbol defined.  Requires new system-dependent support routine,
ttgwsiz(), described in ckcplm.doc.  In UNIX C-Kermit, NAWS works only if the
TIOCGWINSZ symbol is defined and the corresponding ioctl is available and
executes without error.  Defined CK_NAWS by default for SunOS 4.1, NeXT,
System V R4, 4.4BSD, and OSF/1.  Override these default assignments by
including -DNONAWS on the CC command line.  I don't see how to do it for POSIX
or others, but people are encouraged to send in code to make it work for more
systems, or to confirm that it works safely on systems not yet included.
Note: Don't define CK_NAWS unless there is also a ttgwsiz() routine.
ckcnet.[ch], ckutio.c, ckocon.c, etc, 12 Jan 93.

Now that we know how to get the rows and colums of the controlling terminal,
we can change the various "more?"-prompting items to use the actual screen
length.  This includes the HELP command, SHOW MACROS, SHOW VARIABLES, etc.
ckuus[25].c, 12 Jan 93.  Later, this can also be extended to the file transfer
display screen and the command parser keyword and file menus.

Added SIGWINCH trapping for the UNIX version.  If you're running C-Kermit in a
window and you change the window size, UNIX delivers a SIGWINCH signal.
C-Kermit now catches this signal, asks UNIX what its new window size is, and
if a TELNET connection is open (and we have received permission to send NAWS
reports) we send a NAWS report.  Tested in NeXT Terminal window by stretching
the window during C-Kermit CONNECT mode, seemed to work fine for a while, but
then started to fall apart -- it seemed to interfere with some of the other
TELNET negotiations, like echoing.  But only when TELNET'ing from NeXT to
NeXT.  Removing the SIGWINCH code didn't make any difference.

Hmmm...  It seems the problem with the NeXT has nothing to do with NAWS.  Even
versions 188 and 189 had a similar problem, namely that the SIGUSR2 signal
which we use during CONNECT mode to let the lower fork tell the upper fork
about TELNET-negotiated echoing changes does not get delivered immediately,
and sometimes gets lost.  The reason the problem is only noticeable when going
from NeXT to NeXT is that the NeXT TELNET server sends many echoing changes,
rapid fire, and only the NeXT client is exhibiting the signal-delivery
sluggishness.

(Well, I spent two days on this one and could not solve it.  Then I discovered
that if I ran Kermit in a Stuart window rather than a Terminal window on the
NeXT, it worked perfectly.  It also works fine if I TELNET to the NeXT and
start Kermit in a TELNET session -- i.e. not in any kind of NeXT window.)

(This note inserted Aug 13, 1994: The changes that were made to the CONNECT
fork signalling in July-August 1994 have cleared all of this up, and now
C-Kermit can be used under Terminal just as well as under Stuart.)

Added CK_NAWS to VMS version.  Code for ttgwsiz() supplied by Mark Berryman
at SAIC.  CKVTIO.C 5A(069) 14 Jan 94.

Fixed a bug in the VMS version that I introduced when I moved the tn_ini()
call to be inside netopen(), which resulted in initial TELNET negotiations
never being sent.  ckcnet.c 5A(025) 14 Jan 94.

Added NOSIGWINCH symbol to allow SIGWINCH trapping be disabled without
disabling the NAWS feature itself.  ckccfg.doc, ckcnet.c, 14 Jan 94.

Fixed some dependencies in the UNIX makefile.  14 Jan 94.

Added NODISPO symbol to allow C-Kermit to be built to always refuse incoming
MAIL and REMOTE PRINT files.  ckcfn3.c, 14 Jan 94.

Jeff Altman <p00118@psilink.com> noticed that sequences of bold characters
would alternate between bold and regular.  The fix turned out to be rather
complicated, since it had to work for both normal and reverse-video screens,
and in working on this I discovered that the handling of DECSCNM, ESC [ ? 5
h/l, reverse-video/normal screen (i.e. the one that flips your entire current
screen between normal and reverse video), was totally broken.  Previously, it
would (a) only affect the rightmost 1/4 of an 80-column screen, and (b) it
wasn't "sticky" -- i.e. subsequently received characters would be displayed in
the opposite mode.  Much code was rewritten and tested successfully, and it
now works independently of your screen colors, etc.  ckocon.c 5A(112),
15 Jan 94.

Added additional printing capabilities to OS/2 C-Kermit's terminal emulator
via host-generated escape sequences.  All these are only for the 32-bit
version, since the 16-bit version crashes with a stack overflow if they are
used.  For the VT102 emulator:
 . ESC [ 0 i, print current screen (also ESC [ i).
 . ESC [ ? 1 i, print current line (i.e. the line where the cursor is).
 . ESC [ ? 19 h/l, select print extent (h = full screen, l = scrolling region).
   This applies when ESC [ 0 i or ESC [ i is received.

And for the VT52 emulator:
 . ESC V, print current line.
 . ESC ], print current screen.
 . ESC W, turn on transparent printing.
 . ESC X, turn off transparent printing.
 . ESC ^, autoprint on (treated like transparent print).
 . ESC _, autoprint off (treated like transparent print).

Implemented SRM (Send/Receive Mode), for host-controlled remote/local echo
in the VT102 emulator, ESC [ 12 h/l (h = remote echo, l = local echo).

Fixed VT52 reverse index.

Fixed an oversight in the new APC code, namely that if an APC, OSC, or similar
string-bearing escape sequence starts to arrive but never finishes, there was
no way to break the deadlock.  Now "reset terminal" (Alt-=) does it.

Restored host-directed switching between US and UK sets in VT102 emulation,
but ONLY if the terminal character-set is ASCII.  All other character-set
selections must be made by the user, via SET TERMINAL CHARACTER-SET.  That's
because this is a VT102, not a VT220 or higher, which allows the host to
control character-set designation and invocation.  ckocon.c 5A(112) 15 Jan 94.

After discussions with Jeffrey Altman about OS/2 C-Kermit, added a new
feature: SET { SEND, RECEIVE } PATHNAMES { ON, OFF }.  This applies to the
handling of filenames when SET FILE NAMES LITERAL is in effect.  SET SEND
PATHNAMES ON means to leave pathnames on outbound file names, which is the
default for compatibility with earlier behavior.  OFF means to strip path
information, leaving only the name.  SET RECEIVE PATHNAMES applies to the
filenames in incoming file header packets; ON means to leave the name alone
and attempt to use it as-is, OFF means to attempt to strip path information
ON THE ASSUMPTION that any path information found there would be in the
notation of the local file system.  If not, the results are unpredictable.
Use SHOW FILE to display the SEND/RECEIVE PATHNAME settings.
ckcmai.c, ckuus[r247].c, ckuusr.h, ckcfns.c, 16 Jan 94.

After the above, Jeffrey sent in new copies of ckcdeb.h, ckcfns.c, and
ckufio.c to allow OS/2 C-Kermit to accept incoming files that had long or
nonstandard names (e.g. mixed case, many periods), even on FAT file systems,
even when FILE NAMES LITERAL is in effect.  Before attempting to open the
file, C-Kermit checks to see if the name would be OK.  If not, it converts it
to a legal FAT (8.3) name.  ckcdeb.h; ckcfns.c 5A(096), ckufio.c 5A(078),
16 Jan 94.

Added CK_NAWS capability for AIX/6000 3.x, Solaris 2.x, Ultrix 4.x.
ckcnet.h, 16 Jan 94.

Kai Uwe Rommel sent in a fix for ckocon.c, for a problem I had noticed
earlier, namely that if you enter the OS/2 command processor directly from
CONNECT mode via <esc-char>!, then upon exit from OS/2 back to the C-Kermit
terminal screen, the entire screen would be blinking -- at least for me (but
not for Kai Uwe).  But even though he couldn't see it, he fixed it.
ckocon.c 5A(113), 16 Jan 94.

Added code to catch the case where the keyboard read() during CONNECT mode on
a TELNET connection is interrupted and returns 0 or -1, with errno == EINTR
(interrupted system call).  Previously, it would spuriously return
successfully with a random character.  Now it retries, up to 10 times, and
either fails or succeeds reliably.  ckucon.c 5A(059), 16 Jan 94.

From Jeffrey Altman, code for OS/2 version to create the directory for an
incoming file, if possible, when the incoming filespec includes directory
information.  ckotio.c 5A(112), ckufio.c 5A(078), ckcfns.c 5A(096), ckcdeb.h,
16 Jan 94.

Corrections from Jeff to yesterday's directory-creation code.  Also, the OS/2
version, upon receiving a file whose name is illegal for the FAT (DOS) file
system, will save the illegal name in the file's Extended Attributes before
creating the file with a valid FAT name.  Thus the "LongName" will still be
visible from the OS/2 desktop or when the file is copied to an HPFS volume.
EA stuff works only in the 32-bit version, since the MSC 6.00 compiler/linker
won't swallow it.  ckcfns.c 5A(097), ckufio.c 5A(079), 17 Jan 94.

Vincent Fatica <vefatica@mailbox.syr.edu> reported that OS/2 C-Kermit still
messed up "more" displays.  Turns out he was using a VT220 or higher terminal
type on the host and it was sending ESC [ Pn m sequences with Pn's (22-27)
that are not supported by the VT102; these turn off selected types of
highlighting individually: 22 = Turn Off Bold; 24 = Turn Off Underline;
25 = Turn off Blink; 27 = Turn Off Reverse Video.  These are now implemented,
and they work fine in all combinations.  ckocon.c 5A(117) 17 Jan 94.

HOWEVER, in getting this to work, and also as a result of fixing the
"whole-screen reverse/normal video" (DECSCNM) feature, I discovered that the
whole idea of having special user-selectable colors for reverse video was a
bad idea.  The code became horrendously tangled and big because of this, and
still many things didn't -- and could never -- work.  For example, it did not
take into account the host's ability to send color-changing commands per
character.  Nor, for that matter, the propensity of some video adapters to
interpret the "blink" bit as a background color change.  So from now on,
reverse video is reverse video; it simply swaps the fore- and background
colors.  Everything works right now; you can even display all the colors of
the ANSI spectrum, in all conceivable mixtures of attributes, flip the screen,
and flip it back again, with no loss or distortion of colors or attributes.

A new Alt key was added to flip the screen from the keyboard: Alt-R (Reverse
the Screen).  And a visual bell was added: SET TERMINAL BELL { AUDIBLE,
VISUAL, NONE }, as in MS-DOS Kermit.  ckuusr.h, ckuus2.c, ckuus7.c, ckocon.c,
17 Jan 94.

Jeff A. found out how to enable directory creation for the 16-bit OS/2 version
so I added that.  ckufio.c 5A(098) 18 Jan 94.

I made SET RECEIVE PATHNAME apply at all times, not just with SET FILE
NAMES LITERAL.  ckuus2.c, ckcfns.c 5A(080) 18 Jan 94.

Fixed OS/2 C-Kermit to strip off disk letters when sending files, except
when FILE NAMES are LITERAL *and* SEND PATHNAMES are ON.  ckcfns.c 5A(099),
19 Jan 94.

Added automatic directory creation to UNIX version.  Redesigned and rewrote
zmkdir(), added its specification to ckcplm.doc.  When an incoming file
includes a directory name in the file header packet, an attempt is made to
create the specified directory if SET RECEIVE PATHNAMES is ON.  In UNIX, any
directories that are created inherit the permissions of their parents, and the
owner and group of the user who is running the Kermit program.  Naturally,
directory creation fails if the user lacks the appropriate permissions.
ckcfns.c, ckufio.c 5A(081), 19 Jan 94.

Added skeleton of REXX command to the OS/2 version.  Jeff A will fill it
in.  To activate the REXX interface, define CK_REXX.  ckuusr.h, ckuusr.c,
ckuus3.c, ckuus4.c, 19 Jan 94.

Changed OS/2 version to send the system ID for OS/2, not UNIX!, in the
Attribute packet.  ckufio.c, 19 Jan 94.

In OS/2 version, added REXX and REXXFILE commands.  Jeffrey Altman filled in
the system-dependent execution thereof in ckotio.c, 5A(113), 20 Jan 94.
REXX executes a Rexx command.  REXXFILE executes a Rexx program from a file.
Both of these return the Rexx return code (a string) in the variable \v(rexx).
ckuusr.h, ckuusr.c 5A(117), ckuus2.c, ckuus3.c, ckuus4.c, 19 Jan 94.

Enabled SET FILE TYPE LABELED for OS/2.  Jeff Altman will fill in the
system-dependent code.  A new symbol, CK_LABELED, governs this feature now;
previously it was dependent on VMS.  LABELED transfers will allow OS/2 files
to be sent with all their attributes, either for direct use on another OS/2
system, or for archival on a non-OS/2 system.  ckcfn3.c, ckuus4.c, ckuusx.c,
20 Jan 94.

Added code to append ".~number~" to the OS/2 longname in the extended
attributes block whenever we rename a file using znewn().  ckcfns.c 5A(100),
20 Jan 94.

Changed OS/2 C-Kermit to *never* send a disk letter, regardless of FILE
NAMES or SEND PATHNAMES settings.  (Of course, you can still send a disk
letter in an "as-name").  ckcfns.c 5A(100) 20 Jan 94.

Fixed OS/2 C-Kermit's terminal emulator to preserve brightness of foreground
colors selected by SET TERMINAL COLOR.  This feature was destroyed in the
edits of January 17.  Blinking, however, still does not work right, and so
is simulated by a high-intensity background.  ckocon.c 5A(115), 21 Jan 94.

Disabled Rexx features in 16-bit OS/2 version, because MSC can't cope with
the rexxsaa.h header file.  21 Jan 94.

Added a small modification to ttopen() for POSIX-based Lynx OS 2.2, in which
file descriptor zero is read-only rather than read-write, from Simon Park
<si@wimpol.demon.co.uk>, plus a new makefile entry for this system.
ckutio.c 5A(123), 24 Jan 94.

Replaced the previous HP Roman-8 / Latin-1 character translation tables, which
were not invertible, by new invertible tables, approved by HP.
ckuxla.c 5A(022), 24 Jan 94.

Added a new variable, \v(newline), that contains the appropriate newline
character or sequence for each system where C-Kermit runs (UNIX = LF,
MAC = CR, OS/2 = CRLF, etc).  Use this when writing script programs that
output data to a file and you need to terminate lines in a system-independent
way.  I considered making this a simple backslash escape, \n, but this could
have wreaked havoc with existing scripts in which \n simply quoted the "n"
character.  ckuusr.c 5A(118), 24 Jan 94, ckuus4.c, ckuus5.c.

Created a new routine, domac(name,definition).  Call it with a macro name
and definition string, and it defines the macro and executes it.  This is
now called by the APC code in the CONNECT command, but it is also usable
in any other context.  Works OK with APC.  This will soon be used also to allow
OS/2 Rexx programs to execute Kermit commands.  ckuus5.c, 24 Jan 94.

Integrated Jeff Altman's new code supporting OS/2 Extended Attributes in
SET FILE TYPE LABELED operations.  In other words, now you can actually use
SET FILE TYPE LABELED to transfer OS/2 files, just as you can with VMS files.
ckufio.c, etc etc.  24 Jan 94.

Jeff Altman filled in the function that exports C-Kermit commands to Rexx.
So now you can run a Rexx program under Kermit and the Rexx program can
execute Kermit commands.  Rexx support is still activated only in the 32-bit
version, due to problems with the 16-bit libraries.
ckotio.c 5A(115), 25 Jan 94.

Removed OS/2 Extended Attribute support from 16-bit OS/2 version, since it
could not be compiled with MSC.  Ditto labeled file transfer.
Many modules, 25 Jan 94.

Added SET FILE LABEL {ARCHIVE, READ-ONLY, HIDDEN, SYSTEM, EXTENDED} {ON, OFF}
so user can include (ON) or exclude (OFF) the given attributes when
transferring OS/2 files in LABELED mode; 32-bit version only.  By default all
but ARCHIVE are ON.  ckcmai.c 5A(190), ckcdeb.h, ckuusr.c 5A(119), ckuus2.c,
ckuus5.c, ckuus7.c, ckcfns.c 5A(102), ckcfn3.c, 25 Jan 94.  Labeled file
option bits are passed in the lblopts member (a bit mask) of the filinfo
struct.  The low-level ckufio.c routines still need the OS/2-specific code to
handle them, and the format of the OS/2 labeled file needs to be expanded to
include them.

Jeff Altman suspected there might be a memory leak somewhere in the DIAL
command, so I went through it thoroughly to make sure that all writes into
buffers were checked in advance against overflow, and that all malloc'd items
were free'd before returning.  Found several cases where these actions were
not taken previously, so memory leaks were definitely possible, especially
when a phone number or a device name was VERY long.  ckudia.c 5A(052),
29 Jan 94.

Harvey Stein at Hebrew University pointed out that there was no way to have
C-Kermit dial from a command file before the prompt was issued, and still be
able to interrupt dialing and get to the prompt.  It seems that the rules for
command order listed on "Using C-Kermit", p.323, were not being followed.  It
should have been possible to interrupt '-C "command list"' execution and get
back to the prompt, but it wasn't.  So I moved a block of code.
ckcmai.c 5A(190), 29 Jan 94.

Discovered that on at least one operating system, SunOS 4.x, C-Kermit's
lowest-level command parsing function -- gtword() in ckucmd.c -- was failing
to detect "end of file" when commands were coming from redirected standard
input (e.g. "kermit < foo").  Debugging showed that errno was being set to
EINTR for some unfathomable reason, which was being explicitly checked for as
an exception to EOF detection, because it could occur when a backgrounded
C-Kermit was re-foregrounded.  So I added a counter to break out of the
infinite loop that results from this situation.  ckucmd.c 5A(054), 30 Jan 94.

Noticed that if you start up UNIX Kermit with "&" so it is in the background
initially, then the command parser doesn't work right after putting it in the
foreground.  In this case, Kermit was not able to get its console modes when
it started up, so concb() was not able to modify them for "cbreak" mode.
Solution: If concb() is called when the original console modes are not yet
available, AND we know we are not in the background, then try to get the
console modes before giving up.  concb(), ckutio.c 5A(124), 30 Jan 94.

Added automatic command retry.  If at interactive prompting level, a command
has a syntax error, the next prompt will include the fields that were correct
(if any); for example:

  C-Kermit>set block foo
  ?No keywords match - foo
  C-Kermit>set block _

(where "_" shows the position of the cursor).  ckuus5.c, 30 Jan 94.

Added command recall.  It is enabled if DCMDBUF is defined, since it makes
liberal use of malloc().  To recall a command, type Ctrl-P (familiar to EMACS
users) or Ctrl-B (familiar to VMS users).  Repeatedly doing this moves up in
the command history buffer, up to the top.  Ctrl-N moves back down.  Effective
only for interactive-mode commands.  Tested on UNIX, OS/2, VMS -- should work
everywhere, not system-dependent at all (as it would be, for example, if we
allowed arrow keys to be used for this purpose!).
ckucmd.c 5A(054), 30 Jan 94.

Added SET COMMAND RECALL-BUFFER-SIZE command, to let the user establish the
size of the rollback buffer.  ckuusr.h, ckuus3.c.  ckuusr.c 5A(120), 30 Jan 94.

Added SHOW COMMAND to display SET COMMAND items.  ckuus5.c, 30 Jan 94.

Updated general and specific help texts.  ckuus2.c, ckuus6.c, 30 Jan 94.

Changed OS/2 CONNECT command to print the error status code if it gets
an i/o error.  ckotio.c 5A(117), ckocon.c 5A(116), 2 Feb 94.

Added some parens around "if" conditions in gattr() in ckcfn3.c to force
the IBM OS/2 C++ compiler to use the right precedence.  2 Feb 94.

The change to allow Ctrl-P in OS/2 C-Kermit during command parsing
broke Ctrl-C interruption.  So now we go back to how it was before:
Ctrl-C works again, Ctrl-P is likely to be ignored (or toggle the printer).
ckotio.c 5A(118), 3 Feb 94.

Ric Anderson pointed out a problem with the RENAME command in UNIX and OS/2,
namely that it would hang forever (until user typed Ctrl-C) if the new name
was the name of an already-existing directory.  Reason unknown, but the
solution went approximately like this:

 1. Change cmofi() (parse output filename) to return 2 if user types the
    name of an existing directory.  This allows anybody who calls cmofi()
    to decide whether to handle directory-changing, or just diagnose an error.
    ckucmd.c 5A(055) 5 Feb 94.

 2. Changed zrename(old,new) to "do the right thing" if the second argument
    is the name of an existing directory, i.e. move the old file into it.
    Also changed zchko(name) to fail if given the name of an existing
    directory.  ckufio.c 5A(083) 5 Feb 94.

This also allowed simple checking in the higher-level command-parsing routines
for when users gave a directory name when an output file name was required,
e.g. in the various LOG commands, etc.

Applied patches to IBM OS/2 C/C++ compiler, bringing it up to Service Level
CT00006.  Hard to say yet what good this did, but it did not fix the Ctrl-C
during DIAL problem (at least not for me).

OS/2 C-Kermit's SET FILE COLLISION UPDATE feature was not working very well.
For example, If I download (say) 45 different files, and then I tell OS/2
C-Kermit to SET FILE COLLISION UPDATE, and then download the exact same set of
files (without having touched any of them in the meantime), OS/2 C-Kermit
failed to reject about 50% of them.  It appears that OS/2 stat(), when asked
for the file's modification date/time, always returns an even number (which is
strange, because the OS/2 DIRECTORY command shows odd-numbered seconds).
Thus, many incoming files will appear to be newer than the OS/2 files that are
exact copies of them.  So I added OS/2-specific code to zstime() in ckufio.c
to ignore a one-second difference if the local modification time is an even
number.  5 Feb 94.

I finally tracked down what was killing typeahead in the interactive command
parser: the call to concb() that preceded each command in the main loop of the
parser() function.  Although concb() does not explicitly clear the keyboard
input buffer, apparently it does this as a side effect of setting modes.  In
fact, this call to concb() was unnecessary, since the console is already put
into cbreak() mode upon entry to the parser() function, and also by popclvl()
whenever the command stack pops back to top level.  So now typeahead works
between interactive commands, but it still can't be done while a command
file or macro is active.  That's because a command file or macro might
itself request keyboard input, or go into CONNECT mode, or go into protocol
mode.  ckuusr.c 5A(121), ckuus5.c, 6 Feb 94.

The DIAL command (dodial() in ckuus6.c) was changed to save the current parity
(which might have just been picked up from a dialing directory entry) and set
the parity to NONE before calling the actual DIAL module, ckdial() in ckudia.c,
and then to restore the parity when after ckdial() returns.  Since ckudia.c
has its own internal SIGINT trap, this works even if the DIAL command is
interrupted.  This change should facilitate dialing with the new breed of
buggy modems that is sensitive to parity, as well as dialing through TCP/IP
TELNET modem servers.  Lots of testing needed!  ckuus6.c, 6 Feb 94.

Also, found one place in the ckdial() function where it was returning
after having set up some signal()s without calling dreset() to put them
back.  Maybe this explains the crashes when typing Ctrl-C while dialing.
ckudia.c 5A(053), 6 Feb 94.  (Later: No, it doesn't -- the program still
crashes consistently on OS/2 if you Ctrl-C a DIAL command that is trying
to dial a modem that is not turned on.)

It has bothered me for years that END and RETURN can't serve their normal
functions when used in the command-list of a FOR, WHILE, or XIF command,
simply because these three commands are implemented as macros themselves.  Now
they do work as expected.  A small piece of code was added to each command,
which, before popping the command stack from the current level (macro or TAKE
file), looks to see if the currently executing macro (if any) is one of these
commands, and if so, pops the command stack twice and copies the macro
arguments up two levels (_putargs), and keeps doing this until it encounters a
command level in which none of these commands is executing, and therefore
works correctly with nested XIF/WHILE/FOR commands in any combination.  Tested
fairly extensively, but obviously more widespread testing is needed.  New
cketest and ckedemo files created to exercise this feature.  ckuusr.c,
ckuus6.c, 6 Feb 94.

Bo Kullmar noticed that two Ctrl-N's were required to get a new command
when reversing command recall direction.  Actually, the same was true when
going from down to up (two Ctrl-P's needed).  Fixed, in a rather dumb way,
in ckucmd.c 5A(056), 6 Feb 94.

Extended dialing parity business from yesterday to mdmhup() routine, the
one that escapes back to the modem and gives a modem-specific hangup command.
ckudia.c 5A(054), 7 Feb 94.

Updated OS/2 code from Jeff Altman:
 . SET FILE TYPE LABELED now includes regular (DOS) attributes.
 . Rexx functions finished up.
 . Documentation provided.

Added UNIX makefile entry for Bull DPX/2 BOS/X.  7 Feb 94.

Fixed "invisible" attribute handling in OS/2 C-Kermit terminal emulator,
and enabled handling of the (undocumented) DEC VT220 escape sequence,
CSI 28 m, "turn off invisible selectively", after verifying that this works
on a real DEC VT320 terminal.  Also, radically simplified handling of the
invisible attribute and removed lots of complicated code -- Joe Doupnik's
idea: if we're invisible mode, just write any graphic character as a space.
ckocon.c 5A(118), 8 Feb 94.

Added an optional "switch", /QUIETLY, to the CONNECT command, to skip the
verbose CONNECT message.  ckuusr.h, ckuusr.c 5A(122), ckuus4.c, 8 Feb 94.

Implemented SET DEBUG SESSION in OS/2 C-Kermit.  Forces TERMINAL WRAP ON.  C0
control characters are shown as corresponding letters in the underline color,
e.g. Ctrl-A is shown as underline A.  DEL is shown as underline question mark.
C1 controls are shown as IBM PC characters from code page columns 8 and 9, but
in underline color.  All other characters are shown as-is.  TELNET
negotiations are written out in words, one per screen line (a change from
before, when they were all run-on).  ckocon.c, ckcnet.h, ckcnet.c 5A(027),
8 Feb 94.

Added SET TERMINAL DEBUG { ON, OFF } as a synonym for SET DEBUG SESSION.
ckuusr.c, ckuusr.h, ckuus5.c, ckuus7.c, 8 Feb 94.  Also added this to SHOW
TERMINAL display.

Added Alt-D to OS/2 C-Kermit's terminal emulator to toggle debugging on and
off, and added an indication to the status line.  ckocon.c, 8 Feb 94.

Fixed a bug in the OS/2 C-Kermit terminal emulator, in which it would escape
back to the prompt if it received an APC sequence, even if APC was OFF.
ckocon.c, 8 Feb 94.

Added another keyboard ID to OS/2 C-Kermit's \v(keyboard) list.  ckotio.c
5A(121), 8 Feb 94.

Enabled VT100 and VT220 emulation in OS/2 C-Kermit.  The VT220 emulation is
not complete, but here's what we have so far:

 . You can now SET TERMINAL TYPE { VT52, VT100, VT102, VT220 }.
 . Kermit will identify itself accordingly in response to DECID or DA.
 . SHOW TERMINAL shows the current terminal type and ID string.
 . VT100 is exactly like VT102 except no character insert/delete.
 . 8-bit controls (like CSI = 155) are now accepted, but you must SET TERMINAL
   BYTESIZE 8 (and, of course, SET PARITY NONE) in order for them to work, and
   you also must set your terminal character-set to something other than
   TRANSPARENT or any of the IBM code pages or other sets that put graphic
   characters in the C1 area.  C1 controls are handled by converting them (in
   just one place: the rdserwrtscr() routine) to their 7-bit escape-sequence
   equivalents internally -- thus session logging, debug display, etc, will
   not reveal them; e.g. CSI shows up as "ESC [".  This was a cheap approach,
   but it works fine except for the logging.
 . If SET TERMINAL ANSWERBACK is ON, C-Kermit now includes terminal-type name
   in the answerback string, e.g. "OS/2 C-Kermit 501190 VT220".
 . The VT220 extensions added earlier take care of the most common needs
   of VT220-and-above applications; tests mostly OK with EDIT/TPU (EVE) on
   VMS, but more work needed to fill in some higher-level escape sequences
   that are not yet handled: character-set designation & invocation, 
   many reports, etc.

ckocon.c, ckuus5.c, ckuus7.c, 8 Feb 94.

Added nextfat UNIX makefile entry from Ronald C.F. Antony <rcfa@cubiculum.com>;
generates a NeXTSTEP binary that will run on both Intel and Motorola platforms.
14 Feb 94.

Found and fixed the problem in the OS/2 C-Kermit VT terminal emulator with
EDT/TPU (EVE): Erase In Display (ED), CSI Pn J, was being handled incorrectly.
Although the VT terminal manuals don't say it, this sequence sets cleared
cells to the default attributes, not to the prevailing attributes -- verified
by experimentation on real VT terminals.  Now EDT/TPU works nicely, even in
VT220 mode on an 8-bit connection with 8-bit controls.  ckocon.c 5A(119),
14 Feb 94.

A couple minor syntactic corrections to ckcnet.c and ckotio.c.  14 Feb 94.

Fixed a bad bug noticed by Carlo@sg.tn.tudelft.nl: SET MODEM HAYES (or other),
SET LINE whatever, HANGUP, before a DIAL command had been given, would crash
the program (if it was compiled with the DYNAMIC option) because the modem
response buffer had not been malloc'd yet.  ckudia.c, 15 Feb 94.

Minor correction to ckuus6.c from Steve Walton -- IF REMOTE parsing code
needed to be in #ifdef CK_IFRO..#endif.  15 Feb 94.

Added VT220 DECDSR reports to OS/2 C-Kermit's terminal emulator: printer
status, keyboard dialect.  Now all VT220 reports are supported except
DECDSR/UDK ... 15 Feb 94.

Some minor cleanups -- and LOTS of testing -- of VMS version, especially
when running under DCL.  15 Feb 94.

Added DECDSR/UDK report response to OS/2 C-K VT220 emulator -- it always
replies "UDKs are locked".  16 Feb 94.

Looked into changing VMS C-Kermit to use SYS$COMMAND rather than SYS$INPUT
as the designator for the console device.  This would allow DCL command
procedures to use the CONNECT command even when they did not DEFINE
SYS$INPUT to be SYS$COMMAND.  However, this prevents the command parser from
reading from SYS$INPUT, and therefore prevents the use of "image data" in
DCL command procedures, which would throw most VMS users for a loop.
Conceivably, we could separate the command input from the CONNECT input, but
this would require massive recoding.  Deferred.

Looked into adding user-defined modem hangup strings, similar to SET DIAL
INIT-STRING, etc.  Not easy, because we have not only the string itself to
deal with, but also the escape sequence and guard time; thus we would need
at least 3 or 4 new SET COMMANDS, assuming the Hayes model (pause, +++,
pause, ATH0 or whatever).  And this doesn't even take into account the
method to be used for reading the response.  Deferred.  17 Feb 94.

In view of persistent (and confirmed) reports of C-Kermit crashing on certain
systems (VMS, OS/2), but not others (UNIX), when DIAL commands fail, or when
they are interrupted, I ripped out (a) the "failure-within-a-failure" handler
from ckudia.c, which had nested setjmps, alarms, and signals, and whose
purpose I really never understood (it's Herm Fischer's code from 10 years
ago).  I also removed the Microm modem code that did similar things, and
replaced it with simple, straightforward (input, output) code.  The Microcom
code crashed consistently on VMS.  ckudia.c 5A(156), 18 Feb 94.  This change
didn't do any good at all, foo.

Added SET COMMAND RETRY { ON, OFF }, because one edit 190 previewer complained
that this feature interfered with DCL wrappers he had written for Kermit,
which parsed error messages, etc.  ckuus[235].c, 18 Feb 94.

Fixed command retry to account for variables used in commands, which can
change size during parsing, thus giving partial or garbage fields in the retry
prompt.  Problem noticed by Jeff Altman.  ckuus5.c, 19 Feb 94.

Changed SET KEY to allow inclusion of \K verbs, in the same manner as the
OUTPUT command allows \B or \L to be included, without losing the backslash.
Ditto for \{Kverb}.  All \Kverb-related material is enclosed in
#ifndef NOKVERB..#endif.  ckuus3.c, 19 Feb 94.

Added keyboard verb handling to OS/2 C-Kermit.  Routine sendcharduplex() split
into two routines: (1) sendescseq(), used to send DEC special keys, and (2)
sendkeydef(), used to send user-defined key macros.  sendkeydef() looks for
\Kverbs (including \K{verbs}) and executes them.  New routine dokverb() does
the actual execution.  A new header file, ckocon.h, was added to define
symbols for the keyboard verbs, as well as a table associating the verbs with
their symbols.  ckocon.[ch] 5A(120), 19 Feb 94.

Filled in dokverb() with a few easy verbs: \Kbreak, \Kexit, \Klbreak, \Kdump,
\Knull, \Kreset, \Kignore.  Works fine.  Added DEC F keys, DEC editing keys,
DEC cursor keys, all other DEC key groups except UDKs, the rest of the Kermit
action verbs, etc.  Moved a lot of code out of vt100key(); now it's in
dokverb(), which can be called from various places.

All functions previously available are still available, but rather than being
tied to hardwired scan codes, they are tied to \Kverbs.  This means:
 . You can move them anywhere you want.
 . You can't "lose" them, as you could before if you mapped something else
   over a sacred key, and therefore you can redefine sacred keys.
 . That is, NO keys are sacred; no keys are preempted by Kermit in any
   way that you can't overcome; you can undefine/redefine any and all keys.
 . Key mapping files now contain descriptive verbs rather than magic numbers
   as the definitions.
 . SHOW KEY shows the \Kverb, rather than obscure numeric cross-reference.

Furthermore:
 . The \Kverbs are totally compatible with MS-DOS Kermit (even though
   the scan codes are not!)
 . You can combine characters, strings, and \Kverbs arbitrarily in a
   key definition; e.g. you can put two or more verbs on key, etc.

Examples (for F1):
 . set key \315 \161             ; Any single character
 . set key \315 Any string       ; Any string of ordinary characters
 . set key \315 { Any string }   ; String with leading & trailing spaces
 . set key \315 \KupArr          ; Up-Arrow
 . set key \315 \KupArr\KrtArr   ; Up-Arrow and Right-Arrow
 . set key \315 abc\{KupArr}xyz  ; "abc", then Up-Arrow, then "xyz"
 . set key \315 abc\KupArr xyz   ; "abc", then Up-Arrow, then " xyz"
 . set key \315 \v(time)         ; Time when SET KEY was exucuted (constant)
 . set key \315 \\v(time)        ; Time when key is pressed (variable)

Braces are not required except to resolve ambiguity or to preserve leading
and/or trailing spaces in the definition.  Note that \\v(name) is a special
case.  Other backslash quantities cannot have their evaluation postponed by
"double quoting" in this way; they are simply emitted literally, e.g.
"set key \315 \\%a" causes F1 to send "\%a".

User-defined macros are not supported -- the code's there, but it doesn't
work yet.

Rollback now works differently.  Previously, you could only look at rolled
back screens, but you couldn't do any work in them; while rolled back, only
the rollback keys were operative (except for a horrible hack that let you
print/dump a rolled-back screen).  You couldn't type any of the special keys,
like pop-up help, or Alt-x to get back, etc, and you couldn't transmit any
characters to the host, which was a big pain, because you often want to be
looking at rolled-back material when typing stuff to the host.  Also,
arriving characters were not displayed until unrolled all the way down to
bottom.  Now, all of these restrictions are lifted.

The following \Kverbs are supported:

 (About 70 of them; I'll fill this in later; for now, see ckocon.h.)
 (Basically, there's a verb for every DEC key, like PF4, Gold, Select,
 F20, arrow keys, keypad keys, etc, and each of these verbs tracks the
 terminal type, keypad mode, etc, dynamically, just like in MS-DOS Kermit.)
 (Plus all the Kermit action verbs, like \Kexit, \KupScn, etc...)

The default key mapping is:

 Key           Function     Description
 Scroll Lock   \KholdScrn   Hold Screen
 Up Arrow      \KupArr      DEC up arrow 
 ...
 (I'll fill this in later; for now see macrotabini() in ckocon.c; the
 default mapping is about the same as before.)

The major casualty in all this is the status line and the pop-up help screen.
There is no way of knowing what verbs are mapped to which keys without doing
an exhaustive search of all keys and looking for substrings, plus some verbs
might be mapped to more than one key, etc.  Plus even if we do find the key
that, say, \Kexit is assigned to, we still don't have an easy way to translate
the scan code into "English", especially given the fact that -- hopefully --
the scan codes will change to become compatible with MS-DOS Kermit.

Still to do:

 . Add \v(rows), \v(columns).
 . Add compose-key feature.
 . Implement user-defined keys (UDKs, in the VT220 sense).
 . Add macro execution (\Kfoo, where foo is a user-defined macro).
 . Do something about mode-line and alt-help screen; presently these
   still contain the hardwired Alt-key legends, which will not be true
   if you change the key assignments.

And finally (I was hoping to enlist Kai Uwe's help with this one), it would
be very nice to have OS/2 C-Kermit differentiate among more key combos,
like Alt-x and Alt-Shift-X, and, in fact, to have its scan codes compatible
with MS-DOS Kermit's, so the two programs can share key settings files.

And, finally + 1, to illustrate just the VT220 keyboard setup, there's a
complete key settings that incorporates all VT220 features (I think):
it's in ~kermit/test/ckovtk2.ini.

Corrected SHOW TERM -- it had arrow-key modes reversed.  ckocon.c, 24 Feb 94.

Fixed OS/2 C-Kermit TELNET terminal-type negotiations to send the name of
the terminal currently being emulated.  ckcnet.c 5A(028).

Rearranged the error-handling code in DIAL module, ckudia.c.  Persistent
reports of crashes during dialing were traced (mostly thanks to hints from
Mark Berryman) to the fact that the code (inherited from H. Fisher, circa 1985)
was doing longjmps to places that were not on the call stack.  Apparently,
most UNIX C compilers go out of their way to accommodate this situation, but
on OS/2 and VMS we have guaranteed disaster.  To aid in debugging, I also
added timestamps to certain messages that are shown if DIAL DISPLAY is ON.
I also cleaned up some of the the other messages and made them more consistent.
ckudia.c 5A(057), 25 Feb 94.

Preliminary results look good.  All of these would cause crashes previously
under VMS and OS/2:
                                                 OS/2  VMS   UNIX
  SET MODEM MICROCOM and DIAL                     OK    OK    OK
  DIAL on a Hayes modem that's turned off         OK    OK    OK
  DIAL on a Telebit modem that's turned off       OK    OK    OK
  Ctrl-C before init message                      OK    OK    OK
  Ctrl-C after init message                       OK    OK    OK
  Ctrl-C after dialing message                    OK    ??    OK

One small problem remains: Interrupting VMS C-Kermit DIAL commands repeatedly
sometimes makes it EXIT (just as though the EXIT command had been given).

Added code from <carlo@sg.tn.tudelft.nl> to enable high serial speeds for
Linux.  ckutio.c 5A(125), 26 Feb 94.

Fixed a bug that caused two consecutive "Up" (Ctrl-P or Ctrl-B) commands,
when given at the top of the command recall buffer, to crash the program.
Reported by Marko Teittinen <marko@cs.umd.edu>.  ckucmd.c 5A(057), 26 Feb 94.

From Carlo Kid at the Technical University of Delft <carlo@sg.tn.tudelft.nl>,
fixes for the INPUT command.  It spuriously matched the first character of the
search string except it was also the first character received.  Thus "input 5
oofa" would not match "sofa" (right) but would match "blah sofa" (wrong).
Second, when backing up through previously received characters to restart a
search, it did not always back up to the right place.  ckuus4.c, 26 Feb 94.

Also from Carlo Kid: a new command, MINPUT - "multiple input".  He supplied
the code for the actual string matching, as well as command-parsing code,
etc.  I kept his string-matching code (doinput() routine in ckuus4.c) pretty
much as-is, but totally rewrote the command parsing.

Syntax: MINPUT <sec> [ string1 [, string2 [, string2 [, ... ] ] ] ]

Works just like the INPUT command, except more than one search string is
allowed.  Strings are separated by commas.  If any of the search strings is
encountered within the timeout interval, the command succeeds and the
\v(minput) variable is set to the number of the string that was found: 1, 2,
3, etc.  If none of the search strings is found, the command times out,
fails, and \v(minput) is set to 0.  All SET INPUT paramaters apply - CASE,
etc.  Example:

  minput 30 Login:, Username:, Ready
  if success goto LBL\v(minput)
  end 1 Prompt didn't arrive.

Looks for any of the three strings "Login:", "Username:", or "Ready" and
then goes to one of the labels "LBL1", "LBL2", or "LBL3", depending on which
string was matched.

To include a comma in a string, enclose it in { braces }, or quote the comma
with two (yes, two) backslashes:

  minput 20 {a,b}, c
  minput 20 a\\,b, c

Both of these commands search for either "a,b" or "c".

As in the regular INPUT and REINPUT commands, leading and trailing spaces are
stripped from each search string unless it is enclosed in { braces }.
Example:

  minput 20 {  abc  }, {{ def }},    ghi

searches for "  abc  ", "{ def }", or "ghi".

This feature is included in C-Kermit if (a) NOMINPUT is not defined,
and (b) NOSPL is not defined.  So by default, all versions that include the
script programming language get the MINPUT command.
ckuusr.c 5A(125), 26 Feb 94; ckuusr.h, ckuus2.c, ckuus4.c.

Added zmkdir() for VMS, contributed by Mark Berryman of SAIC
<Mark.Berryman@Mvb.Saic.Com>.  Defined CK_MKDIR for VMS, thus enabling all
of the directory-creation code.  ckcdeb.h, ckvfio.c 2.0-107, 26 Feb 94.

Installed another new LIBCMU from Mike O'Malley.  26 Feb 94.

Changed OS/2 INSTALL.CMD (CKOINS.CMD) to use CKOVTK2.INI rather than
CKOVTK.INI.  Updated OS/2 READ.ME (CKOAAA.DSK) file.  27 Feb 94.

Found and plugged a tiny (1-byte) memory leak in the INPUT command.
ckuus4.c, 27 Feb 94.

In OS/2 C-Kermit, changed default VT cursor key mode to be "normal" (cursor)
rather than "application", and default keypad mode to be "numeric" rather than
"application", in accordance with power-up state of real DEC terminals.
ckocon.c 5A(121), ckuus5.c, ckuus7.c, 27 Feb 94.

Added a call to setcursormode() to doreset() in ckocon.c.  This fixes the
screen if it goes into all-blinking mode, which can happen if you have a
high-intensity background color and Alt-Esc back to the workplace shell,
and then resume Kermit.  Now Alt-= (\Kreset) stops the blinking.  ckocon.c,
27 Feb 94.

Fixed OS/2 C-K's treatment of "Linefeed/Newline Mode".  On a real terminal,
this is controlled by the host via CSI 20 h/l (h = set, l = reset).  This
sequence (LNM) affects both sending (when set, Return and Enter send CRLF) and
receiving (when set, LF, FF, VT are displayed as CRLF).  But Kermit can
control the sending and receiving aspects separately via SET TERMINAL
NEWLINE-MODE and SET TERMINAL CR-DISPLAY.  ckocon.c previously used one
variable (linemode) for LNM, and two others (tlnm and tt_crd) for the
commands, somewhat inconsistently.  Now the linemode variable is eliminated
and the tlnm and tt_crd variables are set and reset appropriately by both
the LNM sequences and the Kermit commands, and used appropriately during
sending and receiving.  ckocon.c, 27 Feb 94.

Added SET KEY CLEAR to restore default key mappings.  ckuus3.c, 27 Feb 94.

Implemented DECTCEM, cursor enable/disable, in OS/2 C-K VT emulator.  Added
cursor-enable and newcursor() calls to doreset().  ckocon.c, 27 Feb 94.

Implemented DECPFF, print form feed mode, in OS/2 C-K VT emulator.  Only
affects host-generated print-screen operations, not user-initiated ones.
ckocon.c, 27 Feb 94.

Added a new \Kverb, \KprintFF, to send a formfeed to the printer.
ckocon.[ch], 27 Feb 94.

Cleaned up OS/2 C-Kermit's scrollback a bit; it seems less confus(ed/ing) now.

Since we now have NO IDEA of \Kverb assignments, I removed references to
Alt keys from the Status Line, and replaced them by escape-character notation
(e.g. "Return: ^]C  Help: ^]?").  I also removed the "Alt-Help" screen,
because it's useless now that all Alt functions can be moved, combined with
other functions, etc, plus the fact that there is no good way to translate
a scan code into a key name (even if the bits are consistent, we still have
national keyboards to contend with).  Finally, I made the \Khelp verb
invoke the regular Escape-Character help screen.  ckocon.c, 27 Feb 94.

Added SHOW KVERBS command to list the available \Kverbs; operative only in
OS/2.  Wrote a nice routine to display them, that arranges them on the screen
in columns dynamically according to the screen dimensions and the width of the
widest keyword (this can be adapted later to other SHOW commands, and maybe
also to "?" menus).  ckuus5.c, 27 Feb 94.

Made new kwdhelp() routine, show \Kverbs and \Functions() with it.

It was bothering me that if you SET EXIT WARNING ON in OS/2 C-Kermit, that
it thought a TCP/IP connection was still open after it had been closed by
the other side (e.g. when you log out).  It also annoyed me that if you try
to CONNECT again, it pops you right back to command mode.  Both of these
problems were because the TCPIPLIB code in ckcnet.c was not closing the
connection from its own side and setting ttyfd to -1 when it got an i/o error.
Now fixed.  28 Feb 94.

Fixed the problems with OS/2 C-Kermit screen rollback.  ckocon.c 5A(122),
28 Feb 94.

Anna Tomecka <anna@vax.clarku.edu> noticed that SET QUIET ON didn't work
for C-Kermit's CONNECT messages any more (because of the new /QUIETLY switch).
Fixed in ckuus4.c, 2 Mar 94.

My previous interpretation of \Kprtscn was wrong.  In MS-DOS Kermit, it
toggles screen-printing on and off, so I made it that way in OS/2 C-Kermit
too.  \Kdump copies the current screen to the printer (or file).  Also, I
added a PRINTER ON indication to the status line.  ckocon.c 5A(123), 2 Mar 94.

Since it will be relatively rare for people to assign \Kverbs to keys in
combination with other characters, strings, or \Kverbs, I made a special case
for when a single \Kverb, and nothing else, is assigned to a key.  In this
case, the \Kverb is preinterpreted and its numeric index is stored in the
keymap[], indicated by setting a special bit.  When the user hits that key,
there is no need to toodle through the string looking for \Kverbs, and then
look them up to get their indices -- we just go execute the \Kverb directly
and immediately: dokverb(index), no lookups needed.  Changed the default
keymap to be preloaded with \Kverb indices rather than strings; got rid of
macrotabinit() routine, moved all key initializations to keymapinit(), moved
keymapinit() to ckocon.c, where it belongs.  Changed SHOW KEY to account for
the \Kverb indices.  ckuus3.c, ckotio.c, ckocon.c, 2 Mar 94.

This change lets us easily find out which functions are assigned to which
keys, which once again lets us give accurate help -- at least for US
keyboards.  Added an array of key names, indexed by scan code.  Added a lookup
through the keymap for the \Kexit and \Khelp codes, and if found to display
the corresponding key name.  2 Mar 94.

Created a structure of Very Important Keys (VIKs), whose names are needed
in the status line or popup help screens, which is filled in each
time the CONNECT command is entered, eliminating all key lookups during the
CONNECT session.  ckocon.c, 3 Mar 94.

Used the VIK structure to fill in all key references in the status line,
including the special rolled-back screen status line.  ckocon.c, 3 Mar 94.

Restored the \Khelp popup screen.  Now it lists everything that Alt-? used
to list before, but with the correct key legends in case the assignments
changed, and with functions omitted that are not assigned to any keys.
If a function is assigned to more than one key, only the first (lowest scan
code) key is listed.  ckocon.c, 3 Mar 94.

Added SET TERMINAL ROLL { ON, OFF } as in MS-DOS Kermit.  This controls what
happens when screens are rolled back.  OFF (the default) means a rolled-back
screen is treated just like a normal screen: you can communicate with the host
without affecting the rollback status -- this allows you to send characters
while viewing a rolled-back screen, and allows arriving characters to be
displayed on the "old" screen.  ON restores the earlier behavior, in which you
are constrained to typing only rollback keys while the screen is rolled back;
no characters are sent to the host, and newly arrived characters are displayed
only after rolling forward to the bottom of the rollback buffer, i.e. to the
current screen.  ckuusr.h, ckuus[357].c, ckocon.c, 3 Mar 94.

The \KprtScn was acting just like host-directed transparent print, i.e.
sending all received characters to the printer *instead* of to the screen.
This was a little surprising, so I added a flag to distinguish between host-
directed printing and user-directed printing.  ckocon.c, 3 Mar 94.

It seems there was a large installation that was using C-Kermit 5A(165) or
thereabouts, which had deployed thousands of MS-DOS Kermit scripts that looked
for strings in the old server message, which changed in 5A(183), August 1992.
They could not upgrade to the current release without visiting numerous sites
and installing new script programs.  So I added an OLDMSG compilation option.
ckcmai.c, 3 Mar 94.

In OS/2 C-Kermit, HANGUP did not do anything on network connections.
Fixed in tthang(), ckotio.c 5A(123), 4 Mar 94.

Added to OS/2 C-K pop-up \Khelp screen: printer toggle, screen forwards, push
to OS/2, print formfeed.  Changed default mappings so that their key names are
reasonably portable among all national systems/keyboards/versions.  Help is
now Alt-Tab rather than Alt-?, Reset is now Alt-R rather than Alt-= (but Alt-=
is kept active too for compatibility), and flip screen is moved from Alt-R
to Alt-V (for Video).  ckocon.c 5A(125), 4 Mar 94.

Enabled \Kdump (print/dump screen) during rollback, again, even when
TERMINAL ROLL is ON.  ckocon.c, 4 Mar 94.

Made a new popup help screen for rolled-back screens.  Made popup help box
use its own screen buffer, so it would work with rolled-back screens too.
Made popup help save and restore status line; previously the rollback status
line was wiped out after a help box.  ckocon.c, 4 Mar 94.

Cleaned up the cursor on/off routines in OS/2 C-Kermit a bit -- it turned out
you couldn't call the cursor-on routine if the cursor was already on, you'd
lose the cursor, or turn it into some weird blob.  Made these routines protect
themselves against this.  So now it's harder to make the cursor disappear.
Also, made "reset terminal" turn the cursor back on if it was off.
ckocon.c, 4 Mar 94.

Fixed bug in parsing SET TERMINAL DEBUG and ROLL in which the command-editing
keys didn't work right.  ckuus7.c, 4 Mar 94.

Added two new variables: \v(rows), \v(cols) -- console screen rows and columns.
ckuus4.c, 4 Mar 94.

Fixed SHOW VARIABLES -- it had stopped pausing after a screenful.
ckuus5.c, 4 Mar 94.

Added support for CK_REDIR (REDIRECT command) for NeXTSTEP, from Dave Johnson
<ddj@gradient.com>.  ckcdeb.h, ckutio.c 5A(126), 6 Mar 94.

phaniraj@badlands.NoDak.edu (V. Phaniraj) noticed that SET TERMINAL
{ ARROW-KEYS, KEYPAD } { ON, OFF } was working backwards.  Fixed in ckuus7.c,
6 Mar 94.

Fixed an error in ckuus5.c in which tt_rows and cmd_rows, etc, were
referenced but not declared if CK_NAWS was not defined, reported by many.
6 Mar 94.

Backed off on enabling REDIRECT for NeXT -- it broke a lot of NeXT
compilations.  ckcdeb.h, ckutio.c, 6 Mar 94.

Changed OS/2 default key map again.  Alt-Tab was a bad choice -- in a windowed
session, it moves the window to the background.  So now Alt-h is Help, Alt-u
is Hangup.  ckocon.c 5A(126), 7 Mar 94.

Made VT220 the default emulation for OS/2, since it is, after all, a superset
of VT102 and VT100.  ckocon.c 5A(126), 7 Mar 94.

Changed OS/2 emulator's response to color-setting escape sequences, CSI 3x;4xm,
to reverse the fore/background sense if the screen is in reverse video mode
(DECSNM).  ckocon.c 5A(126), 7 Mar 94.

Corrected REDIRECT code for NeXT -- I had messed up Dave Johnson's changes the
first time.  ckutio.c, 7 Mar 94.

Marko Teittinen (marko@cs.umd.edu) noticed that SET KEY \blah \27b was
erroneously misinterpreted as \Kbreak.  Fixed in ckuus3.c and ckucmd.c by
adding a new xlookup() function, requires exact match, and by fixing a couple
out-of-order entries in the keyboard verb table in ckocon.h.  7 Mar 94.

Marko also reported the following: "I have noticed that when the normal mode
background is low intensity color (for example lgray), underline attribute
background doesn't display high intensity.  My preferred color settings are
(these worked for 189):

  set term color normal black lgray
  set term color under black white
  set term color status white blue

(end quote)".  I said this was because the background intensity was reserved
to indicate blinking.  Marko persisted: "I would still argue that both high
and low intensity backgrounds should be allowed.  There could be a warning in
the doc files, that blinking may pass unnoticed on the screen, if mixed
backgrounds are used, but please don't make me lose my favorite feature in
C-Kermit.  I've never seen blinking color attributes except in some animated
text files, but I'm willing to lose those for good underline highlighting.  I
want to have black text color, and all low intensity backgrounds (except light
gray) are terrible.  Then again the bright white background is too bright to
use for the whole window (=hurts my eyes).  Using high intensity backgrounds
I'm able to get highlight marker effect for the special attributes."  This
seems quite reasonable, so I made the suggested change.  ckocon.c, 7 Mar 94.

Added \Kignore for Num Lock to the default key map, to prevent the Num Lock
key from beeping.  ckocon.c, 7 Mar 94.

Added new verbs \Ktn_ip (send TELNET Interrupt Process) and \Ktn_ayt (send
TELNET Are You There).  By default, they are not assigned to any keys.
ckocon.[ch], 7 Mar 94.

Ric Anderson noticed that OS/2 C-Kermit would crash if you Ctrl-C'd the file
transfer display screen.  Sure enough, an alarm was left active that should
have been turned off.  This happened not only in the OS/2 version, but also
the VMS version.  Fixed in trap(), ckuusx.c.  8 Mar 94.

Ric Anderson also noticed that 0x80 (NUL with 8th bit on), received by
OS/2 C-Kermit's terminal emulator, was treated as CSI (ESC [).  In fact, it
turns out that *any* C1 control was treated as CSI because two statements
were transposed.  This is now fixed too.  ckocon.c 5A(127) 8 Mar 94.

Jim Reisert <reisert@wrksys.enet.dec.com> noticed a case where clear-to-end-
of-line was "leaking attributes" (while running DEC Notes on VMS).  Several
of the clearing functions were indeed filling the cleared area with the
current video attribute rather than the default attribute.  Fixed in ckocon.c
5A(128), 9 Mar 94.

Changed OS/2 C-Kermit's session debugging facility to show 8-bit C1 characters
literally, rather than as ESC blah, to aid in debugging of 8-bit VMS sessions.
ckocon.c, 9 Mar 94.

Fixed the bug in which the TELNET lead-in character (255) would sometimes be
shown on the terminal emulation screen (often as y-diaeresis).  And conversely,
the one in which a quoted IAC (255) would *not* be shown on the terminal
screen.  ckocon.c, ckucon.c 5A(060), ckvcon.c 5A(033), ckdcon.c 5A(045),
cklcon.c 5A(002), 9 Mar 94.

I seem to have fixed the problem of the cursor being in the wrong place after
escaping back to the OS/2 command screen.  I'm not sure how I did it, but I
can't make it happen any more.  ckocon.c, 9 Mar 94.

Fixed a subtle bug in the command parser, in which a temporary program
prompt would be forgotten if the user typed ? to get help, if the
prompt-setting call did not include a pointer to an evaluation function.
ckucmd.c 5A(057), 9 Mar 94.

Enabled \Kxxxx, where xxxx is a macro name.  ckuus3.c, ckuusr.c 5A(125),
ckocon.c, 9 Mar 94.  Example:

  define download receive, connect
  set key \417 \Kdownload

This puts the act of receiving a file from a remote Kermit that has already
been told to send it on a "hot key", in this case Alt-Page-Down on the PC.
C-Kermit will not automatically reenter terminal emulation upon completion of
the macro unless the macro includes a CONNECT command, as in the example
above.

Enabled SET KEY commands to be given on separate lines, as in MS-DOS Kermit.
SET KEY <return> now prompts you press a key or key combo, so you don't have
to know the scan code.  Then it shows you the current definition and prompts
you for a new one.  ckuus3.c, 9 Mar 94.

In OS/2 C-Kermit, added a 5-second write timeout to reduce the amount of
popping back to command mode that happens when the user types something but
CTS is not being asserted by the DCE.  Doesn't seem to make a lot of
difference.  ckotio.c, 9 Mar 94. 

Changed CKERMIT.CMD to use arg(1) rather than %1 %2 ... %9 to pass arguments
to OS/2 C-Kermit, suggested by Drew Derbyshire <kermit@kew.com>.  10 Mar 94.

Replaced the white-background OS/2 C-Kermit icon with a transparent-background
one, from Hugo Jimenez <jimenez@gaus90.chem.yale.edu>.  10 Mar 94.

Installed a patch from Mike Freeman <mikef@pacifier.rain.com> to enable
Ctrl-A status reports even when FILE DISPLAY is NONE.  ckuusx.c, 10 Mar 94.

Fixed the bug with the cursor being restored to the wrong position (sometimes)
when escaping back to the OS/2 C-Kermit prompt from CONNECT mode.  The problem
was introduced when I implemented the VT220 DECTCEM (cursor enable/disable)
feature (27 Feb 94), I used the cursoron flag to indicate whether the cursor
was enabled or disabled (makes sense, right?).  When the CONNECT command
exits, it calls restorescreen(&commandscreen), which restores the saved
command screen.  restorescreen() then calls lgotoxy() to put the cursor in the
saved place.  But lgotoxy() doesn't do anything unless cursoron != 0.  Well,
cursoron would be zero if characters were arriving at the time we escaped back
(because we gain screen-painting speed by turning off the cursor whenever more
than 20 characters are waiting to be read).  It can also be off if the screen
is rolled back, etc.  The obvious solution would have been to simply set
cursoron to 1 before restoring the command screen, but that would break the
DECTCEM feature.  So now we save the cursoron value, set cursoron to 1, call
restorescreen(), and then restore the cursoron value before returning from
CONNECT mode.  ckocon.c 5A(129), 10 Mar 94.

OS/2 C-Kermit's DEC keypad verbs were badly fractured.  SET TERMINAL KEYPAD
NUMERIC and APPLICATION were backwards, but the corresponding escape sequences
were not.  Furthermore, much of the \Kverb-interpreting code was backwards too
(thus compensating for the first mistake...).  Thanks to Jim Reisert for
persistent reports about this.  Fixed in ckocon.c 5A(129), 10 Mar 94.

Added default assignments for DEC keypad minus, period, comma, and Enter, to
the corresponding main keypad Alt combinations.  Also made default assignments
for screen scroll and arrow keys to the appropriate numeric keypad keys when
Num Lock is Off.  ckocon.c, ckcker.upd, 10 Mar 94.

Fixed SHOW KEY command not to say "Undefined" when a key is defined.
ckuus5.c, 10 Mar 94.

Added support for VT220 S7C1T and S8C1T escape sequences for selecting 7
and 8-bit transmission of DEC keys (ESC [ vs CSI, etc).  ckocon.c, 10 Mar 94.

Added an ANSI terminal type to OS/2 C-Kermit.  This involved adding support
for some escape sequences used by ANSI.SYS that are not in the VT100++
repertoire, plus forcing white on black coloration, character-set
transparency, and no chopping of 8th bits, and restoring all of that if the
user sets the terminal type to something else after using ANSI.  ckuusr.h,
ckuusr.c 5A(126), ckuus7.c, ckocon.c 5A(130), 11 Mar 94.

Added SET TERMINAL TYPE NONE to OS/2 C-Kermit.  The idea was to let the
console driver handle the screen.  Theoretically, this would allow
substitution of different emulations by installing different console drivers,
and might also allow "pass-through" types of connections (dial up OS/2, run
C-Kermit, dial out from C-Kermit to someplace else).  ckuus7.c, ckocon.c, 11
Mar 94.  But it didn't work, at least not as intended -- the console driver
seems to have its ANSI features disabled.  Control characters are handled
OK, but escape sequences are simply printed.  (Turns out this could be fixed
by using different "write" calls, but it's not worth it.)

Joel Seiferas <joel@cs.rochester.edu> reported that reading news on UNIX
produced "striped" screens when OS/2 C-Kermit's screen was in reverse video
mode (\Kflipscrn).  Sure enough.  Fixed in ckocon.c 5A(130), 11 Mar 94.

Removed SET TERMINAL TYPE NONE from OS/2 C-Kermit.  It doesn't do anything, so
there's no point.  ckuus3.c, 12 Mar 94.

Changed all sets and tests of tt_keypad and tt_arrow to reference symbolic
values for clarity: TTK_NORM means normal (numeric or cursor) mode; TTK_APPL
means application mode.  These have tricked me too many times, no more!
ckuusr.h, ckocon.c, ckuus3.c, 12 Mar 94.

Fixed "more"-prompting in SHOW VARIABLES to account for the length of the
\v(input) string, and also improved the display to show control chars
symbolically.  ckuus5.c, 12 Mar 94.

Added dummy code to set the code page from Kai Uwe -- it doesn't do anything,
since when he tried to use it, it crashed; also, the call to set the code
page is no longer documented in OS/2 2.x.  ckotio.c, 12 Mar 94.

Added code to OS/2 C-K from Kai Uwe Rommel to make RTS/CTS work during CONNECT
mode.  When transmission is blocked due to lack of CTS, an asterisk appears in
the status line on the name of the COM port, e.g. "*COM1".
ckocon.c, 12 Mar 94.

Added SET TERMINAL CTS-TIMEOUT to let user specify the longest CTS blockage
to tolerate during CONNECT mode.  ckuusr.h, ckuus7.c, ckuus2.c, 12 Mar 94.

Fixed SHOW TERMINAL to include CURSOR and CTS-TIMEOUT.  This involved some
rearranging of the screen, since it was already full.  You still can't find
out what the terminal colors are set to -- not only do we lack the screen
real estate, but we don't really know -- they are not simple variables that
"stay put" when we set them -- they also have attribute bits that change,
they get reversed, etc etc.  ckuus5.c, 12 Mar 94.

Compose-key support for OS/2 C-Kermit.  Keyboard verb \Kcompose enabled, can
be assigned to any key.  Compose sequences are roughly those used by DEC VT220
and higher for Latin-1.  No support for Latin-2, Cyrillic, Hebrew, etc.  Made
a special status line while a compose sequence is going on, and made a special
popup help screen too.  ckocon.[ch], 12 Mar 94.

Minor cosmetic improvements to the Alt-H popup help screen.
ckocon.c, 12 Mar 94.

Changed OS/2 C-Kermit's CONNECT-mode character-sending function to beep and
discard characters entered while in its transmission-failure retry loop.
This prevents typeahead from being passed along to the command prompt when the
retry timer expires and CONNECT mode is broken, with possibly disastrous
results; suggested by Ric Anderson.  ckocon.c 5A(132), 13 Mar 94.

When transmission is blocked, instead of putting a cryptic "*" in the status
line, now we write a new status line saying "TRANSMISSION BLOCKED: x", where
x is the countdown timer.  Fun to watch, and informative too!
ckocon.c 5A(132), 13 Mar 94.

Changed SET TERMINAL CTS-TIMEOUT to SET TERMINAL TRANSMIT-TIMEOUT -- easier
for most people to understand, and it might also apply to other situations.
ckuus[257].c, 13 Mar 94.

There were major problems with the OS/2 C-Kermit CONNECT-mode status line.
With all the recent additions to the program, the status line was being used
for lots of things in addition to its normal purpose (to show emulation, how
to get help, how to escape back, the comm device, etc): rollback status,
Compose-key minibuffer, how to make a popup help screen go away, debug mode,
printer active, transmission blocked, etc etc.  Some of these conditions could
occur while others were active: for example, after rolling back some screens,
you might start a compose sequence, and then request popup help -- at this
point, the status line is pushed three levels deep.  But till now, there was
no stack to push the status lines onto.  Now we have a stack that will hold up
to ten levels of status lines, including their separate parts (usertext,
helptext, exittext, etc), so that massive amounts of recoding were not
necessary to get this working fairly well.  ckocon.c 5A(132), 13 Mar 94.

Fixed a bug in OS/2 C-Kermit VT emulation: ESC [ 2 J clears the whole
screen but does NOT move the cursor.  In ANSI emulation, however, ESC [ 2 J
also homes the cursor (ref: DOS 5.0 manual, ANSI.SYS description; DEC VT 220
Programmers Manual).  ckocon.c 5A(133), 14 Mar 94.

Added a WINNT symbol for Windows-NT-specific features, in preparation for a
Windows NT version, which, presumably, will follow the OS/2 32-bit path.
ckcdeb.h, ckuver.h, 24 Mar 94.

A few minor corrections to the makefile for Solaris 2.3 builds with gcc and
SunPro cc, plus some minor tweaks to ckuus3.c, ckuus6.c, ckcfn2.c, in which
variables named partab conflicted with Solaris library functions.  Added two
new makefile options for Solaris 2.x, which should be the preferred, normal
ones from now on: solaris2x (for use with SunPro C) and solaris2xg (for GCC).
25 Mar 94.

Changed the way the UNIX man page is produced.  Instead of one man-page fits
all, the man page is now generated automatically as part of the C-Kermit build
procedure, based on the CFLAGS used at compile time.  The "source code" for
the man page is now called ckuker.cpp.  It is run through the C preprocessor
with the same CFLAGS as used for compiling C-Kermit.  It contains #ifdef's
just like C-Kermit source code.  An output file, ckuker.nr, is produced that
is suitable for use as input to "nroff -man", i.e. as a UNIX man page.
Requires cc -E and grep.  The man page itself contains very little in the way
of #ifdefs (for now, only a small amount of special wording for HP-UX 10.0 and
SunOS/Solaris), but the way is now clear to add them liberally -- for example,
to remove references to TCP/IP if TCPSOCKET is not defined, etc.
ckuker.cpp, makefile, 25 Mar 94.

Backed off on automatic man page generation.  Turns out the cc -E method is
not portable.  The first system I tried it on outside of SunOS 4.1.x choked
on it.  Man pages are now generated by hand.  To produce the default general-
purpose man page:

  make manpage

To make a custom man page:

  make CFLAGS=-DHPUX100 manpage

26 Mar 94.

Installed an HPFS partition and a "real printer" on my OS/2 system so I can
exercise more of OS/2 C-K's features.

From Kai Uwe Rommel, new OS/2 C-Kermit scan codes for Tab (to distinguish
from Ctrl-I) and Shift-Esc.  ckocon.c 5A(134), ckotio.c 5A(124), 26 Mar 94.

From Kai Uwe Rommel, OS/2 C-Kermit code to get and set the title bar text,
not used, saved for future reference under #ifdef CK_SETTITLE.  ckotio.c,
26 Mar 94.  Kai Uwe's comments:

  There is an undocumented system call for this purpose. I have added
  two functions to ckotio.c for this purpose, as well as code to
  save/restore the original session title. I have not yet added code
  where to call it since we should first think a bit over where it may
  make sense to change the title. 

  Unfortunately, as I said, the call is undocumented, although it is
  used by CMD.EXE itself to control the title bar of sessions. I would
  therefore like it if that code were not in the distributed executables
  but only available for those who want to recompile themselves. I have
  added a symbol CK_SETTITLE for this purpose. The call does also
  require a defintion for the system loader where to find it. That can
  be provided by

	  IMPLIB SESMGR.LIB C:\OS2\DLL\SESMGR.DLL

  And linking C-Kermit with that library.

  The opposite call, to determine the current title, is documented but
  only for PM applications. It happens to work for text mode programs
  too, but that is to be considered "undocumented" too.  Only PM
  applications have real control over their title bar. What is better
  documented possible is to change the value of the entry of a session
  in the task list (window list).

Added \v(terminal) to get the terminal type.  In OS/2, it's the current
SET TERMINAL TYPE, in others, it's getenv("TERM").  ckuusr.h, ckuus4.c,
ckuusr.c 5A(127), 26 Mar 94.

Changed OS/2 C-Kermit's escape-character argument for hanging up to be U
rather than H.  Now it's more like the default "hot keys": H for help, U
for hangup.  Previously, it was too easy to hang up by accident this way.
ckocon.c, 26 Mar 94.

Added SET TERMINAL COLOR BORDER <color> to OS/2 C-Kermit, based on info
from Kai Uwe Rommel -- this sets the color of the border around the terminal
emulation screen in OS/2 fullscreen sessions only.  Added this to CKERMOD.INI;
a green border seems nice; changed the status line to white on gray.
ckuusr.h, ckuus7.c, ckocon.c, 26 Mar 94.

Changed OS/2 C-Kermit's SET TERMINAL TYPE ANSI command to automatically set
the code page to 437, saving the old one, and to restore the old code page
upon SET TERM TYPE <anything-else>, based on info profided by Kai Uwe.  Also
added a SET TERMINAL CODE-PAGE command, but left it commented out because it
needs to verify that the given code-page number is valid, and then succeed or
fail immediately -- it seemed to me like switching code pages was a bad way
to do this...  ckuus7.c, 26 Mar 94.

Several people reported that the previous edit of OS/2 C-Kermit would hang
uninterruptibly when sent the ESC Z or CSI 0 c (What are you?) query in VT220
mode on a serial (not network) connection.  It seems that sendstr() was
overrunning the output device by calling ttoci() too rapidly; this happened
whenever the string to be sent was longer than 4 or 5 characters, and probably
also when the UART did not have an output silo (mine doesn't, so I could
reproduce this problem easily).  I added an msleep(50) between each character
as a bandaid.  This should only affect the sending of escape sequences (mostly
query responses, since VT key sequences are never more than 3-4 chars long).
ckocon.c, 26 Mar 94.

Changed OS/2 C-Kermit INSTALL script to ask the user about the VT220 key
mappings and to put a TAKE command in CKERMOD.INI for them if she wants them.
ckoins.cmd / install.scr, 26 Mar 94.

Michael Godfrey noticed that in OS/2 C-Kermit, during DEBUG terminal-emulation
display, if you escape back while control characters are being shown in
underline coloration, and then SET TERM DEBUG OFF, and then CONNECT again,
that the colors don't go back to normal.  There were also some coloring mixups
when making TELNET connections; TELNET negotiations would be printed in
seemingly random colors.  Fixed in ckuus7.c and ckocon.c, 26 Mar 94.

Also noticed that session debugging could write stuff to the terminal screen
even when we weren't in CONNECT mode, oops!  Fixed in ckocon.c, 26 Mar 94.
But this fix means we lose the first couple negotations from the terminal
screen, since they happen at ttopen() time, before the CONNECT module is
entered.  No big deal, they can still be captured in the debug.log.

Changed SET TERMINAL DEBUG to show TELNET options in boldface.
ckocon.c, ckcnet.c, 26 Mar 94.

Fixed WRITE TRANSACTION-LOG command; previously, it would accept no
abbreviations.  Noticed by Max Evarts.  ckuusr.c, 26 Mar 94.

Found a bunch of SET commands that were returning SUCCESS when there
were parsing errors.  Fixed in ckuus7.c, 26 Mar 94.  There are probably
more of these in other modules...

There were complaints that VMS C-Kermit sometimes failed to SET SPEED.
Evidently, the actual speed setting worked OK, but then the SET SPEED command
went back to read the speed and compare with what it thought it had set, and
they did not compare.  Turns out the VMS ttgspd() routine didn't really do
anything except return the speed variable -- which was not SET yet!  A slight
amount of creative recoding fixes the problem.  CKVTIO.C 2.0-072, 27 Mar 94.
(But it would, of course, be better to have the VMS ttgspd() actually make a
system call to read the device speed...)

Added support for file-append operations -- OPEN APPEND, LOG .. APPEND,
SET FILE COLLISION APPEND, etc, in VMS C-Kermit, code from Terry Kennedy.
CKVFIO.C 2.0-108, 27 Mar 94.

Added SET TERMINAL CODE-PAGE to OS/2 C-Kermit, thanks to a new support
routine, os2checkcp(), from Kai Uwe Rommel, ckuus7.c, 17 Mar 94.

Cleaned up SHOW TERMINAL DISPLAY, added CODE-PAGE to it, added LOG SESSION
to it, etc, ckuus5.c, 17 Mar 94.

In OS/2 C-Kermit, it was still possible for the cursor to disappear if you
executed the \Kpush verb (os2push() routine) during CONNECT mode and then ran
an application (such as SYSLEVEL) that turned off your cursor -- noticed by
Ric Anderson.  os2push() now explicitly turns the cursor on when resuming
CONNECT mode unless the cursor was previously disabled.  Also changed
os2push() to restore the CONNECT-mode border color upon return to CONNECT
mode.  ckocon.c 5A(135), 27 Mar 94.

The VMS C-Kermit DELETE, DIRECTORY, and RENAME commands would change the
terminal mode, but forgot to change it back, so command editing didn't work
any more after giving these commands.  Fixed in ckuus6.c, 27 Mar 94.

Added some more helpful info to the OS/2 C-K rollback popup help screen.
ckocon.c, 27 Mar 94.

Removed "^L to refresh screen" from OS/2 C-K's fullscreen file transfer
display.  ckuusx.c, 27 Mar 94.

Added support for 57600 and 115200 bps for NetBSD, from Mike Long
<Mike.Long@analog.com>, plus various other NetBSD fixups.  ckcdeb.h, ckcfn3.c
(sys_errlist[] declaration), ckutio.c 5A(127) (UUCP lockfile directory).
Also, SHOW PROTOCOL display was malformatted if C-Kermit built with NOSERVER.
ckuus4.c.  27 Mar 94.

John Chandler reported that when C-K is doing a non-windowed transfer
(i.e. window size < 2), and an ACK arrives (again) for the previous packet,
C-Kermit just sits there & does nothing.  In the non-windowed case, it should
treat this as a NAK for the current packet, so it can retransmit the current
packet right away, rather than waiting for its timer to go off.  ckcfn2.c,
ckcfns.c 5A(104), 27 Mar 94.

In the process of testing the previous item, discovered that OS/2 C-Kermit
lowercased any strings that were given to SET KEY.  Fixed in xlookup(),
ckucmd.c 5A(058), 27 Mar 94.

Added SET SEND / RECEIVE PAUSE <msec> command, hopefully to help when engaging
in Kermit protocol with a real slow or buggy machine, like the HP48, which
goes deaf for a short time after sending a packet.  ckuus7.c, 27 Mar 94.

Bo Kullmar got Kermit to crash while dialing, a traceback indicated it was
in a free() -- so changed every "free(blah);" to "if (blah) free(blah);
blah = NULL;".  ckudia.c 5A(058), 27 Mar 94.

Added some simple code, suggested by Terry Kennedy, to cut down on the
zombie processes left behind when the VMS C-Kermit server gets a BYE.
ckvtio.c, 27 Mar 94.

------

28 Mar 94: Started getting 5A(190) ready for public testing.  Changed
designation from "Development" to "ALPHA.01".  Fixed a minor glitch with the
status line during screen rollback in OS/2.  Changed the CHECK command to name
the missing feature if it gives an error message.  Compiled, linked, and ran
on many systems and in many configurations, fixing compiler & makefile
glitches along the way: SunOS 4.1.3, Solaris 2.3, NeXTSTEP 3.1, Linux 0.99.14,
Dell SVR4, HP-UX 8.0, 4.4BSD, OSF/1, DG/UX 5.4, AIX 3.2, ULTRIX 4.2, ...

Discovered a typo in ckuxla.h that caused Macintosh Latin and DG Multinational
character sets to get the same designator.  Macintosh Latin translations were
broken since HP-Roman8 was added in December '93; nobody noticed until me,
using OS/2 C-Kermit to look at the Mac Kermit makefile...  29 Mar 94.

Got C-Kermit to compile on Solaris 2.3 with SunPro CC.  29 Mar 94.

Data General AOS/VS version compiles and links without complaint, but won't
run: "Memory allocation error on program initialization: insufficient pages
available for stack/heap space".  But 189 runs OK on the same system.  Sent
a message to DG asking about this.  29 Mar 94.

Spent a long time trying to compile the Macintosh version with MPW C 3.2.  Ran
into problems with wart (ckwart.c) -- Finally I realized that the fakeouts for
fopen and friends that were done in ckcdeb.h did not (and must not) apply to
ckwart.c, because ckwart.c is not linked with the module (ckmfio) where the
fakeout routines (mac_fopen, etc) are defined.  Then there were compilation
problems with ckmtio.c & some others, fixed.  29 Mar 94.

So the Mac version compiled and linked OK, but crashed when I tried to run it.
Luckily I had Macsbug loaded and was able to get a stack dump -- it crashed in
cmdini() in ckuus5.c.  It seems Mac Kermit was trying to open an init file --
apparently somebody added part of the code for this, but not all of it, so
mac_fopen() was being passed an uninitialized string pointer for the file
name.  I #ifndef MAC'd all of the init-file code, and now it works OK.
ckuus5.c, 29 Mar 94.

Eugenia Harris of DG changed the LINK command for AOS/VS C-Kermit to make
it allocate a bigger heap+stack, now it runs OK.  30 Mar 94.

In fact, now it compiles, links, and runs OK on all platforms where I am able
to test it, so we're just about ready for public Alpha testing.

OS/2 C-Kermit would no longer recognize the Tab key for purposes of command
completion.  Fixed in ckotio.c, 30 Mar 94.

Added display of valid code pages to OS/2 C-Kermit SHOW TERM, and simplified
SET TERM CODE-PAGE, code from Kai Uwe Rommel, 30 Mar 94.

Jim Reisert reported that leaning on a function key while OS/2 C-Kermit was in
CONNECT mode on a serial connection resulted in "TRANSMISSION BLOCKED" errors.
I noticed that there were two routines in ckocon.c that did essentially the
same thing: sendstr() and sendescseq().  I had already modified one of them to
insert a 50-msec pause between each character; this time I just merged the
two routines.  The result tests just fine at both 19200 bps and 300 bps.
ckocon.c 5A(136), 30 Mar 94.

Made new makefile entries for, and built C-Kermit on, UnixWare 1.1.
"make unixware" (no TCP/IP, no curses), and "make unixwarenetc" (Lachman
TCP/IP, curses).

Fixed another OS/2 C-Kermit terminal bug, reported by Ric Anderson: if
SET TERMINAL ROLL ON, and the End key is pushed before any other rollback
keys, we get the Black Screen Of Death.  Fixed in ckocon.c 5A(137), 31 Mar 94.

Same deal as yesterday, but this time when sending strings assigned to keys.
ckocon.c, 31 Mar 94.

Thanks to a report from wilkins@rockvax.rockefeller.edu, I learned that the
APC command was ineffective if it was given as the last line in a command
file (in this case, the last line of the .kermrc file) in the Solaris version.
Turns out the Solaris version did not include -DNOSETBUF, and so the APC
sequence was not being followed by an fflush(), on the assumption that output
was unbuffered anyway.  I added -DNOSETBUF to the Solaris version, and I also
made the apres-APC fflush() unconditional.  ckuus5.c, 31 Mar 94.

Jeffrey Altman noticed that the OUTPUT command was generating garbage
under OS/2.  Another apparent case of IBM C generating bad code.  I rewrote
the code to use no macros and simpler types of expressions, seems to work
ok now, but somewhat slower.  ckuus5.c, 1 Apr 94.

Jamie Watson <jw@adasoft.ch>, working with IBM engineers, changed the
AIX/RS-6000 flow control code to comply with IBM's recommendations.
ckutio.c 5A(129), 4 Apr 94.  Jamie tested this on:

  RS/6000-520, AIX 3.2.5 (rs6aix32c)
  RS/6000-520, AIX 3.2.3 (rs6aix32c)
  RS/6000-320, AIX 3.1.5 (rs6000c)
  RT/PC 6150-125, AIX 2.2.1 (rtaixc)

as well as several ULTRIX systems.

New OS/2 INSTALL.CMD from Jeffrey Altman, keeps old CKOVTK2.INI file intact
if it already existed, since the user might have customized it, and to avoid
asking the user CKERMOD.INI-related questions if the user already has a
CKERMOD.INI in the destination directory.  4 Apr 94.

Added \v(connection) to show the connection when in local mode:  "serial",
"tcp/ip telnet", "decnet lat", etc.  This allows a script program to take
different actions depending on the connection type.  ckuusr.h, ckuus4.c,
4 Apr 94.

Bill Schlesinger of the Motorola System Support Center pointed out that the
DIR and REMOTE DIR commands did not (necessarily) work under a restricted
shell in UNIX, because DIRCMD and DIRCMD2 were defined to include the
full path, instead of just the command name, and so did not follow the PATH
environment variable.  Removed the path from these strings, made them just
"ls -l".  ckufio.c 5A(084) 4 Apr 94.

Added SET TERMINAL HIDE-CURSOR { ON, OFF } to OS/2 version, to allow user to
turn off the cursor-hiding feature; this reduces confusion at the expense of
slower screen updating.  On a 486/66, with TERMINAL HIDE ON (the default), on
a TELNET connection (where the CPU is the limiting factor), fullscreen, it
takes 20 seconds to dump a 1000-line, 80-column file to the screen; with HIDE
OFF, it takes 33 seconds.  The difference is negligible on a serial
connection, where the communication speed is the bottleneck.  The same file
takes about 46 seconds to display on a 19200 bps connection with SET TERMINAL
HIDE OFF or ON.  ckuusr.h, ckuus2.c (HELP), ckuus5.c (SHOW), ckuus7.c (SET),
ckocon.c 5A(138), 5 Apr 94.

In OS/2 C-Kermit, reinstalled Kai Uwe's code to get and set the session name
in the task list, and added a call to the SET LINE / SET HOST code in
ckuus7.c to actually set the name to the current communication device or
host name.  ckuus7.c, ckotio.c 5A(128), 5 Apr 94.

Looked into adding APC support to the UNIX version, but there were too many
obstacles, the worst being that the APC command would be collected in the
lower CONNECT fork, which has no good way to pass it back upstairs when it
exits.  So forget it.  5 Apr 94.

Added code to VMS version from Terry Kennedy to fill in the LENGTH-IN-K
file attribute, which heretofore had always been specified as 0.
CKVFIO.C 2.0-109, 5 Apr 94.

Looked into making the TAKE command in OS/2 not require a full filespec if
the file is in INIT, DPATH, or PATH.  This one turned out to be impractical
too -- it would require a custom copy of cmifi(), which is a very long
procedure.  5 Apr 94.

System-wide init file for UNIX et al...  Better to let the user's personal
init file, if any, take precedence.  The system-wide copy is used only if
the user doesn't have one.  This way we don't have thousands of users
wondering why their init files don't work any more.  Also, I discovered some
code that I thought had been removed years ago: if the specified or default
init file could not be found, then Kermit looked in the current directory for
one -- bad idea!  ckuus5.c, 5 Apr 94.

More of this...  Actually, there is no single right way to handle the
system-wide init file.  There are reasons why it should take precedence over
the user's, and equally valid reasons why it shouldn't.  So I added two new
symbols: CK_INI_A means the system-wide init file should take precedence,
CK_INI_B means the user's init file should take precedence.  If neither one is
defined, CK_INI_A is assumed.  These symbols have effect only if CK_SYSINI is
also defined.  Also, in the former case, if the system-wide init file can't be
opened, C-Kermit takes the user's instead.  Details in ckuins.doc.
ckuusr.h, ckuus5.c, 5 Apr 94.

By arrangement with HP, made a default system-wide init file for HP-UX 10.0:
/usr/share/lib/kermit/ckermit.ini.  ckuusr.h, makefile, 5 Apr 94.

New INSTALL.CMD from Jeffrey Altman for OS/2 C-Kermit, which does not replace
the program object / icon if one is already there.  6 Apr 94.

Added SET TERMINAL OUTPUT-PACING to allow users to overcome UART buffer
overrun problems when pasting into OS/2 C-Kermit terminal window.
ckocon.c 5A(139), ckuusr.h, ckuus7.c, ckuusr.c 5A(131), 7 Apr 94.

Albert Crosby <acrosby@comp.uark.edu> pointed out that if OS/2 C-Kermit is
started with a -c command-line argument, the "Prompt: Alt-x" message in the
status line is misleading.  Changed the CONNECT module to write "Exit: Alt-x"
if it knows that escaping back will exit from C-Kermit.
ckocon.c 5A(140), 8 Apr 94.

Vincent Fatica noticed that the scrolling region (or rather, the bottom of
it) was lost between sessions.  Fixed in ckocon.c, 8 Apr 94.

Added a new command PSEND <filename> <starting-position> [ <as-name> ].  It's
just like send, except no wildcards are allowed, and it begins sending from
the given position (0-based byte-offset number) in the file.  The only problem
with it is that on systems where an int (in C terms) is 16 bits, we can't
parse starting positions bigger than 32767, because cmnum() returns an int;
there's a check in the parser for this.
ckuusr.h, ckuusr.c, ckcfn3.c, ckufio.c.  9 Apr 94.

Designed and coded a recovery feature.  It works only on stream format files,
only for binary-mode transfers, and requires the failed transfer to have been
done also in binary mode and with SET FILE INCOMPLETE KEEP on the receiving
end.  The only new command is RESEND.  It has exactly the same syntax as the
SEND command.  Recovery capability is negotiated at protocol startup time, and
the starting position is negotiated automatically.  9 Apr 94.

Inclusion of this feature, and also of the PSEND command, is governed by the
compile-time symbol CK_RESEND, which is defined (in ckcdeb.h) by default for
UNIX (all versions except pdp11) and OS/2.  The feature can be turned off in
these versions by adding -DNORESEND to the compile-time CFLAGS.  C-Kermit
builds and works OK if CK_RESEND is not defined.

The underlying support for CK_RESEND is available only in ckufio.c for UNIX
and OS/2: the new zfseek(pos) routine.  This needs to be filled in for the
other versions: VMS, etc.

Made SET FILE INCOMPLETE KEEP be the default.  Otherwise, RESEND and PSEND
will be of little use.  10 Apr 94.

Fixed file transfer display "Estimated Time Left" to work right for resending.
ckuusx.c, 10 Apr 94.

Got RESEND to work for the 16-bit OS/2 version by adding an MSC 6.00
compile-time switch suggested by Kai Uwe.  10 Apr 94.

Three years ago, Seth Chaiklin <psykseth@aau.dk> worked very hard on the
MAIL and REMOTE PRINT handling by the Kermit receiver.  The idea was that if
the receiver knew it was mail (or a print job), it (a) did not have to create
a file, but instead could pipe the incoming material to the appropriate
program (Mail or lpr), and (b) mail messages could have a nice subject; that
is, the "filename" from the F packet would actually be the subject.  But there
were massive problems accomplishing this; Seth actually did get it working,
but many issues remained unresolved, such as what to do about an interrupted
transfer, etc.  After all the reorganization above, it seemed like a good time
to revisit this question.  But it's still not worth it.  The basic problem is:
the F packet comes before the A packet.  We don't know it's Mail until the A
packet comes.  But it's at F-packet time we have to handle the filename
checking and collision options.  There's just no good way around this.  Also,
the idea of piping into a Mail program, etc, is specific to UNIX and so we
would still have to keep the old temp-file code around for all the other
systems.  Plus the interruption problems would remain, which we don't have now
using the temp-file method.  Plus the MAIL and REMOTE PRINT commands are so
little used that the work and the risk are not worth it.  I still have Seth's
voluminous notes and diffs (75K of them) in case this should come up again.

In verifying edit 190 on 2.11BSD (on a PDP-11), I found that somehow the
call to gethnam() is no longer resolved by the linker, so I removed it from
ckhost() in the pdp11 case.  ckuusx.c.  I also had to shuffle the overlays
around again to make them all 15K or less; one of them had exceeded the 15K
limit by 192 bytes. I also had to add switches to deselect some of the new
features like REDIRECT, RETRY, MSEND.  Overlays all OK, but the main segment
is still too big by 2K.  Two choices: remove UUCP support, or try to build
with -DDYNAMIC (I can't remember why this was never done before).  (Several
hours later...)  Now I know: for some reason, -DDYNAMIC compilation results
in *bigger* object files, rather than smaller ones, on this system.  So
out goes UUCP lockfile support.  Still not enough.  Added -DNOFRILLS.  Still
not enough.  15 Apr 94.

Removed CK_TMPDIR from PDP-11 version.  Still not enough.  Removed automatic
parity detection.  That did it.  ckubs2.mak, 18 Apr 94.

Checked DEC OSF/1 2.0.  C-Kermit compiled under OSF/1 1.3 still runs OK.
Same code compiles and runs fine under 2.0.  23 Apr 94.

Changed OS/2 section of CKERMOD.INI to eliminate garish and bold colors for
normal screens (terminal-screen, status-line, underline, etc).  Easier on the
eyes, and prevents the all-screen-blinking effect that occurs on some systems
when switching back to the terminal screen when it had a bright (white)
background.  23 Apr 94.

Changed OS/2 C-Kermit SET TERM TYPE ANSI to use light gray rather than white
as the foreground color, by popular demand.  ckuus7.c, 23 Apr 94.

Changed OS/2 C-Kermit terminal reset routine to restore the border.
ckocon.c 5A(141), 23 Apr 94.

Steven Asher <sasher@intel9.intel.com> and Russ Herman <rwh@gov.on.ca> noticed
that several keyboard verbs in OS/2 C-Kermit were wrong: \KdecInsert,
\KdecRemove, \KdecSelect, \KdecNext.  Fixed, ckocon.c, 23 Apr 94.

Ever since edit 189 was released, there have been scattered reports of
corrupted files after transfer.  Tom Kloos <tk@sequent.com> finally provided
the vital clue: it happened when certain control characters were unprefixed
*and* PARITY was not NONE (and, therefore, locking shifts were in effect).
Diagnosis: the packet decoder had never been changed to account for this
combination, and so left Ctrl-P's in the file instead of treating them as Data
Link Escapes for locking shifts.  Fix: a very small change to the decode()
routine in ckcfns.c, 5A(107), 23 Apr 94.

Changes in various places to enforce prefixing of carriage return when we know
we have a TELNET connection.  Bare carriage returns in packets are very
confusing to TELNET servers, as they should be, since they defy the TELNET
specification, which says a carriage return must always be followed by either
LF or NUL.  ckcpro.w, ckuus3.c, 23 Apr 94.

Changed UNIX, VMS, OS/2, AOS/VS C-Kermit CONNECT commands to quote not only
IAC but also DEL if it has a parity bit on a TELNET connection.  23 Apr 94.

Changed protocol module to clear counters a bit earlier to cut down on
spurious info in the file transfer display.  23 Apr 94.

Hugo Jimenez <jimenez@gaus90.chem.yale.edu> noticed that the OS/2 C-Kermit
server was sending only linefeeds, rather than CRLFs, at the end of each line
output by an inferior process, e.g. in response to REMOTE DIRECTORY.  Cure
from Kai Uwe Rommel: in zxcmd(), open the pipe with mode "rb" rather than
just "r".  ckufio.c 5A(086) 26 Apr 94.

Downloaded IBM C/C++ CSDs from IBM OS/2 BBS and applied them to the OS/2
C compiler.  27 Apr 94.

A tester complained that if OS/2 C-Kermit starts a Rexx program and the
Rexx program includes "call ckcommand connect", that Kermit terminates after
2 seconds.  This turned out to be caused by the fact that the setjmp was
being done in one thread, but the longjmp in another, which happened when the
call to congks(2) (wait 2 sec for a keystroke) timed out.  The reason for the
timeout is to allow Kermit to check every 2 seconds to see if the connection
has dropped, in which case it can pop back to the prompt automatically.
Fixing this required complete redesign and rewriting of the keyboard input
routines, which was done by Jeffrey Altman.  ckocon.c, ckotio.c, 27 Apr 94.

But it doesn't work in the 16-bit version...  Jeff then conditionalized the
new code for the 32-bit version only, keeping the old code in the 16-bit
version.  29 Apr 94.

Jeff also fixed a bug with PUSH, RUN, ! in the OS/2 version.  ckufio.c
5A(087) 29 Apr 94.

Joel Seiferas <joel@cs.rochester.edu> reported crashes when receiving files
in the OS/2 version and SET FILE COLLISION RENAME.  The debug log revealed
this had something to do with the .LONGNAME extended attribute -- somehow
a huge name was being generated and written to the static buffer, which was
too short for it.  Jeff made a workaround for this -- a dynamic buffer, an
additional debugging statement -- in ckufio.c, so we can track down the real
reason this is happening.  Installed and announced as 5A(190) ALPHA.04.
ckufio.c, ckcfns.c, 29 Apr 94.

-----

An hour later...  Jeff found and fixed the .LONGNAME bug.  ckufio.c, ckcfns.c,
again, 29 Apr 94, 5A(190) ALPHA.05.

-----

New OS/2 C-K keyboard reading code, again, from Jeff, to correct problems that
were discovered by testers over the weekend.  ckotio.c 5A(130), ckocon.c,
2 May 94.

I fixed one last Black Screen Of Death problem in OS/2 C-K that occurred when
the screen was rolled back when nothing had yet been placed in the rollback
buffer.  ckocon.c 5A(143), 2 May 94.

Closed a potential memory leak that could occur when collecting a debug log
during a TELNET connection.  ckcnet.c, 2 May 94.

Fixed HP-UX 10.0 support to use HDB-style, rather than SVR4-style, UUCP
lockfile names.  ckutio.c 5A(130), 3 May 94.

Fixed SET TERMINAL CHARACTER-SET <remote> [ <local> ], in the OS/2 version,
to default the <local> character set to the current code page, if known.
ckuus7.c, 3 May 94.

Added a few #includes to ttgwsiz() in ckutio.c to allow compilation under
SCO UNIX 3.2v4.0, from William Bader <wbader@csee.lehigh.edu>, ckutio.c
5A(130), 3 May 94.  Also from William, some ANSIfication in ckufio.c.

An SCO UNIX 3.2v4.1-related fix to the sco32v4net makefile entry (the
addition of -D_IBCS2 to CFLAGS, so make the winsize structure in termio.h
be defined) from Han Holl <100327.1632@compuserve.com>.  3 May 94.  Also,
at Han's suggestion, ANSIfied the declarations of dodebug() and tlog() in
ckuusx.c, to suppress complaints.

Added support for the DECHEBM escape sequence, CSI ? 35 h/l, to OS/2 C-Kermit.
Upon receipt of CSI ? 35 h, it executes the macro KEYBOARDS, which must be
defined by the user.  Upon receipt of CSI ? 35 l, it executes the macro
KEYBOARDR.  This is just like in MS-DOS Kermit 3.13, and allows host-initiated
switching of keyboard mode, e.g. between English and Hebrew.  The KEYBOARD[RS]
macros, presumably, contain a bunch of SET KEY commands.  After actually using
this with the ALEPH software, however, I discovered it was intolerably slow
and irritating -- ALEPH sends *lots* of DECHEBM commands, and so Kermit's
screen was constantly blacking out, etc.  So I switched to a hardwired
approach -- very fast, no blinking, but also not remappable by the user.
We'll see what people think about it...  ckocon.[ch] 5A(144), 4 May 94.

Added skeleton for named pipe support to OS/2 C-Kermit.
ckcnet.h defines PIPENAML to be maximum length of server name.
ckuus3.c defines char pipename[PIPENAML], parsers SET NETWORK NAMED-PIPE
<pipename>, sets nettype to NET_PIPE, and stores pipename in pipename[].
ckuus7.c, routine setlin(), adds SET HOST <servername> if nettype is NET_PIPE,
and constructs \\pipename\pipe\serverename in ttname, to be passed to ttopen().
If Kermit is to be a named-pipe server, awaiting a connection, the user must
type SET NET NAMED-PIPE <servername>, SET HOST *.  Jeff A will fill in
the supporting code in cko???.?.  5 May 94.

Changed SET TERM TYPE ANSI to give appropriate warning message if it could
not change code page to 437.  ckuus7.c, 5 May 94.

Rec'd named pipe support routines from Jeff Altman:  ckonet.[ch], ckotio.c,
corrections to ckuus[37].c.  NOTE: Named pipe support is only for the 32-bit
version -- MSC chokes on undefined symbols, etc, in ckonet.c.  6 May 94.

Fixed SHOW NET to display named-pipe info.  ckuus4.c, 6 May 94.

Fixed TELNET command to work right after a previous SET NET NAMED-PIPE
command.  ckuusr.c, 6 May 94.

HP-UX 9.03, 6 May 94:
 . Added new makefile entry, hpux90, to be used with restricted HP compiler.
 . Enabled RTS/CTS, REDIRECT, Kanji, so now it's a full version.
 . Added custom version herald.
 . Checked uucp lockfile -- it's ok.
 . Added CK_POLL.
 . Added RENAME.
 . Added more \v(cpu) tests (for model 700, etc).
 . With all the above new features, stripped executable = 626K.
 . Tried unrestricted C compiler:
     OK with -O (= +O2), stripped executable = 495K
     OK with +O3, stripped executable = 512K (bigger because of inlining)
     Not ok with +Obb780.
     (+Obb780 = +O2, 780 max number of basic blocks)
 . Tried ANSI compilation with "KFLAGS=-Aa -CK_ANSIC -D_HPUX_SOURCE":
     It died right away.
 . Tested modem communications:
     Works great with RTS/CTS, DIALs OK, etc etc.
     Passes ripple & download tests at 57600 bps over V.32bis.
     Gets about 2200 cps on Kermit transfer of text files.
     But does not pop back to prompt automatically upon loss of carrier.
 . Tested direct serial communications:
     Null modem cable from tty00 to tty01, getty on tty01.
     Loses characters at 115200 bps, even with RTS/CTS turned on.
     Works perfectly at 57600 bps, gets about 5100 cps on text file xfers.
     Does not seem to detect any modem signals.
 . NOTE: Program must not be installed setuid or setgid to root.

Added Hebrew-keyboard-mode indication to OS/2 C-Kermit status line: "-H" is
appended to the terminal-type when the keyboard is in Hebrew mode, e.g.
"VT220-H".  Also fixed reset function to clear (reset) Hebrew mode.
ckocon.c 5A(145), 7 May 94.

Fixed the annoying problem with the beginning of file-transfer error messages
being cut off, which has been there for years.  Mostly in ckcfn2.c -- created
a separate buffer, pktmsg, for these messages.  Allocated in ckcfn3.c,
declared in ckcmai.c, used in ckcfn2.c and ckcpro.w.  7 May 94.

Added a local option to the OS/2 named-pipe support, "SET HOST .", which
allows users (like me) who don't have Named Pipe support installed on their
PCs to still use this feature for connections between two C-Kermit processes
on the same computer, e.g. for testing stuff.  ckonet.c 5A(013), 7 May 94.

Defined POSIX_CRTSCTS for NetBSD, from Mike Long.  ckcdeb.h, 8 May 94.

Documented modem initialization strings for several modems that are not
directly supported by C-Kermit's DIAL command: AT&T DataPort 14400, Boca 14.4
Faxmodem, Hayes Ultra 144, Multitech MT1432, Practical Peripherals 14400FXMT,
Zoom Telephonics 14400.  ckcker.bwr, 8 May 94.  Added a sample to the OS/2
section of CKERMOD.INI.

New code for OS/2 from Jeff Altman, 8 May 94:
 . Beginnings of mouse support, not turned on.
 . Beginnings of NETBIOS support, not turned on.
 . New ttoci() uses DosWrite(), but checks connection first.
 . Fix for Named Pipe buffering.

Added command-level support for SET NET NETBIOS, SET TERMINAL MOUSE, including
HELP, SHOW NET, SHOW TERMINAL, SHOW FEATURES, etc.  Lots of files.  8 May 94.

Tested new OS/2 ttoci() on a 57600-bps serial connection thru a non-buffered
UART with TERMINAL OUTPUT-PACING set to 0 -- works great: does not get blocked
at all when typing, using F or arrow keys, using keys that have long strings
assigned to them, and even when pasting massive amounts of text into the
window.  But it still does give the TRANSMISSION BLOCKED indication if, for
example, RTS/CTS is in effect and the modem turns off CTS.  And it still pops
back to the prompt if CD drops.  So I changed the default TERMINAL
OUTPUT-PACING to be 0 (no pacing!) instead of -1, and changed CKCKER.UPD
accordingly.

Also tested Named Pipe support -- works much better -- file transfers with
4 window slots x 2K-byte packets go without a hitch.

Fixed OS/2 VT emulator's newline-mode to go by the book (DEC VT220
programmer's manual): "Causes a received LF, FF, or VT code to move the cursor
to the first column of the next line."  Also fixed CR-DISPLAY CRLF to echo a
linefeed locally (as well as a CR) when TERMINAL ECHO is LOCAL.  Also
straightened out a small mess with SO/SI.  Also documented the flow of
incoming data in the source code.  Also discovered that code-paging switching
doesn't work in a window.  ckocon.c 5A(146), 8 May 94.

-----

Added SIGTSTP suspend support to HP-UX 9.0 and later versions.  ckutio.c
5A(131), 9 May 94.

Added parsing for SET NET NETBIOS <name> and SET HOST for NETBIOS.  ckcnet.h,
ckuus[37].c, 9 May 94.

Howie Kaye <howie@columbia.edu> discovered a bug in REINPUT (it was matching
things it shouldn't have been).  He also noticed that it was not possible to
refer to \%letter variables in uppercase, e.g. \%A.  Both fixed in ckuus4.c,
9 May 94.

Fixed HP-UX 9.0 ANSI + optimizing compilation.  ckufio.c, makefile.  10 May 94.

Fixed some glitches in the CRT and FULLSCREEN file transfer display during
and/or after RESEND operations.  12 May 94.

Steve Walton enabled RESEND for the Amiga version.  Defined CK_RESEND in
ckcdeb.h for the Amiga.  16 May 94.

New set of Stratus-VOS-specific files from David Lane
<David_Lane@vos.stratus.com>, 16 May 94.

After an extended debugging session with Jeff Altman, it was determined that
LINK386 2.01.012 or later is needed to build 32-bit OS/2 C-Kermit; otherwise
we get garbage like two variables allocated to the same storage, etc.
16 May 94.

New ckotio.c, ckocon.c, ckoker.mak files from Jeff Altman with mouse support
and keyboard buffering added, removal of critical sections, now replaced by
threads.  Also, I fixed a bug with DEC line-drawing characters that I
introduced in May 8th's cleanup.  This is Alpha.11, dated 18 May 94.

-----

Changed E-PACKET command to always send packet 0 with block-check type 1.
Otherwise there's a good chance the other Kermit won't be able to read it.
ckcmai.c, ckcpro.w, ckuusr.c.  19 May 94.

Changed PCGET macro (APC version) in CKERMIT.INI to account for the
possibility that the requested file might not exist on the other end.
19 May 94.

After wiping out my connection once too often by accident, I decided to make
SET EXIT WARNING also apply to SET HOST, SET LINE, SET PORT, and TELNET
commands.  ckuus[r37].c, ckuusr.h.  20 May 94.

While reading code in cmifi() - input filename parser - I noticed that it
could return without freeing malloc'd memory.  Fixed in ckucmd.c, 19 May 94.

Changed the OS/2 CD command to allow unquoted backslashes in directory
names.  cmdir() in ckucmd.c 5A(060), 20 May 94.

Ditto for input file parsing in cmifi() and output file parsing in cmofi() in
ckucmd.c.  I also added special cases for IF EXIST and IF DIRECTORY in
ckuus6.c.

In cmdir() and cmifi(), Kermit now tries to parse the string as a file or
directory name literally.  If it succeeds, fine; if not, then it passes the
string through the variable-expander (xxstring()) and tries again.  In
cmofi(), the process is somewhat different: the string is scanned to see if
contains C-Kermit variable or function names, and if it does, it is evaluated;
otherwise it is taken literally.  The reason for this is that C-Kermit
variable names can easily be legal OS/2 filenames; "receive \%a" could create
a file called %A in the root directory.

The previous syntax (using / or \\ as the directory separator) continues to
work.

The new scheme follows the "principle of least astonishment" for regular
users, but might confound (a very small number of) diehard script programmers;
the rules are spelled out in the OS/2 section of CKCKER.UPD, along with
techniques that script programmers can use for resolving ambiguities.

Fixed the DIRECTORY, TYPE, and DELETE commands in OS/2 C-Kermit to work when
given a filespec that contains a directory field.  This never worked before.
Also, changed the DIRECTORY command to accept trailing switches to be passed
to OS/2, like "directory c:\temp\foo.* /p /o-d", as well as output redirection,
so now it accepts almost everything the OS/2 DIR command accepts, including
lone disk letters.  ckuusr.c, ckuus6.c, ckucmd.c, 20-21 May 94.

Added some text about the mouse to OS/2 C-K HELP TERMINAL. ckuus2.c, 21 May 94.

Fixed the HELP command's "more?" prompter not to set the FAILURE flag if the
user says No.  This was causing command retry to kick in.  ckuus2.c, 21 May 94.

Work of 19-21 May installed as Alpha.12, 21 May 94.
-----

Added a few lines of code to allow OS/2 C-Kermit to use up- and down arrow
keys for command recall, in command mode only.  ckotio.c 5A(135), ckuus2.c,
22 May 94.

Added CHECK RTS/CTS to let script programs check whether RTS/CTS flow
control is available before trying to use it.  ckuus3.c, 23 May 94.

Fixes for OS/2 C-K from Kai Uwe Rommel: a problem with Named Pipe connections;
SET DIAL DIRECTORY command parsing; REMOTE SPACE execution by OS/2 C-K server. 
ckcpro.w 5A(062), ckonet.c 5A(016), 25 May 94

Fixed CHECK command to show full name of feature, even if user only gave an
abbreviation, or used completion.  ckuus3.c, 25 May 94.

Added conditional assembly support to ckcmai.c and ckcnet.c for the SOCKS
Internet relay package, from Rainer Glaschik <glaschick.kd@sni.de>, Siemens,
Paderborn.  25 May 94.

Discovered that C-Kermit lost its mind if it tried to evaluate a variable
whose value was "\" (a single backslash).  Fixed in xxstring(), ckuus4.c,
25 May 94.

Added a new command: GETC.  Like ASK, but gets just a single character, with
no confirmation or editing; returns immediately when user pushes any key
(i.e. any key that can be read by coninc(0)).  ckuusr.h, ckuusr.c 5A(137),
ckuus6.c, 25 May 95.

Rec'd confirmation that OS/2 C-K works with FTP Software's PC/TCP from
Patrick W. Foster, Tech Support, FTP Software Inc., 2 High Street, North
Andover, MA  01845, pwf@ftp.com.

Call this one 5A(190) ALPHA.14 25 May 94.
-----

Started working on HP-UX 10.0 makefile entry.  Added -DCK_POLL and -DCK_RENAME.
25 May 94.

Added EVALUATE command - trivial, since we already have the \feval() function.
ckuusr.h, ckuus2.c, ckuusr.c 5A(138), 26 May 94.

Kai Uwe Rommel sent in massive changes to the OS/2 version:
 . A new intermediate TCP/IP DLL now sits between Kermit and the real
   TCP/IP DLL (if any), so we no longer have to worry about whether or not
   to install the old "dummy" DLL.  The new DLL itself determines, at run
   time, whether TCP/IP is installed.  This change affects many CKO*.*
   modules, the makefile, etc.
 . The Rexx interface was changed to (a) remove the need for the
   CKCOMMAND command in Rexx programs, and (b) the need for the REXXFILE
   command in C-Kermit.

Jeff Altman integrated Kai Uwe's diffs and updated the install script
and the CKOREXX.DOC file.  He also did some more work on the mouse support,
but it isn't complete, so mouse support was disabled.

This is C-Kermit 5A(190) ALPHA.15, 1 June 1994.

----
New HP-UX 10.0 makefile entries for ANSI C optimizing compiler.  makefile,
4 Jun 94.

New OS/2 C-K mouse copy & paste support from Jeff Altman.  ckocon.c.  Also,
NETBIOS support cleanups -- even though this feature doesn't work yet, the
previous changes broke compilation; now at least it compiles again.  4 Jun 94.

ANSI prototyping fixes for HP-UX 10.0, ckufio.c, 5 Jun 94.

Discovered that "def \%a { foo }" did not produce the expected result, i.e.
strip the braces, keep the spaces.  Fixed in ckuus6.c.  5 Jun 94.

Fixed ttgmdm() to correctly report on Ring Indicator for HP-UX; ckutio.c
5A(132), 5 Jun 94.

Changed the protocol module to accept an I-packet when in RECEIVE mode.  It
does no harm, and helps the client recover quickly when it sends a REMOTE,
GET, FINISH, or BYE command to a non-server.  ckcpro.w 5A(063), 6 Jun 94.

For selected systems where we know it's safe to do this, I increased the
default maximum buffer size from 9K to 90K: SunOS 4.x, Solaris, HP-UX 10.0,
NeXTs, 32-bit OS/2, IRIX 4.0, VMS, etc.  ckcker.h, 6 Jun 94.

Fix to CKVFIO.C for zchki() to make it use private data structures, to
prevent unrelated input-file operations (e.g. OPEN READ) from interfering
with each other, from Terry Kennedy.  CKVTIO.C 2.0-110, 8 Jun 94.

New-&-improved mouse support for OS/2 from Jeff Altman.  ckocon.c 5A(150),
ckuus5.c, ckcdeb.h, 9 Jun 94.

Support added for WHATAMI field in protocol initialization string.  This
quietly helps get text/binary and similar items right in client/server
connections when both client and server support this feature by letting the
client's settings predominate.  No fanfare.  ckcker.h, ckcfns.c 5A(112),
ckcpro.w 5A(064), 8 Jun 94.

NETBIOS support added to OS/2 C-Kermit for IBM's LAN Adapter and Protocol
Support product (ACSNETB.DLL), but not yet for the Novell LAN Server / Netware
Requestor (NETAPI.DLL), by Jeff Altman.  Many modules.

From Terry Kennedy - a fix to allow VMS C-Kermit to construct an attribute
packet even if the VMS system does not have a rights database (which shouldn't
happen, but did).  ckvfio.c 2.0-111, 17 Jun 94.

The services directory has always used login macros (VMSLOGIN, UNIXLOGIN, etc)
that have their respective host prompts (such as \13\10$) hard-coded.  But
since prompts on VMS, UNIX, and other systems can differ (and are often
customized per site, or by the user), it would be preferable to include the
prompt as a parameter to the login macro.  However, there was no obvious way
to do this without changing the format of the services directory, which would
break existing services directories, and also because a services directory
already can have up to 9 fields, which is the maximum number of macro
arguments.  This was fixed in today's edition of CKERMIT.INI via what Baldric
would call a "cunning plan"...  The second item in a services directory entry
is the name of the login macro, such as:

  vmslogin

Now it can also, optionally, be the login macro name followed by the system
prompt, grouped by braces, as in:

  {vmslogin chemvax:\32}

Old services directories continue to work as before, in which case the default
(hardwired) prompt is looked for.  The new form can be used to specify a
non-default prompt.  ckermit.ini, 17 Jun 94.

Fixed DIAL command to catch the case where a dialing directory includes an
entry name but nothing else (i.e. no phone number).  ckuus6.c, 18 Jun 94.

Added -DCK_POLL to DG/UG 5.4 version.  makefile, 18 Jan 94.

Spent the day building and testing this version:
 . DEC 5800 MIPS Ultrix 4.2 - OK
 . DEC Alpha AXP OSF/1 1.3 - OK
 . DEC Alpha AXP OSF/1 2.0 - OK
 . DEC Alpha AXP OpenVMS 1.5 / MultiNet - OK
 . DEC Alpha AXP OpenVMS 1.5 / no net - OK
 . DG AViiON DG/UX 5.40 - OK
 . HP-9000/300 4.4BSD - OK
 . HP-9000/550 HP-UX 5.21 - OK
 . HP-9000/385 HP-UX 8.00 - OK
 . HP-9000/715 HP-UX 10.0 - OK
 . Linux 0.99.14 - OK
 . NeXT - OK
 . PC with OS/2 16- and 32-bit - OK
 . PC with UnixWare 1.1.1 - OK
 . Solaris 2.3 with gcc - OK
 . SunOS 4.1.3 - OK
 . SunOS 4.1.3 POSIX universe - OK

BUT...
 . DG AOS/VS version compiles and links OK, but does not work.  Various script
   commands (IF, OPEN READ) are mysteriously broken.  Discovered this was
   because of a misplaced #endif in the IF EXISTS / IF DIRECTORY code, which
   would have affected any C-Kermit version that did not have CK_TMPDIR
   defined.  Fixed 19 Jun 94.  Also fixed the AOS/VS CD command -- when given
   without an operand, it would fail because "homdir" ended in a colon.

 . PDP-11 2.11 BSD version is too big, again.  By 64 bytes in root segment.
   Tried getting rid of 81-byte pktmsg[] buffer, only for pdp11, in a
   disgusting hack in which it shares the user interface's tmpbuf[].  But that
   made no difference at all.  Removed E-PACKET fixes from May 19.  Still not
   small enough.  Added -DNOWHATAMI.  Finally built OK.  19 Jun 94.

Built VAX/VMS versions (no net, MultiNet, UCX) and Macintosh version.
19 Jun 94.

This is 5A(190) ALPHA.18, 16 Jun 94.
-----

Updates to VMS makefile from Terry Kennedy to allow for linking on VMS systems
that have the new FORTRAN V6 library (don't ask), plus insertion of a warning
message in the generated CKVKER.COM file that it is generated automatically
from the makefile, and all changes should be made to the makefile itself.
20 Jun 94.

From Jeff Altman: maximum scrollback in OS/2 32-bit version 
increased from 4K lines to 2,000,000 lines = 512M max process memory / 132 / 2.
Plus numerous NETBIOS changes/fixes.  20 Jun 94.

Changed reporting ownership of UUCP lockfile in ttopen() in UNIX version.
Previously, if the device had a lockfile, ttopen() would try to print a
directory listing of the lockfile.  But if the lockfile directory was not
read-accessible to the user, Kermit would give a stupid message like:

  /var/spool/locks/LCK..tty00 not found
  Sorry, device is in use: /dev/tty00

This is because Kermit's own setuid/setgid privilege is/are not (and should
not be) passed along to ls.  Rather than building an entire ls program into
Kermit, I changed it to read the lockfile (since Kermit itself has the needed
privs), get the pid, if any, and display it.  The directory listing is now
attempted only if we fail to get a pid.  ckutio.c 5A(133), 22 Jun 94.

Fixed CKERMIT.INI login macros again; the previous fix broke the feature that
allows the password to be given on the macro command line.  22 Jun 94.

Fixed a bug in which a TERMINAL ECHO setting could be spuriously "restored" to
half duplex (local echo) upon return from a non-TELNET network CONNECT session
(e.g. Named Pipe or NETBIOS).  Discovered by Jeff Altman.
ckuus7.c 22 Jun 94.

Improvements in OS/2 NETBIOS support from Jeff Altman.  ckonbi.[ch],
ckuus[3x].c.

This is 5A(190) BETA.01, 22 Jun 94, 11:30pm EST.
-----

Fixes to OS/2 NETBIOS support from Jeff Altman, ckuus[3x].c (these were
including <os2.h>, but <os2.h> #defines COMMENT, which turns on all the
commented-out code in these modules).  Also, improvements to OS/2 mouse
support, ckocon.c 5A(152), 23 June 94, 8:00am EST.  Today's changes affect
only the OS/2 version.

This is 5A(190) BETA.02, 23 Jun 94.
-----
Small change to ckcdeb.h to allow compilation on DECstation with Mach 2.6,
which has the same "union wait" "feature" as the NeXT, from Paul Placeway.
23 Jun 94.

Changed REMOTE SET FILE TYPE to also set the local file type correspondingly,
to help prevent surprises when WHATAMI takes effect.  ckuus7.c, 24 Jun 94.

Allow OS/2 C-Kermit server to respond to REMOTE WHO (it just sends back
a string saying it's an OS/2 C-Kermit server).  Jeff Altman, ckufio.c
5A(089), 25 Jun 94.

Numerous fixes and cleanups for OS/2 C-Kermit from Jeff Altman, primarily
moving mouse support to its own module, ckomou.c, because ckocon.obj was
getting too big for the linker, which resulted in runtime errors.  Many cko*
modules.  Also, Jeff updated the mouse and NETBIOS material, and other OS/2
specifics, in CKCKER.UPD and CKOKER.BWR.  25 Jun 94.

Made Interactive UNIX #include <sys/stream.h> and <sys/ptem.h> for picking up
TIOCGWINSZ structure member declarations.  Problem reported by Kenneth W
Cochran.  25 Jun 94.

Made a scad of new UNIX makefile entries to differentiate HP-UX 9.0x on the
model 800 (where poll() is not available) from all other models (where poll()
*is* available), using a new compile-time symbol NOPOLL, which overrides
CK_POLL.  makefile, 25 Jun 94.

Added a new symbol, LINUXFSSTND, which can be used in Linux compilations to
select the "new" (ho hum) lockfile conventions (/var/lock/LCK..name, decimal
ASCII 10-byte PID string with leading zeros) rather than the "old" ones
(/usr/spool/uucp/LCK..name, int PID).  Suggested by Phil Keegstra
<keegstra@aruba.gsfc.nasa.gov>.  ckutio.c 5A(135), 25 Jun 94.  

Fixed a problem in the Data General AOS/VS version, reported by Cory Sane
<sane@musc.edu>, namely that if Kermit failed to find CKERMIT.INI in the
user's home directory, it should (and used to) look in the user's searchlist,
but this was broken in edit 190 (when I made a change that I thought affected
only UNIX).  Old behavior restored in ckuusr.c 5A(140), ckuus5.c, 25 Jun 94.  

Also, at Cory's suggestion, added RESEND capability to AOS version.  This was
simply a matter of copying the zfseek() routine from the UNIX version and
defining CK_RESEND at compile time.  ckdfio.c 5A(066) 25 Jun 94;

This is 5A(190) BETA.03, 25 Jun 94.
-----
Fixed indexing in UNIX man page.  26 Jun 94.

Got VMS C-Kermit makefile additions and corrections from Bernie Volz
<VOLZ@PROCESS.COM> for Process Software TCPware on the VAX and the Alpha AXP,
plus C-Kermit binaries for those two combinations.  These same binaries also
run under UCX and, presumably also under TGV MultiNet, which has a UCX
compatibility mode...  There is also a small change to ckuus4.c for SHOW NET.
I also learned that the CKVHEX program can be run on a VAX to make a hex file
out of an AXP binary.  27 Jun 94.

Discovered that the DEC OSF/1 2.0 C compiler generates bad code if
optimization is used.  Created a new makefile entry, dec-osf20, for this,
which omits optimization.  makefile.  27 Jun 94.

Eduard Vopicka in the Czech Republic added code to enable hardware flow
control for SCO UNIX 3.2.something-or-other == ODT 3.0.  It worked fine for
turning RTS/CTS ON, but RTS/CTS did not get turned off when FLOW was set back
to NONE or XON/XOFF after having been set to RTS/CTS.  This turns out to be my
fault.  So, more rearranging of tthflow() in ckutio.c, 5A(136), 27 Jun 94,
plus adding in Eduard's code.  The result compiles OK on SunOS, UnixWare,
HP-UX, etc, but needs testing.

Fix from Jeff Altman for OS/2 C-Kermit TCP/IP sessions.
ckonet.c 5A(018), 27 Jun 94.

This is 5A(190) BETA.04, 27 Jun 94.
-----

For better debugging, rearranged things to make the "-d" command-line
option take effect first thing, rather than waiting until after sysinit()
is called.  ckcker.h, ckcmai.c, ckuus4.c.  28 Jun 94.

Changes for SET FLOW KEEP for OS/2 from Kai Uwe.  He discovered a device
(a radio clock) that gets power from the RTS line, which must be low. 
Previously, OS/2 C-Kermit always set RTS high.  Now SET FLOW KEEP leaves it
alone.  ckotio.c 5A(136), 28 Jun 94.

At the urging of Eduard Vopicka <Eduard.Vopicka@vse.cz>, added APC code to the
UNIX version.  But it doesn't work because of the two-forks business (memory
is not shared, data is changed in the wrong fork).  Eduard might take a look
at using pipes, etc.  28 Jun 94.

Added End-of-Attributes attribute ("@ ") to end of A packet.  sattr(),
ckcfn3.c.  ckcfns.c 5A(113), 29 Jun 94.

Raised maximum window size from 31 to 32.  The proof that this may be safely
done is left as an exercise for the reader.  ckcker.h, ckcfns.c, ckuus3.c,
29 Jun 94.

More OS/2 Netbios fixes from Jeff Altman.  ck[co]net.c, 29 Jun 94.
And again, 30 Jun 94.

It turns out that some UNIX versions that are not based on System V R4
nevertheless implement RTS/CTS flow control via <[sys/]termiox.h>, e.g.
HP-UX 9.0.  So I removed the #ifdef SVR4..#endif around the [S]TERMIOX
section in ckutio.c.  1 Jul 94.

Due to a typo in ckcdeb.h, REXX support disappeared from the 32-bit OS/2
version in Beta.04.  Now fixed, 1 Jul 94.

Eduard Vopicka changed ckucon.c to use a pipe for all types of communication
between the upper and lower fork.  This enabled the APC code to function in
the UNIX version -- the lower fork sends the APC command to the upper one by
interrupting it with SIGUSR1 and then sending a function code and the APC
string through the pipe.  This eliminates the need for SIGUSR2.  I cleaned up,
debugged, and rearranged the code a bit, but it still has a few minor glitches
(e.g. unpredictability of messages, sometimes you have to hit Return to get
back, etc), and so I have not added -DCK_APC to any of the makefile entries.
Use at your own risk.  Without CK_APC defined, ckucon.c should operate as
before, but with the pipe.

This is 5A(190) BETA.05, 1 Jul 94.
----- 

From Jeff Altman: ckotio.c 5A(137), ckonet.c 5A(020), and ckonbi.c 5A(004),
with corrections affecting NETBIOS and, to some degree, other networking
methods in OS/2 C-Kermit.  2 Jul 94.

Added "resend" and "psend" indications to fullscreen file transfer display.
Also added some small fixes involving too-long names, from Bill Glass
<glass@vixvax.mgi.com>.  ckuusx.c, 2 Jul 94.

More work on APC for UNIX.  Ensured that when TERM APC is OFF, that the APC
is passed through transparently, so if UNIX C-Kermit is "in the middle", in
CONNECT mode, that an APC sent from the remote host will be visible to the
most local computer, e.g. MS-DOS Kermit or whatever on your desktop PC.

Ensured that APC ON does not interfere with character-set translation, neither
7-bit national character sets, nor 8-bit sets.  However, note that when
transferring files through C-Kermit "in the middle", in CONNECT mode, this
Kermit (the one in the middle) better have its TERMINAL CHARACTER-SET set to
TRANSPARENT; otherwise, the packets will be changed on their way through and
the transfer will fail.

Noted that pipe() is supposedly available in all versions of UNIX, and that
the smallest maximum amount of stuff that can be written to a pipe is
something like 4K, whereas an APC sequence can never be more than about 1K.
Built C-Kermit on a bunch of different UNIX systems (NeXT, SunOS, SVR4, etc)
with APC enabled with no apparent problems in compilation, linking, or
execution.  So I defined CK_APC by default for all UNIX versions that are also
built with the script programming (i.e. for which NOSPL is not defined).
ckuusr.h, 2 Jul 94.

There is still one problem with UNIX APC: Any characters that come in on the
communication line while the APC commands are being executed are lost.  This
does not happen in the OS/2 version.  But this doesn't happen in UNIX version
when APC is not involved -- if you escape back to the C-Kermit prompt while
the remote end is generating output, it will be saved up (given buffer
capacity, flow control, etc) for when you next CONNECT.

Added APC support to VMS C-Kermit.  This was much easier, since the CONNECT
command does not run in two forks.  It works, but has exactly the same problem
as the UNIX version: losing the remote Kermit's next prompt upon reconnecting.
To be figured out tomorrow...  CKVCON.C 5A(034), 2 Jul 94.

Noticed that spurious "Type escape character (^\) followed by..." message
was still being given in cases where it wasn't needed when the file transfer
display was not fullscreen.  Fixed in ckuusx.c, 3 Jul 94.

While looking at the previous problem, I realized that there was a lot of
inconsistency and overlap between ttchk() and conchk() in ckutio.c.  So I
created a new (static) routine, in_chk(), which replaces both of them, and
adds new methods of checking to each, including select(), which had never been
used here before.  Addition of select() covers HP-UX systems prior to 9.0,
which previously were not covered (I checked the oldest HP-UX system I have
access to, 5.21, and it had select()).  But then after building and testing
the new code on HP-UX, I discovered that all HP-UX versions also had FIONREAD,
which is preferable to select() because it returns not only the state of the
read buffer, but the number of bytes in it.  The new in_chk() routine is
structured to use FIONREAD, if it is available, in preference to select(),
poll(), rdchk(), or other methods, because FIONREAD gives not just a yes/no
status, but the actual number of characters waiting.  This is a major
improvement for HP-UX and probably many others -- not only does it make
local-mode file transfer interruption easier, but it makes sliding windows
work better (see notes above from Oct 25, 93).  In doing this, I also got rid
of usleep() in the SunOS, NeXTSTEP, and BSDI, versions, replacing it by
select(), in msleep().  Also, I moved the compile "logic" (#ifdefs) for
deciding about all this to ckcdeb.h, so it would be available at all times to
all modules, and added display of their status to SHOW FEATURES.  makefile,
ckcdeb.h, ckuus5.c, ckutio.c 5A(137), 3 Jul 94.

Since HP-UX doesn't need CK_POLL any more, I removed all the HP-UX 9.0
model-800 specific makefile entries that I added a few days ago to account for
poll() not being available on the 800 series.  I also removed it from the
HP-UX 10.0 entries.  Also added -DRENAME to HP-UX 8.0 makefile entries, and
cleaned them up.  Tested on HP-UX 5.21, 8.0, 9.03, and 10.0.
makefile, 3 Jul 94.

Noticed that file dates weren't recorded correctly by 4.4BSD (BSDI, etc) when
receiving files.  This is because there was no code in zstime() in ckufio.c
to adjust for the timezone.  After some digging, I found out how to do it
and added the needed code.  Tested on BSD4.4-Lite and BSDI 1.0.  It won't work
(obviously) if the system does not have its timezone set correctly, but
otherwise it seems fine.  ckufio.c 5A(090), 3 Jul 94.

Linus Torvalds told me that Linux supports both select() and FIONREAD, so I
defined SELECT for all Linux builds, allowing it to be used in (at least)
msleep().  FIONREAD is not available on Linux 0.99.14.  I'm not sure which was
the first release to have it, but if Kermit is built on a system that has
FIONREAD defined in <sys/ioctl.h> (?), then it will be used by in_chk().  In
any event, the Linux version now has a working in_chk(), and so users no
longer have to precede local-mode file-transfer interruption characters with
the CONNECT-mode escape character, and sliding-window transfers will work
better now.  ckcdeb.h, ckutio.c 5A(138), 4 Jul 94.

Removed -DUSLEEP from Linux makefile entries, fixed the static-linking Linux
entries (which never worked before), and consolidated all the Linux entries
into linux, linuxs, linuxtcp, linuxtcps.  makefile, 4 Jul 94.

Discovered that UnixWare 1.1.1 supports select() too, but didn't do anything
about because who knows about 1.1, 1.0, etc, and it already uses poll(), so
who cares.

Rearranged and fixed the Linux hi-speed stuff again, via suggestions from
Alan Modra <alan@spri.levels.unisa.edu.au>.  I also got rid of the messages
telling about LINUX_HI_SPEED or ASYNC_SPD_MASK.  It turns out that it does no
harm to always build Linux C-Kermit with high speeds enabled.  If the
underlying Linux version does not support a high speed, the corresponding
SET SPEED command will fail (tested on Linux 0.99.14).  If it turns out I'm
wrong, you can add -DNOHISPEED to CFLAGS.  ckcdeb.h, makefile, ckutio.c,
6 Jul 94.

Minor changes for SCO Xenix 2.2.3 & 2.2.4 with Excelan and Lachman TCP/IP,
respectively, from William Bader.  6 Jul 94.

Fixed prescan() to compile OK with -DNODEBUG, change from Douglas Boyce
<ak272@freenet.buffalo.edu>.  ckuus4.c, 6 Jul 94.

Changed OS/2 default flow control from KEEP to NONE, because KEEP no longer
explicitly turns on Request To Send (RTS), but all the other methods do.  This
was preventing communication from taking place at all for some people
(reported by Bob Babcock).  ckotio.c 5A(138), 6 Jul 94.

Made separate keyword tables for SET FILE TYPE and REMOTE SET FILE TYPE.  On
VMS, OS/2, etc, users should not be allowed to REMOTE SET FILE TYPE LABELED or
other system-specific types -- only TEXT and BINARY.  Thanks to Max Evarts for
noticing this anomoly.  Also, hooked SET SESSION-LOG into the REMOTE table,
since TEXT and BINARY should be the only combinations.  Also, made ASCII an
invisible synonym for TEXT.  ckuus3.c, ckuus7.c, 6 Jul 94.

More fixes to OS/2 NETBIOS support from Jeff Altman, ckonet.c, 6 Jul 94.

Minor ANSIfications to CKVFIO.C and ckcnet.c for VMS with GCC, from James
Sturdevant <sturdeva@watsun.cc.columbia.edu>.  CKVFIO.C 5A(112),
ckcnet.c, 8 Jul 94.

Added code, but left it commented out, for setting socket buffer size for
TCP/IP connections, from William Bader <wbader@csee.lehigh.edu>.
ckcnet.c 5A(032), 8 Jul 94.

Eduard Vopicka pointed out that problems with UNIX APC losing characters might
be exacerbated by the arrangement of the two CONNECT forks.  But we can't
switch to using select() in one fork, because select() is not portable.  Nor
can we use lightweight processes, shared memory, threads, etc, for the same
reason.  The current structure (top fork reads/sends keystrokes, bottom fork
reads/displays communications device input) was chosen arbitrarily about 10
years ago, and we have built upon it ever since.

One problem with the CONNECT module is that it clears its internal buffers
(ibuf, obuf) and pointers (ibp, obp) every time it is entered.  So I
rearranged the code to ensure that these buffers and pointers are allocated
and set only upon first entry.  This way, if we read (for example) an APC
escape sequence followed by the subsequent prompt into the CONNECT command's
internal buffer, we don't clear out the material after the escape sequence
in the act of popping back to the command parser.  This won't help with UNIX
because of the fork problem, but to test this hypothesis, I rearranged the VMS
CONNECT module (one fork) to behave this way.  And now it works.

In the UNIX version, the upper and lower forks have their own private copies
of the communications-device input buffer, ibuf[].  If the lower fork exits
with characters remaining in ibuf[], they are lost.  This could be fixed, as
Eduard Vopicka suggests, reversing the forks.  Let's say the fork that reads
the keyboard and sends the keystrokes is the called KEYB fork, and the fork
that reads from the communications device and displays on the screen is called
the PORT fork.  Currently, the PORT fork is the lower fork.

 1. The PORT fork can get a disconnect indication when trying to read from
    the communications device, and it must inform the KEYB fork.  Likewise,
    the KEYB fork can get a disconnect indication when trying to send to
    the communications device, and it must kill the PORT fork.  The same
    would be true if the forks were reversed.

 2. The PORT fork gets incoming TELNET negotiations, and so it must inform the
    KEYB fork of echoing changes, since the KEYB fork is responsible for
    echoing.  Thus, no matter what the arrangement of the forks, the two must
    keep their echoing status in sync.

 3. The PORT fork gets X.25 PAD parameters, so it must convey them to the KEYB
    fork because the KEYB fork uses them all.

 4. The PORT fork gets the APC escape sequence, and must convey it to the
    command parser.  It also may have read ahead, and so therefore must not
    destroy the low-level communications input buffer.

If the forks were reversed, we would still need signals from the lower to the
upper fork in cases 1-3.  We would still need to send data through pipes in
cases 2 and 3, but from top to bottom rather than vice versa.  So we would
gain nothing in simplicity of structure.  Tons of code would need to be
rearranged and tested.  The ramifications could be far-reaching, the effort
and risk great, and the benefits by no means assurred.  So no reversing the
forks.

A simpler solution was found: the lower fork, upon detecting the end of an APC
sequence, first flushes its output buffer to refresh the screen (ckcputf), and
then passes the values of its input buffer pointers (ibp), count (ipc), and
contents (ipc characters starting at ibp) to the upper fork through the pipe.
We know that no characters are sitting in the lower level ck*tio.c buffers,
because the last call to ckcgetc() got all that there were.  Any other
characters that have arrived from the host in the interim are still in the
operating system's buffers, and we can still read them later.  Now since ibp,
ipc, and ibuf (as of today) stay put from one conect() invocation to the next,
the CONNECT command will pick up exactly where it left off previously, with
the next newly-created lower fork inheriting the correct buffer counts,
pointers, and contents from the upper fork.  The only glitch seems to be that
when the APC commands include an ECHO command, sometimes the first character
of the echoed text is lopped.  ckucon.c 5A(065), 8 Jul 94.

Glitch fixed.  The problem was that we always would output the Esc character
that starts an APC sequence, because we did not yet know it was going to be an
APC.  This would cause bizzare effects in the terminal emulator or window,
since any character at all could show up after the APC sequence.  So now, when
APC processing is enabled (i.e. SET TERM APC is not OFF), we hang on to the
Esc character until the next character arrives; if it is not the APC
introducer (underscore), then we output the Esc before outputting the next
character.  If it is the APC introducer, we process the entire APC sequence
internally, including the Escape.  ckucon.c 5A(066), 9 Jul 94.

Migrated today's changes to the VMS version.  CKVCON.C 5A(035), 9 Jul 94.

From Jeff Altman, more fixes and improvements to OS/2 NETBIOS support,
including enabling of sliding-window transfers, plus a new OS/2 makefile.
9 Jul 94.

Installed LINK386 2.01.016 on my OS/2 system, which fixes a stack problem
that was causing OS/2 C-Kermit to crash when the mouse was used.  9 Jul 94.

Added REDIRECT command for Linux.  ckcdeb.h, 9 Jul 94.

Tried adding -DSELECT for Solaris, but it seemed to screw things up; put it
back to how it was, using poll().  Tried "#define FIONREAD FIORDCHK" for
Solaris, but that REALLY did not work.  In case anybody ever asks you,
FIORDCHK != FIONREAD.

Built new OS/2 C-Kermits, 16 and 32 bit, with above fixes and new linker.

And new VMS C-Kermits, VAX and AXP, UCX and TGV.  And new UNIX C-Kermits:
SunOS 4.1.3, Solaris 2.3, NeXTSTEP 3.1, Linux, UnixWare, HP-UX, etc, working
out glitches long the way.

(Note: still need to test -DNOCSETS, -DNOAPC, -DNOESCSEQ, etc...)

(Note: still need to fix up X.25 code in ckucon.c...)

This is Beta.07, 9 Jul 94.
-----

Noticed that when TELNETing from Linux or Solaris (System-V-style signal
handling) to NeXTSTEP (which has a bizarre TELNET server that sends lots of
echo changes when you first connect to it, probably 3 or 4 within a couple
microseconds), that when the TELNET server breaks the connection, Kermit would
hang.  Turns out that this was caused by our nice new pipeint() routine and
consolidation of SIGUSR1 and SIGUSR2.  The problem was that we were trying to
read from a pipe (to handle the duplex change) after the port fork was already
pause()'d.  So I went back to having two signal handlers, one for
disconnections (forkint() on SIGUSR1) and the other for mode-change messages
to be read from the lower fork through the pipe (pipeint() on SIGUSR2).  This
fixed the problem on both Solaris and Linux.

However, Linux is having one heck of a time handling SIGUSR2s...  Signals do
not seem to be delivered reliably, or else they are not blocked while being
handled.  When TELNETing to the NeXT, Linux C-Kermit almost always gets the
echoing wrong because Linux can't seem to handle the repeated SIGUSR2 signals
caused by rapid-fire echoing changes without dropping some.  The pre-APC
version of ckucon.c had exactly the same problem on Linux so we can't blame it
on the new code.  Hopefully, this won't affect anybody, ha ha.

Ha ha indeed.  Next I tried the new code on Unixware.  Upon TELNETing to a
NeXT, it politely said "User signal 2" and then Kermit's upper fork simply
vanished, leaving the lower CONNECT fork merrily spinning away, like a
headless chicken.  Evidently, the default action for SIGUSR2 in Unixware is to
_exit().  This problem turns out to be present also for earlier versions -- it
was evidently *never* possible to TELNET from C-Kermit on Unixware to a NeXT.

To fix, I began by putting signal(SIGUSRx,SIG_IGN)'s everywhere (program
startup in sysinit(), CONNECT exit code, etc) to ensure these signals are
never armed when Kermit's handler is not ready.  When pipeint() gets SIGUSR2,
it rearms it immediately as its first statement.  Thus there is only the
tiniest possible window during which a SIGUSR2 is caught and the time at which
it is re-armed -- i.e. the time that it takes to execute the signal() call.
Nevertheless, this problem will occur about 50% of the time when TELNET'ing
with C-Kermit from Unixware to a NeXT.  In looking at Unixware <signal.h>, I
see that SIGUSR1 and SIGUSR2, normally 30 and 31, have different values: 16
and 17, which are more often used (on other systems) for such items as SIGURG
and SIGSTOP.  Then I discovered that in Linux, the values are 10 and 12.  I
wonder if that's the trouble...  No.  Logs reveal that when TELNET'ing to a
normal kind of host, like a Sun, pipeint() gets invoked as expected and works
properly.

OK, so back to Linux.  After having honed this code down to the bone, I ran
it again on Linux and found:

  CONNECT TELNET duplex change=0
  pipeint arg=12
  pi** PORT=255 <-- Aha! pipeint is interrupted before it can do anything.

It read the function code from the pipe, but was interrupted before it
could (a) finish writing the debug entry (which should have said "pipeint
code=3"), and (b) execute the function, i.e. change duplex.  And again:

  TELNET SENT DONT ECHO=1
  CONNECT TELNET duplex change=1
  pipeint arg=12
  pi** PORT=13   <-- And again.
  ...
  tn_doop returns=2
  CONNECT TELNET duplex change=0
  pipeint arg=12
  pCKCGETC 1 calling ttinc(0)  <-- And again.

So the (disgusting, bleh) solution is for the lower fork, after signalling a
duplex change to the upper fork, to sleep for a few hundred milliseconds.
This should be totally transparent to the user, because, after all, how often
could it possibly happen during a telnet session?  This change makes the
Linux version echo correctly, and it seems to fix the Unixware situation too.

All this: ckucon.c 5A(067), 10 Jul 94.

This is Beta.08, 10 Jul 94.  The changes from 07 to 08 are strictly specific
to UNIX.
-----

From Mark <markd@sco.com>, who works at SCO...  He says that RTS/CTS
(CK_RTSCTS) and Sys V R3 Job Control (SVR3JC) can safely be added to all SCO
UNIX 3.2v4 makefile entries.  makefile, 11 Jul 94.  Also, a fix for a typo in
ckucon.c which breaks compilation when DYNAMIC is not defined, reported by
Mark and many others.  11 Jul 94.

Changed default SET TERMINAL APC in OS/2 from ON to OFF for security reasons.
ckuus5.c, 13 Jul 94.

Jeff Altman cured a problem in OS/2 C-Kermit, in which the system could hang
under certain conditions during execution of spawned subprocesses. 
ckufio.c 5A(091), 13 Jul 94.

Also from Jeff, more improvements to the OS/2 Netbios code.  Now long-packet
sliding-window transfers go very smoothly over Netbios.
ckonbio.c 5A(006), ckonet.c 5A(023), 13 Jul 94.

Also from Jeff, updates to the OS/2 makefile.  ckoker.mak, 13 Jul 94.

This is Beta.09.
-----
Fixed CKETEST.INI to be able to TAKE CKEDEMO.INI even if it is not being
executed from the current directory, as long as it is in the same directory
that CKETEST.INI was TAKEn from, using a diabolical trick involving
\freverse(\v(cmdfile))...  CKETEST.INI, 14 Jul 94.

More NetBios fixes from Jeff, plus a fix for an off-by-one error in the
file transfer display.  ckonbi.c, ckonet.c, ckuusx.c, 14 Jul 94.

Made OS/2 C-Kermit screen writes during execution of REMOTE commands be
unbuffered to alleviate jerkiness.  ckcfns.c, 14 Jul 94.

Added \v(ftype) = file type ("text", "binary", etc).  ckuus4.c, 14 Jul 94.

Made REMOTE SET WINDOW also set the local window size.  ckuus3.c, 14 Jul 94.

Got access to an Alpha AXP VMS 6.1 system with Wollongong TCP/IP, courtesy of
the Mount Sinai School of Medicine of the City University of New York, with
special thanks to Ragu Nagalingam.  Built Kermit OK, but the TELNET command
doesn't work.  Turns out to be because of some kind of DEC C prefixing.  Larry
Henry at Wollongong pointed me at the Wollongong makefile sample showing how
to get around this, but when I use it, some of the modules (like ckvfio.c)
won't compile because of conflicting definitions in Wollongong and DEC header
files.  Just for laughs, I tried building CKVFIO.C with the old makefile,
which works (luckily, CKVFIO.C contains no network references), and then
building the rest with the new procedure (a temporarily hacked-up .COM file),
and then linking them together.  It worked.  Will have to sort all this out
later.

This is Beta.10.
-----

New XSEND.CMD Rexx procedure from Jeff Altman, for sending directory trees
from OS/2 C-Kermit, similar to the XSEND.EXE program for DOS, except there
is no intermediate command file.  CKOXSE.CMD (= XSEND.CMD on the diskette).
14 Jul 94.

Bob Babcock reported: "If I want to send file Bin/foo, and I type:

   send B<tab>f

then realize that the file name completion has not generated a path
separator, and try to backspace to correct the problem, I get a message that
file Bin is not readable.  Somehow it doesn't seem right for Kermit to
complain that I've entered something invalid in response to my attempt to
backspace to fix what I've typed."  Fixed in ckucmd.c 5A(061), 15 Jul 94.
Now if you activate filename completion on a directory name (except in the VMS
version, where path specifications have more complicated syntax), Kermit will
complete the name of the directory, then supply the path separator, and then
beep to let you know that the file specification is not complete.  CK_TMPDIR
must be defined, because we need the isdir() function for this.

\m(foo) is supposed to be a "long variable name", and should act like any
other variable, such as \%a.  However, it turns out that it never did, and
nobody ever noticed.  The difference that \m(foo) returned the definition of
the "macro" foo, literally, without bothering to evaluate it any further.  So:

  def \%a \v(date)
  echo \%a
  15 Jul 94

but:

  def foo \v(date)
  echo \m(foo)
  \v(date)

In other words, \m(foo) was the same as \fdefinition(foo).  Now \m(foo)
returns the fully evaluated definition of foo, but \fdef(foo) still returns
its "bare" definition, as before, and as it should.  I hope nobody depended on
the old erroneous behavior; if so, they need only change \m to \fdef wherever
it matters.  The new behavior is compatible with MS-DOS Kermit.  ckuus4.c,
15 Jul 94.

Added CHECK REDIRECT.  ckuusr.c 5A(142), 15 Jul 94.

New command file, ckuszrz.ini, for UNIX, for defining macros to run sz, rz,
sb, rb, sx, rx as external protocols.  Depends on the \m(foo) change and on
CHECK REDIRECT.  15 Jul 94.

Never mind.  Backed off on \m(foo) change, and reworked ckurzsz.ini
accordingly.  The \m(foo) change had disastrous consequences when "foo"
was defined to be an OS/2 file specification that included \ as the path
separator.  This totally broke almost everything in CKERMIT.INI.  Live and
learn (again).  15 Jul 94.

Roger J Allen <rja@sispro.sis.rpslmc.edu> noticed that TELNET BREAK wasn't
working any more on DYNIX/ptx, since some time after Alpha.02.  Turns out
it was broken in a lot more places than that -- everywhere but OS/2.  Fixed
in ckcnet.c 5A(034) 15 Jul 94.

This is Beta.11.
-----

Corrected a typo in the sco3v4 makefile entry noticed by Lawrence Kirby.
20 Jul 94.

From Jeff Altman, a fix to the OS/2 version, which could crash if you:

  SET NETWORK NETBIOS BLAH
  SET HOST *

twice in a row, if you did not have TCP/IP installed on your system.
ckonet.c 5A(025) 21 Jul 94.
  
Made an executable for VAX/VMS 5.5-2 / Wollongong Pathway 1.1 thanks to access
provided by the Mt. Sanai School of Medicine in New York City.

This is Beta.12.
-----

Fixes from Jeff Altman for OS/2 C-Kermit:  "(1) SET NETWORK NETBIOS now
defaults to the myhost[] string instead of 'kermit' for the local NetBios
name.  ckuus3.c.  (2) Refixed yesterday's tcp_avail fixes.  The previous
fixes probably broke DECNet.  I also fixed an extremely rare bug which would
occur if a file transfer was broken prematurely by the Kermit server while
using DecNet, Named Pipes, or NetBios as the transfer media.  Since these
media use a local buffer, a netflui() call must flush the local buffer as well
as the network.  Otherwise, kermit would get very confused.  ckonet.c."

Also, I changed the SET NETWORK command to fail on OS/2 if it is given for
any type of network that is not loaded.  And I changed the default network
type in OS/2 to be the first one on the following list which actually is
loaded:  TCP/IP, DECnet, NETBIOS, Named Pipe.  I also fixed the SHOW NETWORK
command to fit on one screen again by omitting details of networks which are
not loaded or active.  ckonbi.c, ckonet.c, ckuus4.c.  22 Jul 94.

Changed OS/2 SET NETWORK to hide the network names of uninstalled networks so
they won't show up in the SET NET ? listing, and changed the SET NET default
string from a hardwired "tcp/ip" to the name of the highest installed network
from the list above.  ckuus3.c, 22 Jul 94.

Fixed OS/2 C-Kermit server's response to REMOTE HELP to contain CRLFs rather
than only LFs.  ckcmai.c, 22 Jul 94.

This is Beta.13, 22 Jul 94.
-----

Changed REMOTE SET FILE TYPE { TEXT, BINARY } to also allow LABELED.
VMS and OS/2 only.  ckuus[37].c, 23 Jul 94.

Added \v(sysid) variable to return the Kermit code for the system ID
(see pp.275-278 of the Kermit book), e.g. U1 for UNIX, UO for OS/2, etc.
ckuusr.h, ckuus4.c, 23 Jul 94.

Added \v(space) variable -- for OS/2 only for now.
ckuusr.h, ckuus4.c, 23 Jul 94.

Added client and server end of REMOTE PWD.  This is a new Generic server
command, "A".  ckuusr.h, ckuus7.c, ckuusr.c 5A(143), ckcpro.w 5A(065),
23 Jul 94.

Designed and implemented REMOTE QUERY and REMOTE ASSIGN, to let a Kermit
client inquire about and set the values of a Kermit server's variables.  The
design is system independent, allowing separate querying of "kermit" read-only
variables (like C-K's and MSK's \v(...) items), "system" read-only variables
(like environment variables in UNIX or DOS, or logical names in VMS), and
"global" variables (for want of a better term), which can be queried or set.
When C-Kermit is the client, results of queries (up to 1K in length) go into
the new \v(query) variable, which refers to the query response buffer, which
is 1K in length.  Anything after 1K is discarded.

Added QUERY and ASSIGN to ENABLE / DISABLE server-feature list.
ckuusr.h, ckuus6.c, ckcpro.w 5A(066) 24 Jul 94.

Added text about REMOTE QUERY and ASSIGN to server help text.
ckcmai.c, 24 Jul 94.

Added help text for REMOTE { QUERY, ASSIGN } to ckuus2.c.  24 Jul 94.

Changed REMOTE QUERY to display as well as store.  All the other REMOTE
commands display whatever comes back, so REMOTE QUERY should too.  ckcfns.c,
24 Jul 94.

Noticed that in OS/2 version, the DIRECTORY command, when given a wildcard
filespec which matched no files or exactly one file, would give a parse error.
rather than reporting "file not found" or listing the single matching file.
Fixed in ckuus6.c, and ckucmd.c 5A(062), 24 Jul 94.

Discovered that SET BUFFERS never worked in 16-bit C-Kermit implementations
where malloc() requires an integer argument, if given numbers that were too
big for the wordsize.  The 16-bit OS/2 version, for example, would just hang.
Fixed inibufs() to use unsigned ints and to catch and recover from integer
overflow, and fixed the SET BUFFERS parser also to catch integer overflow and
give an informative message.  ckcfn3.c, ckcfns.c 5A(115), 24 Jul 94.

This is Beta.14.
-----

Cast away a bunch of complaints about (CHAR *) vs (char *) mismatches from
ckcpro.w.  26 Jul 94.

Fixed a bug in the rejection of files on the basis of size, noticed by Jeff
Altman.  ckcfn3.c, ckcfns.c 5A(116) 26 Jul 94.

Changed #ifdef COMMENT to #ifdef CK_LINGER around the block of TCP/IP
code that William Bader sent in for netopen().  This turns off the socket
"linger" parameter, which makes a close() block until all data is sent, but
which can result (he says) in Kermit hanging when telnet'ing to a flaky server
or to a modem server when the modem is in use.  Also included is some code
to increase socket buffer sizes, now selected by CK_SOCKBUF.  Both of these
symbols are undefined by default.  On SunOS 4.1.3, enabling CK_LINGER revealed
that the linger parameter was already off, so it had no effect.  Enabling 
CK_SOCKBUF increased the socket buffers from 24576 to 32768, but no
improvement in performance was noted.  ckcnet.c 5A(035), 30 Jul 94.

From Steve Walton: Commodore Amiga support for the DIAL and SCRIPT commands.
ckudia.c 5A(059), ckuscr.c 5A(020), 30 Jul 94.

Don't call prescan() if NOICP is defined.  ckcmai.c 5A(190), 30 Jul 94.
From Michael T Pins <amigapd@icaen.uiowa.edu>.

A lot of recoding in the system-independent modules to allow F and G packets
(as well as ACKs) to be long packets of any length at all, up to the maximum
negotiated length.  Elimination of various extraneous limited-length static
buffers and arcane code regarding encstr() -- encstr() now encodes directly
into the packet data buffer.  I don't remember what the problem was before
that prevented this from working, but I must have fixed it since then.  These
changes allow filenames, server commands, and ACK data fields up to the
maximum negotiated packet length, and thus allow short-form responses to
server commands to be made via long ACK packets.  C-Kermit server tested
against both C-Kermit and MS-DOS Kermit client successfully.  ckcpro.w
5A(067), ckcfns.c 5A(117), ckcfn2.c, ckuusx.c, etc etc, 30 Jul 94.

Changed REMOTE QUERY GLOBAL to REMOTE QUERY USER -- just the name, not the
semantics... GLOBAL is too computery.  ckuus7.c.  30 Jul 94.

Ever since the UNIX APC code went into ckucon.c on July 9th, Eduard Vopicka in
Prague <Eduard.Vopicka@vse.cz> has been finding and closing little race
conditions in the interprocess communication between the two CONNECT forks.
First, he found that the msleep(250) was not necessarily enough, so what was
needed was a portable equivalent of semaphores.  To make a 3-week-long story
short, we now have the two CONNECT forks interrupting each other in *both*
directions, rather than just one, and using pipes in both directions to ensure
that needed actions have completed.  Also, we're back to using one signal
rather than two, and that signal can be defined at compile time.  It turns out
that SIGUSR1 is not safe on all systems -- for example, it is said to do take
the place of SIGURG in SCO versions, to signal OOB data on a TCP socket.  And
of course, we learned earlier that SIGUSR2 is dangerous elsewhere, like in
UnixWare.  So in ckucon.c we now use CK_FORK_SIG, which can be defined at
compile time to be any signal you want.  Because of the new synchronization
between the forks, many msleeps and sleeps could be removed, resulting in
noticeably snappier performance.  Eduard also discovered that under certain
conditions -- apparently only involving APCs -- the CONNECT module can be
entered with an alarm() active, which eventually goes off causing a longjmp to
a long-gone place and thus a core dump.  The cause was not found, but adding a
call to ttimoff() in the CONNECT module fixes the problem.  I took Ed's work
pretty much as-is, but had to fix assorted portability problems, mainly with
preprocessor constructions & identifier names, and also fixed the problem with
the disappearing "Back at..." message after an APC had been executed.
ckucon.c 5A(068), ckutio.c 5A(142), 30 Jul 94.

Tested new UNIX CONNECT module on SunOS 4.1.3, NeXTSTEP 3.1, UnixWare 1.1.1,
Solaris 2.3 (with both GNU cc and SUNPro CC), Linux 0.9.14, HP-UX 9.03.
It seems to function perfectly everywhere.

Also from Eduard: an ASCII-graphic percent-done thermometer for the fullscreen
file transfer display.  Included only if you define CK_PCT_BAR, which is not
defined by default.  ckuusr.c 5A(144), ckuusx.c, 30 Jul 94.

Changed HELP module to check terminal rows not only in HELP command, but
also in INTRO and anything else that calls hmsga().  ckuus2.c, 31 Jul 94.

Added #define NOJC to ckoker.h, because SUSPEND is not supported in OS/2 C-K.
31 Jul 94.

Added \v(startup) (startup device:directory) to OS/2 version.  ckuusr.h,
ckuus4.c, 31 Jul 94.

More changes to OS/2 NETBIOS support from Jeff Altman, primarily that NETBIOS
can never be the default network type because the user has to choose a session
name.  ckonet.c 5A(027), 31 Jul 94.

OS/2 space-checking routine fixed by Jeff A to account for the space that will
be vacated by an existing file that will be removed because of the file
collision action.  ckufio.c 5A(092), 31 Jul 94.

Removed "ioctl(ttyfd,TCSAFLUSH,&n);" from the BSD44 section of UNIX ttflui().
TCSAFLUSH is not a valid argument for ioctl().  This call was making console
messages ("ser0: ioctl(,2,,)") pop up on the system console of (at least)
NetBSD/Mac68k systems.  Reported by Ken Nakata <kxn3796@hertz.njit.edu>.
ckutio.c 5A(143), 31 Jul 94.

I discovered that when C-Kermit has a connection to a Kermit server upon
which C-Kermit's own packets are echoed back at it, C-Kermit's "echo
cancellation" technique fails under certain circumstances, and one of them
leads to an infinite loop.  Most of this has to do with the overloading of
packet 0...  Anyway the solution was to have the protocol state machine ignore
E packets and Y packets when in server command wait state.  Previously,
C-Kermit would answer an E packet received in this state with another E
packet, which not only was wrong, but results in an infinite exchange of
E-packets.  And when the C-Kermit server replies to a G command with a
short-form response (i.e. in the data field of an ACK) and the ACK is echoed
back, C-K would not detect it as an echo.  So ACKs received during server
command wait are also now ignored.  ckcpro.w 5A(068), 31 Jul 94.

In the course of this investigation it was discovered that the mysterious
messages like:

  @-|3$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$5$0___E

that we sometimes see were the result of an Init string (in the data field of
an ACK to an I packet) being misinterpreted as encoded data, which happens
when the client's G packet is clobbered: the server times out and retransmits
its previous ACK to the client's I packet, which contains the Init string, but
the client thinks it is a short-form reply to the G packet "decodes" it,
producing results like the above.  There is no way for the client to tell the
difference because the two Y packets have the same sequence number (0):
If-I-Had-It-To-Do-Over Dept.

Nelson Beebe reported that if you used C-Kermit under Solaris 2.3 in local
mode to transfer a file with its FILE DISPLAY set to FULLSCREEN, then upon
return to the prompt, keystrokes would no longer echo.  I fixed this by
adding -DCK_NEWTERM to the Solaris makefile entries.  31 Jul 94.

This is Beta.15, 31 Jul 94.
-----

Corrected a typo in the incoming-file-size-checking code, from Jeff Altman.
ckufio.c 5A(093) 1 Aug 94.

Minor correction to an error-handling section in UNIX CONNECT module from
Eduard Vopicka.  Also, reshuffling of some of the declarations to allow
non-DYNAMIC compilations to work right.  ckucon.c 5A(069), 1 Aug 94.

Added -DDYNAMIC -DCK_CURSES + "LIBS= -lcurses -ltermcap" to Tandy 16/1600
makefile entry, from Jay Rouman <jsr@dexter.mi.org>.  Makefile, 2 Aug 94.

Added Transfer Rate (CPS) to the fullscreen file transfer display, and
made a couple other minor changes to it.  ckuusx.c, 2 Aug 94.

Added \v(charset), which in the general case is the current file character
set, and in OS/2 is the current codepage (which is usually also the current
file set).  ckuusr.h, ckuus4.c, 3 Aug 94.

A correction to ckcmai.c from Mike Long <Mike.Long@Analog.com> to prevent
hlptxt from coming up undefined when built with -DNOSERVER, and correction
to some wording in SHOW FEATURES in ckuus5.c.  3 Aug 94.

Added the file transfer thermometer as a runtime selection in all CK_CURSES
versions: SET FILE DISPLAY FULL { THERMOMETER, NO-THERMOMETER }.  No
thermometer is the default except in OS/2, which has a nice-looking one.
ckuusr.h, ckuus7.c, ckuusx.c.  3 Aug 94.

Core dumps reported on NetBSD.  In tracking this down with gdb, I discovered
that SIGQUIT was always armed in SVORPOSIX versions, even when FIONREAD,
CK_POLL, SELECT, or RDCHK were available, a mistake which makes it impossible
to escape back to the prompt under gdb, because gdb takes over SIGQUIT.
So now esctrp() and all references to it in ckutio.c are enabled only if
SVORPOSIX is defined *and* FIONREAD, SELECT, RDCHK, and CK_POLL are *all*
undefinded.  ckutio.c 5A(144), 4 Aug 94.

NetBSD saga: Crash is reproducible.  It happens every time we return to the
prompt after showing a curses display.  It's because something overwrites the
cmprom pointer.  When transferring files without using a curses display, it
never crashes.  So this narrows it down to the code in ckuusx.c that handles
the curses display, or else the curses library itself.  Trying to debug this
with gdb, placing a watchpoint on cmprom takes hours and hours...  (Hours and
hours later...)  It turns out the problem was caused by a bcopy() within
getwd() writing over random memory.  Cured by using getcwd() instead.  (The
real cause, pointed out by Mike Long, is that MAXPATHLEN was not appropriately
defined, because ckufio.c was not #including <sys/param.h> -- who knew.
ckufio.c 5A(094) 4 Aug 94.

However, there must have been some reason I was using getwd() in 4.4BSD to
begin with, but I can't find it in my notes.  Vangogh at Berkeley is down now,
but that's where I would have done it.  Checking on BSDI, it seems OK there,
no core dumps, etc, but something else is wrong: the curses display only works
once.  The second time, many of the fields are stuck against the left and
right margins.  Session logs show that curses is sending different stuff the
second time around -- the escape sequences and graphic characters are the
same, but the tabs are all messed up -- too many or too few in many cases.
But this does not happen on NetBSD.

Fixes from Jeff Altman for the situation in which rapid-fire APCs from the
host could hang OS/2 C-Kermit.  ckocon.c 5A(152), ckomou.c 5A(002), 5 Aug 94.

Changes to OS/2 NETBIOS support to allow multiple virtual adapters, e.g. when
IBM and Novell NETBIOS to coexist on the same machine, from Jeff Altman.
ckuus[4y].c.  5 Aug 94.

Made 4.4BSD-based versions search <sys/param.h> to get MAXPATHLEN, and
put a little more bullet-proofing, debugging, and comments in this area.
ckufio.c 5A(095), 5 Aug 94.

Changes to SET PORT NETBIOS command to allow switching from a NETBIOS
connection to (say) a TCP/IP connection, and then back to the same NETBIOS
connection without getting an error.  ckuus3.c, 5 Aug 94.

Adjustments to previous edit by Jeff Altman.  ckuus3.c, 6 Aug 94.

QNX work, QNX 4.2.1, Watcom C16 9.5, 6 Aug 94:
 . Basic 32-bit version, OK: 366259.
 . Added KANJI, TCPSOCKET, OK: 400459.
 . Job Control doesn't work: ^Z has no effect, SUSPEND hangs (sh, ksh),
   leaves zombies behind after disconnecting.
 . ANSIC OK, Optimize -O OK: 433669.
 . CK_NAWS, CK_TMPDIR, OK.
 . CK_REDIR <sys/wait.h>: 435179.  Works too.
 . CK_CURSES OK: 396363 (curses but no TCP)
 . curses-related core dump - happens 2nd time curses is invoked.
   Fixed by calling initscr() every time, but 2nd & subsequent displays
   are messed up, like on BSDI.  Several hours spent fooling with this
   one, to no avail.
 . CK_WREFRESH added, works OK, but using stdscr instead of curscr
   because QNX curses doesn't have curscr.
 . Added 57600, 76800, 115200 bps.  No way of testing them.
 . ckhost() didn't work; it was calling uname(), changed to gethostname().
 . Input-buffer-peeking methods available are FIONREAD and select().
   FIONREAD works, but needed <sys/ioctl.h> included, works ok.
 . Including <sys/ioctl.h> also gives us modem signals (TIOCMGET, etc).
 . For msleep, added -DSELECT for select(), for which <sys/select.h> needed
   including.
 . "INPUT n string" doesn't work in remote mode, i.e. coninc(x) where x > 0
   (timed console read) does not work.  Ditto for local mode and ttinc(x).
   But ttinl(timo..) does work.  It's as if a single-character read() can't
   be interrupted, but a multiple-character read can be.  Thus, an INPUT that
   fails will hang forever.

Outstanding problems:

 . Ctrl-C trap doesn't work, I can't see why.  SIGINT is armed in in conint(),
   but it is never caught.  It is probably something to do with the c_cc[]
   array that is set up in concb() in ckutio.c.  Anyway, in command mode,
   C-Kermit reads Ctrl-C just like any other character.
 . Job control doesn't work.  Code compiles and links ok, but SIGTSTP key
   is ignored and SUSPEND command makes the program hang, no matter which
   shell is used.
 . Reactivating the curses display after first leaving it doesn't work right.
 . ttinc(n) and coninc(n) single-character read()s never get interrupted by
   alarm()/signal(), so INPUT can hang.
 . Hardware flow control needs to be added, I don't see how to do it.
   termios.h has bits called TT*HW, but they are for tcflow(), which is used
   for flow control actions, not flow-control mode selection, so I don't see
   how to do it.  There is no termios.h, and there is no CRTSCTS symbol
   defined anywhere, nor CTSFLOW or RTSFLO, nor RTSXOFF, etc etc.
 . A 16-bit version still needs to be built.
 . SET SPEED, especially high speeds, needs testing.
 . Does QNX use UUCP lockfiles?  If so, which kind?  /usr/spool/uucp/LCK..???
 . Dialout and serial comms in general needs testing.

Discovered why Ctrl-C trap didn't work in QNX.  concb() (the routine that
sets the console terminal modes for command parsing) did not set the ISIG
flag in c_lflag unless job control was enabled.  Very silly -- it should
always be set, otherwise we can't catch SIGINT.  This partially fixes the
problem.  Now the first Ctrl-C is caught but subsequent ones are ignored;
they don't even show up as data characters any more.  And yet the signal is
definitely being rearmed, as revealed in the debug.log.

Changed UNIX C-Kermit to check the handling of SIGTSTP immediately upon
startup, and if it is SIG_IGNored, then not to catch SIGTSTP signals and
suspend itself, since the shell above won't know what to do with a suspended
Kermit, and will just hang.  This doesn't help QNX though.
ckutio.c 5A(145), 6 Aug 94.

On the QNX system I was using, it turns out that I can't get *any* process to
suspend, so it's not just Kermit -- no matter what shell I use (sh, csh, ksh).
stty -a says that ^Z is the suspend character, and so does Kermit's debug log.
(Later, I learned that QNX does not support job control, and so added -DNOJC
to the compilation).

At the suggestion of James Lummel <jlummel@caprica.com>, changed jmp_buf,
setjmp, and longjmp to sigjmp_buf, sigsetjmp, and siglongjmp in the QNX
version, because QNX uses POSIX signal-handling, namely that whenever a signal
is generated, it is masked off, and the signal handler must unmask it.  This
is done by sigjmp_buf, sigsetjmp, and siglongjmp.  This is why SIGINT would be
caught only once.  A new symbol governs this: CK_POSIX_SIG, which is currently
defined (in ckcdeb.h) only for QNX.  ckcmai.c, ckcnet.c 5A(036), ckucon.c
5A(071), ckudia.c 5A(060), ckuscr.c 5A(022), ckutio.c 5A(146), ckuusx.c,
ckuusr.c 5A(145), 7 Aug 94.  Testing on QNX shows that this change clears up
the problems with Ctrl-C and with timeouts not working (but it makes me wonder
why C-Kermit works without these changes on all the other POSIX-based UNIX
implementations -- I guess they are not so strictly POSIX after all), so now
we need:

 . The restarting-curses problem fixed.
 . UUCP lockfile conventions worked out.
 . setuid/setgid operation checked out.
 . DIAL command checked out.
 . Serial communications checked out.
 . Hardware flow control added.
 . A 16-bit version produced.

I built Kermit on Linux 0.99.14 with CK_POSIX_SIG and it works fine, so I
added this to the makefile, plus some warning comments about how to back off.
Linked the Linux version with libncurses rather than libcurses, and the
second-invocation-of-curses problem went away.  Added this to the makefile
too.  makefile, 7 Aug 94.

Fixed VMS RUN and DIRECTORY commands to return success/failure status
according to return codes from zshcmd(), based on whether LIB$SPAWN returns
SS$_NORMAL (it always does).  Larry Henry of TWG just sent in code to get
the actual return code from the command, but I haven't quite figured out how
to use it -- it almost works...  ckuus6.c, ckvfio.c 5A(112), 7 Aug 94.

Beta.16.
-----

Aug 8... QNX again.  Disabled job control because QNX does not yet implement
it.  Worked on 16-bit version with much assistance from Dan Hildebrand of QNX
Software Systems Inc in Kanata, ON <danh@qnx.com>.  Removed various features:
speeds higher than 38400 because of 16-bitness; ioctl() can't be used because
it is not in the 16-bit libs.  Aside from that, everything is there: TCP/IP,
curses, all character sets, etc.  Makefile, ckuusx.c, ckutio.c, 8 Aug 94.

Tried adding hardware flow control to QNX version based on info from danh:
IEXTEN must be set in c_lflag, and then IHFLOW|OHFLOW are set in c_cflag.
It compiles and runs OK, but who knows if it works.  ckutio.c 5A(147),
8 Aug 94.

Discovered that bad things could happen if a file arrived whose name was
longer than C-Kermit's maximum filename length, e.g. the file would not be
transferred because C-Kermit failed to open the output file.  zrtol() changed
to cut the name off at the maximum length.  ckufio.c 5A(096) 8 Aug 94.

The #ifdefs around the POSIX signal-handling changes were inconsistent in
ckuusx.c, noticed by Eduard Vopicka, and this would result in a memory leak
that could cause a core dump.  Fixed (#ifdef QNX => #ifdef CK_POSIX_SIG) in
ckuusx.c, ckuusr.c 5A(146), 9 Aug 94.

Added serial high speeds back into the 16-bit QNX version.  This required an
internal change to ttsspd() and ttgspd(), which should be safe, namely 
declaring the internal speed variable to be of type speed_t rather than int
if it is a POSIX compilation, since this type is required by POSIX.1 for
cfsetispeed(), etc.  Tested OK on QNX, BSDI, and Linux.  Also, changed
ttgwsiz() to work on 16-bit QNX as well as 32-bit QNX.  ckcdeb.h, ckutio.c
5A(148) 9 Aug 94.

Got access to an SGI IRIX 5.2 system, built today's C-K with no problems.
Looked thru header files, found no evidence of hardware flow control or serial
speeds > 19200.  9 Aug 94.

This is Beta.17
-----

Discovered the QNX version omitted SET SPEED 57600 due to a typo.
ckcdeb.h 10 Aug 94.

Added QNX-specific modem-signal code to ttmget() in ckutio.c 5A(149),
10 Aug 94.

Verified that serial comms work ok on QNX: SET LINE, DIAL, CONNECT, file
transfer, etc.  RTS/CTS seems to work, but I can't tell for sure.

From Jeff Altman: fullscreen file transfer display now updates the
Estimated Time Remaining no more than once per second.  ckuusx.c, 10 Aug 94.

Decided to use the thermometer in the curses display by default after all.
It kind of grew on me.  ckuus7.c, 10 Aug 94.

Tried building on Solaris 2.3 with SunPro CC.  It compiles fine but doesn't
link because ckuus5.o is only about 1/10 of its normal size.  Building it by
hand, however, via cc -E "CFLAGS=(same ones)..." > foo.c, then cc -c foo.c
produces a normal object file (!?), which can then be linked with the others,
producing a normal executable.  Better try this on some other machine...
(Later, it turns out that Sun cc 2.0.1 does this -- with patches applied,
not sure which ones, the problem goes away.)

Changed format of ASCII thermometer slightly, at Eduard Vopicka's suggestion,
and used new, simplified, unified code for OS/2 and all others, from Ed.
ckuusx.c, 11 Aug 94.

Added -DNOSETBUF to QNX makefile entries.  11 Aug 94.

Made VMS conoll() return a proper return code.  Until now, it always returned
a success indication, even if it failed, which could wreak havoc when the
user's job become disconnected in the middle of a TRANSMIT command.  CKVTIO.C
5A(073), 11 Aug 94.  Also, changed TRANSMIT command to check conoll's return
code.

From Jeff Altman, a fix to ckcpro.w that allows labeled-mode transfers to
work when a GET command is given.  11 Aug 94.

Added debugging statements to zopeno() and zclose() in ckmfio.c in an attempt
to track down the cause for Mac Kermit failures on the newer Macs.  12 Aug 94.

Added some bulletproofing to the console routines in the VMS version to better
catch when the job becomes disconnected from its console terminal.  12 Aug 94.

Added percent efficiency to fullscreen file transfer display summary. ckuusx.c,
13 Aug 94.

Vincent Fatica reported that the SET SPEED command in the Linux version was
broken.  After three hours of debugging, it finally hit me: s (the speed) is
now declared of type speed_t in POSIX implementations, and in Linux speed_t is
typedef unsigned int (POSIX.1 says that speed_t "shall" be unsigned, but in
other systems I looked at it, was simply "long").  Today's lesson: comparisons
of unsigned variables with negative constants don't produce the desired
results -- e.g. don't use -1 as a value for the speed variable, to mean the
speed is unknown.  It took quite a while to recover from the fallout -- ttvt()
and ttpkt() needed some head-bashing, etc.  Made and tested many new binaries
on Linux, SunOS, Solaris, Unixware, IRIX, QNX, HP-UX, etc etc.  ckutio.c
5A(150), 13 Aug 94.

Discovered that REDIRECT works OK in QNX on serial connections, but not on
TCP/IP connections.

Fixed "Network type" in fullscreen file transfer display.  ckuusx.c, 13 Aug 94.

Max Evarts <evarts@columbia.edu> reported the following scenario: MS-DOS
Kermit is a TCP/IP Kermit server ("set port tcp *"), C-Kermit is the client.
MS-DOS Kermit side goes away (e.g. user Ctrl-C's and hangs up).  The next
packet-related command given to C-Kermit makes the C-Kermit process
immediately and silently disappear.  This happens under at least SunOS,
NeXTSTEP, and Unixware.  It occurs when ttol() is called to send a packet to
the server.  ttol() calls upon write(), and write(), rather than returning an
error, kills the entire process.  To avoid this situation, I devised a cunning
plan: ttol(), before issuing a write() on a TCP/IP connection, checks to see
if the connection is still there by issuing a read() for zero bytes.  On SunOS
the read always succeeds if the connection is active, and fails with
ECONNRESET if the connection has been dropped.  This allows us to print an
informative error message, close down our end of the connection, and
gracefully return a failure code rather than vanishing without a trace.
However, a quick check of other OS's shows that this technique is not a bit
portable.  It's OK in NeXTSTEP, but not in Unixware.  So it will be used only
if CK_READ0 is defined, and presently it is defined only for SUNOS41 and NEXT.
ckcnet.h, ckutio.c 5A(151), 14 Aug 94.

This also required some adjustments to ckcpro.w, ckcfn*.c, etc, to ensure that
failure return codes are propogated up the call stack.  14 Aug 94.

Added a new command, FORWARD.  It is exactly like GOTO except it searches for
the given label forward from the current position in the macro or TAKE file,
rather than rewinding to the beginning first.  This command is purely for
performance -- executing long scripts from diskettes, for example, can be
painfully slow if every GOTO must rewind the command file.  (It might have
been better to fix GOTO to first search forward, then rewind, then search up
to where the first search started, but that would (a) need a lot of recoding,
and (b) break a lot of existing scripts.)  This is not an example of a quality
control structure, and its use is not recommended except where script
performance is critical.  ckuusr.h, ckuus6.c, ckuusr.c 5A(147), 14 Aug 94.

Added transaction log entries for incoming file refusal.  Also, when receiving
files, don't send an error packet if there is an error opening the output file
-- instead, just refuse the file.  That way, an error on one file does not
prevent subsequent files from coming.  Added a statistic for files that were
discarded/rejected/interrupted, so STATISTICS and the transaction log now show
the number of files that were actually successfully transferred.
ckcfns.c 5A(118), ckcfn2.c, ckcfn3.c, ckuus4.c, 15 Aug 94.

Fixed Mac Kermit not to crash when downloading files under System 7.1.x by
removing the call to PBFlushFile() from ckmfio.c.  And fixed the Mac Kermit
READ command not to crash.  Tested on Mac IIx with System 6.0.3, Mac LC with
System 7.0, Centris 660 AV with System 7.1, and a Power Mac 7100/66 with
System 7.1.2 (the latter two being platforms where downloads would crash
Kermit or the Mac prior to today), including downloads of 1MB-long files.
ckmfio.c 5A(084), 16 Aug 94.

Changed Mac Kermit's version number from 0.99(190) to 0.991(190) so people can
tell the difference between the one that works and previous ones.  Fixed LOG
SESSION, LOG TRANSACTIONS, LOG PACKETS, which never worked before.  In the
case of LOG SESSION, this required consolidation of the Session Log menu
selection and the LOG SESSION command, which used totally different
mechanisms.  Changed text files to be TeachText ('ttxt') applications, rather
than MacWrite ('MACA').  Fixed format of log and other text files to be like
regular Mac text files.  Removed Mac-specific tlog() and had Mac Kermit use
the regular one, which works fine.  Fixed file transfer display not to lie
about "Sending" and "Receiving".  Fixed Mac-specific modules not to mess with
file type setting behind the back of the protocol modules so downloads would
take the right data type from the attribute packet.  Added SET FILE TYPE
MACBINARY to command parser.  Updated the ckmker.bwr file.  ckcfn3.c,
ckcker.h, ckmfio.c, ckmini.c, ckmsfp.c, ckmusr.c, ckmutl.c, ckuus4.c,
ckuus7.c, ckuusx.c, 17 Aug 94.

Made Mac Kermit's file transfer display screen correctly show the transfer
mode of incoming files.  Made the SET FILE TYPE command immediately affect the
internal file transfer mode of the Mac modules, so the Settings..File Defaults
dialog shows the right modes, no matter how they were set.  It works for
MacBinary too.  ckmscr.c, ckmfio.c, ckmsfp.c, 18 Aug 94.

Fixed Mac zgtdir() routine to return the actual working directory -- the full
pathname, not just the current folder name, rather than the disk name, with
help from Rick Watson <rick@akbar.cc.utexas.edu>.  Previously, it returned
the name of the current disk.   Zhome() was corrected to return the name of
the boot disk.  ckmfio.c, 18 Aug 94.

Discovered why we get "Writing to console not allowed" alert boxes all the
time: they are caused by perror().  Nobody ever bothered to for perror what
had been done for printf().  So I did it.  ckcdeb.h, ckmptp.h,
ckmtio.c 5A(082), 18 Aug 94.

Changed the CD command for Mac Kermit to allow spaces in the directory name,
and to use the top-level directory of the boot disk as its default place to
CD to.  ckuus5.c, 18 Aug 94.

Added the current directory to Mac Kermit's file transfer display.
ckmscr.c, 18 Aug 94.

A couple more fixes to Mac Kermit's file transfer display, so that file
transfer commands issued at the Mac-Kermit> prompt would be reflected
correctly (e.g. it would not say "Receiving" if it was sending).  ckuusr.c
5A(148), 19 Aug 94.

Added a DIRECTORY command to Mac Kermit.  It shows regular files and their
sizes, but does not show directory files.  ckuusr.c, ckuus6.c, 19 Aug 94.

Removed SET FILE COLLISION DISCARD from Mac Kermit because it crashes the
program.  Removed { APPEND, NEW } options from Mac Kermit LOG command because
append operations don't work.  ckuus4.c, ckuus7.c, 19 Aug 94.

Added a new command-parsing function, cmtxtnq(), which is just like cmtxt()
except it treats question mark and backslash like ordinary text characters.
ckucmd.c 5A(063), 19 Aug 94.  (Later removed)

Changed the ASK and ASKQ commands to use cmtxtnq() rather than cmtxt(),
so script-driven interactive dialogs can be carried on with unsuspecting
users without scaring them if they type a question mark.  This is also a good
idea for situations like "ask \%x \27Z", in which the terminal might send back
a string containing question marks, like ESC [ ? 1 c, which would otherwise
cause an infinite round of "getty babble".  It's also handy for prompting
users for DOS-like filenames, such as C:\TEMP\OOFA.TXT, which could not
otherwise be entered except by making the users double each backslash.  See
ckcker.upd for more about this.  ckuus6.c, 19 Aug 94.

Added CHECK FORWARD to allow .INI & other files to select GOTO or FORWARD.
ckuusr.c 5A(149), 20 Aug 94.

Jeff Altman had changed CKERMIT.INI to use FORWARD instead of GOTO, but this
was a rather drastic change that would prevent it from working at all with
last week's or earlier Kermit versions, so the new CKERMIT.INI does a CHECK
FORWARD first to see if this is OK.  20 Aug 94.

VMS 6.0 (or 6.1) changed its "terminal inquire" feature.  Old versions of VMS
sent ESC Z first, then ESC [ c if the ESC Z response timed out.  The new
version reverses this, and then also sends a "resize" sequence.  I needed to
change the VMSLOGIN macro to account for both methods, but found it was
virtually impossible to put an MINPUT command into a macro because of the
comma that is used to separate the MINPUT arguments.  Luckily, some time ago
James Sturdevant had sent in code to let space, rather than comma, be the
separator, with {...} used for grouping items that have imbedded spaces.  This
also required a change at the deepest level of the command parser (the
gtword() function), which is something we always wanted -- the ability to
group words where they could not be grouped before.  E.g. now we can do:

  if equal \%a {This is a bunch of words} echo It's equal.

Previously, this would break on the space after "This" and give a parse error.
The new code was tested with all the various command-testing suites
(ckermit.ini, ckermod.ini, cketest.ini, ckedemo.ini, etc) and no ill effects
were noted.  ckucmd.c 5A(064), ckuusr.c 5A(149), 20 Aug 94.

More about this from James's notes:

I did "white box" testing, looking for places in the code where cmfld was
called and then testing them.  The modules are

    ckuusr  array names
            labels  (A label :{This label} is accepted
                     but GOTO won't find it)
            minput (now)
    ckuus5  macro names
             This works:Define {Space name} The name has a space
                        echo \m({Space name})
    ckuus6  variable names and file names
    ckuus7  user id and password.
            IP name/number
            TCP service name/number
    calls to cmfld or gtword in ckucmd:
            cmfld cmnum cmofi cmifi cmdir cmtxt cmkey

New VMSLOGIN macro handles old and new terminal inquiry sequences.
CKERMIT.INI, 20 Aug 94.

Added code from Jeff Altman to (a) display a weighted CPS rate in the
fullscreen file transfer display, rather than a flat average, with a weight
of 1/4 going to the most recent second, and 3/4 going to past history.  The
final CPS is still calculated the normal way -- (total file chars / secs).
And also from Jeff, code to allow the file-transfer display screen to be
refreshed in OS/2.  ckuusx.c, 20 Aug 94.

Added SET COMMAND QUOTING { ON, OFF }.  ON means normal behavior.  OFF (new)
means to treat \ and ? as ordinary text characters during input to the command
parser.  The main purpose of this is allow a script writer to confer the same
behavior on other commands as was given to ASK a couple days ago, or to let
the experienced user turn off backslash processing to make it easier to deal
with DOS or OS/2 filesnames, e.g.:

  set command quoting off
  send foo.bar c:\foo\bar\baz\oofa.txt
  get d:\files\???.?
  set command quoting on

instead of:

  send foo.bar c:\\foo\\bar\\baz\\oofa.txt
  get d:\\files\\\?\?\?.\?

Or in OS/2 itself:

  set command quoting off
  cd \
  set port \\server\modem
  directory e:\pictures\pic???.gif
  set command quoting on

rather than:

  cd \\
  set port \\\\server\\modem
  directory e:\\pictures\\pic\?\?\?.gif
  set command quoting on

Use with caution.  ckucmd.c, ckuus6.c, 20 Aug 94.

In VMS version, make congm() get terminal type, etc, to remove annoying
"Sorry, terminal type not supported" messages when running from a .COM file,
SPAWN'd, etc.  From James Sturdevant.  CKVTIO.C 5A(075), 20 Aug 94.

Added #include "ckcsym.h" to all modules that didn't already have it, and
added dependencies on it to all rules in the makefile.  From Mike Long.
20 Aug 94.

Fixed up "kermit -h" help screen to include recently added options, and to
report bad options by saying what they were.  ckuus[2y].c, 20 Aug 94.

Reorganized the ckcker.upd file.  21 Aug 94.

This is Beta.18
-----

Removed a prototype for a static function from ckcnet.h.  Today's lesson:
never use the word "static" in a header file, and certainly not in one that is
shared by more than one module.  22 Aug 94.

Fixed the VMS C-Kermit makefile to build correctly with MultiNet on the 
Alpha, thanks to a suggestion from Steve Smail at Wollongong:

  "After I generated a link map, I realized that the link is pulling in the
  DEC C/UCX based socket routines, not those provided by PathWay.  These
  routines return the DEC C version of a file descriptor, not a VMS device
  channel; the QIO system service needs the channel, and is rejecting that
  parameter as invalid.  I suspect the same issue occurs when building KERMIT
  against TGV's product (though I have no way to test this).

  "The DEC C compiler will prepend the string DECC$ to the name of most
  "known" C library entries.  For example, references to fopen() become
  decc$fopen(), socket() to decc$socket(), etc ... at link time, DEC's entries
  are used, not those provided by PathWay in the TWGLIB.OLB object library.

  "We typically get around this issue by making use of the DEC C compiler
  /PREFIX_LIBRARY_ENTRIES qualifier to request that the compiler not prepend
  DECC$ to our socket library routines."

Tested successfully on VMS 1.5 and 6.1 on Alphas, and VMS 5.3 on a VAX.
The Alpha VMS 1.5 version runs fine on 6.1.  23 Aug 94.

Converted OS/2 C-Kermit update file from plain text to INFO (VIEW) format.
25-29 Aug 94.

Exchanged "thermometer" definitions between ckuus7.c and ckuusx.c to allow
successful linking with -DCK_CURSES and -DNOICP.  29 Aug 94.

Added SIGPIPE handling to ckudia.c, which is needed to catch the case where
a connection to a TELNET modem server is broken while dialing (previously, as
reported by Ray Moody, Kermit would just disappear when this happened).
29 Aug 94.

Minor corrections to makefile for SCO UNIX 3.2v4 & ODT 3.0.  Minor change to
ckutio.c to allow cross compilation under UNIX for Xenix.  From William Bader.
makefile, ckutio.c 5A(152), 30 Aug 94.

Ray Moody found some other places (SCRIPT, INPUT, etc etc) where remotely
broken TCP/IP connections could result in the Kermit process vanishing (in
UNIX, not sure about others).  He suggested setting SIGPIPE to SIG_IGN in
ttol() & then restoring it, but that only plugs the hole in one place.
Instead, I added signal(SIGPIPE,SIG_IGN) to sysinit(), so SIGPIPE is ignored
the whole time Kermit is running, and removed all other SIGPIPE-related code
from ckudia.c, ckutio.c, and ckucon.c, as well as the CK_READ0 business from a
couple weeks ago.  Tested successfully on SunOS by SET HOST to MS-DOS Kermit
that had been told to "set port tcp *", and then issuing HANGUP from MS-DOS
Kermit while C-Kermit is transferring files, dialing, in CONNECT mode, running
a script program, etc etc.  30 Aug 94.

TMPDIR and RESEND capabilities added to Stratus VOS Kermit by David Lane.
Changes merged into ckcdeb.h, ckuus6.c, cklfio.c 5A(003), 30 Aug 94.

Fixed server to encode response to REMOTE PWD, noticed by David Lane (because
VOS directory names include #).  ckcpro.w 5A(070), 30 Aug 94.

Changes to OS/2 install script from Jeff Altman, so it now correctly updates
the desktop icon, even if an old one was already there.  Also a minor change
to ckotio.c to recognize CKERMIT as a synonym for CKCOMMAND from REXX scripts.
30 Aug 94.

Fixed OS/2 C-Kermit to allow SET { SEND, RECEIVE } START-OF-PACKET to be
a printable character.  ckuus7.c, 30 Aug 94.

This is Beta.19, 30 Aug 94.
-----

Fixed editing of several SET TERMINAL commands (WRAP, ANSWERBACK) -- OS/2
only.  31 Aug 94.

Cast long arguments to shocps() to int.  ckuusx.c, 31 Aug 94.

Updates to CKVKER.MMS from Mike Freeman (CMU/Tek, Mattgoat MMK support).
1 Sep 94.

From Eduard Vopicka, 1 Sep 94:

(1) Solution to previously mentioned ftime redefinition problem in
    ckufio.c: ODT30 has prototype for ftime() in header file, so always
    use it, no matter what it is. Just as mentioned in the original
    comments. Tested on both XPG4 and pre-XPG4 version of SCO 3.2v4.2.

(2) -DCK_WREFRESH can be safely added to the sco32v4net makefile entry.

(3) Hot keys (X to cancel file etc) do not work during file transfer!!!
    This is certainly serious problem, but fortunately, the fix is fairly
    easy (namely that FIONREAD is defined, but doesn't do anything and so
    needs to be undefined after #including <sys/socket.h>).

From Mike Long <mike.long@analog.com>, Analog Devices Inc, Norwood MA, USA:

  These patches modify Kermit to use the 4.4BSD seteuid() and setegid()
  functions.  You want to use sete[ug]id() on 4.4-based systems because
  setreuid() is a compatibility function that is implemented on top of them,
  and it doesn't behave exactly the same.  Also, the system I use (NetBSD)
  sends an obnoxious warning to the console if setreuid() is used.  I've been
  using these patches for the past month without any problems.
  ckutio.c, 1 Sep 94.

Added CK_POLL to MIPS makefile entries -- not only does it work, it also
eliminates core dumps in msleep() (thanks to Bob Bolio (sp?) at Santa Cruz
Metro Transit for testing this out over the phone).  makefile, 1 Sep 94.

Added a call to con_cancel() to syscleanup() in ckvtio.c in hopes of curing
problems with VMS C-Kermit leaving zombie processes behind after being
disconnected and/or interrupted.  ckvtio.c 5A(076) 2 Sep 94.

New code and makefile for OS/2 C-Kermit to support FTP Software 32-bit PC/TCP
from Jeff Altman.  ckoker.mak, ..., ckonet.c 5A(030) 2 Sep 94.

Added code to allow spaces in input and output file names (cmifi, cmofi) and
directory names (cmdir) when either expressed as \32 or when the name is
enclosed in braces.  It works in commands like CD, SEND, and RECEIVE, which
are executed by Kermit itself, but an additional level of quoting might still
be needed if the result is being passed to (say) a UNIX shell, e.g.
DIRECTORY {"a b"} (the braces are for Kermit, the doublequotes are for UNIX).
Note that quoting space with \ still does not work (e.g. DIRECTORY a\ b), nor
has it ever.  ckucmd.c 5A(065), 2 Sep 94.

Added code to display which TCP/IP DLL was loaded to OS/2 version of SHOW NET.
ckuus4.c, ckonet.c 5A(031), 3 Sep 94.

New code and makefile for OS/2 C-Kermit to support FTP Software 16-bit PC/TCP
from Jeff Altman.  ckoker.mak, ..., ckonet.c 5A(031) 2 Sep 94.  A new set of
DLLs now goes on the OS/2 C-Kermit disk, and is handled by the installation
procedure, and the appropriate one is loaded automatically at startup.

Fixed ASK and ASKQ to not save their responses in the command-recall buffer.
ckuus6.c ckucmd.c, 3 Sep 94.

This is Beta.20
-----

When sending a file group in local mode and some of the files are rejected
(size, date, name, whatever), the file transfer display thermometer would go
nuts.  Fixed in ckuusx.c, 4 Sep 94.

Added \v(modem) (current SET MODEM value) and \v(evaluate) (result of most
recent EVALUATE command).  ckuusr.h, ckuus4.c, ckuusr.c 5A(150), 5 Sep 94.

Updates to OS/2 .inf file, make file, install script, external protocol
scripts, etc, from Jeff Altman.  Added a new external protocol script for
CEXYZ/2 from Jim Reisert.  5 Sep 94.

Make DIAL module echo commands sent to the modem if DIAL DISPLAY is ON and
DUPLEX is set to HALF.  Also make DIAL module not treat "964" response from
Telebit model-number inquiry as if it were a "4" (ERROR).  Reported by Simon
Casady <cap@hces.com>.  ckudia.c 5A(061) 5 Sep 94.

This is Beta.21
-----

Fixed DECREQTPARM report in OS/2 VT220 emulator to correctly indicate 7 or
8 bit mode, taking TERMINAL BYTESIZE setting into account.  Noticed by
Andrew Orndorff <aorndorff@nhtsa.dot.gov>.  ckocon.c 5A(153), 6 Sep 94.

Added \N to OUTPUT string to send a NUL.  Prior to this, there was no way
to send a NUL from a script program.  ckuusr.c 5A(151), 9 Sep 94.

Various #ifdef cleanups from Mike Long, ckuus*.c, 9 Sep 94.

Changes from Jeff Altman to allow coexistence of OS/2 C-Kermit 5A(190) with
the "fake TCPIPDLL" that was distributed with 5A(189).  ckonet.c 5A(032),
9 Sep 94.  Also, changes to the makefile, cko*.def files, etc.

This is Beta.22.
-----

A new OS/2 icon.  Also in OS/2, allow Named Pipe handles on the server to be
inherited by child processes (such as P.EXE).  Jeff Altman.  ckonet.c 5A(033),
11 Sep 94.

Added SET TELNET NEWLINE-MODE RAW to send CR as just a bare CR, in addition to
ON (send CR as CRLF) and OFF (send CR and CR-NUL), for use when talking to
non-TELNET servers that do not react poorly to both CRLF and CR-NUL (such as
certain rlogin-based modem servers).  Suggested (most recently) by Kerry Schwab
<kschwab@healthcare.com>.  ckcnet.h (symbols), ckcnet.c (default), ckuus3.c
(SET TELNET command), ckuus4.c (OUTPUT command), ckcfn2.c (packets), ckuusr.c
5A(152), ckucon.c (CONNECT) 5A(073), 15 Sep 94.

Also: ckvcon.c 5A(036), ckocon.c 5A(154), ckdcon.c 5A(046), cklcon.c 5A(005),
15 Sep 94.

Bill Chen <chen@columbia.edu> noticed that (a) WRITE-LINE SESSION-LOG added
material to the session log out of sequence, and (b) this command would core
dump if given after opening, using, and closing the session log.  The problem
was that zsoutl() was not coded in parallel with zsout() in ckufio.c.  The
latter (and also zchout()) used unbuffered i/o for the session log, but
buffered i/o elsewhere.  Also, zsoutl() was not checking the file descriptor
before writing to it.  ckufio.c 5A(097) 15 Sep 94.

From Mike Long <mike.long@analog.com>: Fix a backwards #ifdef regarding IEXTEN
in UNIX ttpkt(): ckutio.c 5A(154).  Fix an incorrect #ifdef for selecting the
SHOW NETWORK command, ckuusr.c.  Plug a hole in the decode() logic in which a
variable (a7) could be used when not initialized, ckcfns.c 5A(119), 15 Sep 94.
Also remove double inclusion of ckcsym.h from ckcmai.c.

Put contents of UNIX ttgwsiz() within #ifndef NONAWS, because evidently some
systems (AT&T 3B2) define TIOCGWINSZ in their header files but do not define
the associated winsize struct, which causes compilation of ckutio.c to fail.
ckutio.c 5A(154), 15 Sep 94.

New Amiga ckitio.c from Steve Walton, fixes timeouts, adds modem signal
support.  16 Sep 94.

Adapting SUNX25 support to Solaris 2.3 + SunLink X.25 8.0, 16 Sep 94....  Had
to change ckcnet.h to allow SUNX25 under SOLARIS as well as under SunOS.  Had
to remove #includes for <sys/mbuf.h> and <sys/domain.h> since they don't exist
under Solaris.  Added #include for <sys/sockio.h>.  Fixed bad call to
x25reset() in ckucon.c.  The X.25 get/set facilities function had totally
changed (e.g. reverse-charge, closed user group, etc).  Also, various
ANSIfications were needed.  All of this taken care of in ckcnet.h and ckcnet.c
5A(037).  New makefile entry, solaris2x25, added for this.  Compiles and links
OK, but doesn't work: connect() complains that "address family and protocol
family do not agree".  There are evidently some additional differences between
the old and new versions of SunLink that I haven't figured out yet.  Sample
programs supplied with new SunLink are still the old ones and don't work.
Needs more work, which will have to wait till I get documentation & access.

Fix for SET TELNET TERMINAL-TYPE for OS/2 from Jeff Altman.  ckcnet.c 5A(038),
17 Sep 94.

Discovered that C-Kermit, when sending a file and the file was rejected
because of size, type, etc, which means that the transfer failed, still
reported success, when it should have failed.  In general, a file transfer
should fail whenever an attribute rejection occurs EXCEPT if the rejection
indicates that the file did not need to be transferred because it was already
there, namely if the reason was "date" (#) (SET FILE COLLISION UPDATE) or name
(SET FILE COLLISION DISCARD / NO-SUPERSEDE).  A new attribute tag was added to
indicate the latter case: "?" means "name", but can only be used in attribute
replies, not in A-packets themselves (because A packets are not encoded, but
filenames might have to be).  ckcfn*.c 5A(120), ckcpro.w 5A(071), 17 Sep 94.

The treatment by HP-UX 10.00 of UUCP lockfiles turns out to be so different
from all the others that I had to write an entire custom version of ttlock()
for it, allowing for (a) four or more possible different names for the same
dialout device, and (b) creation of two lockfile names rather than just one
(sometimes), plus the cleaning up of any number of stale lockfiles, plus
allowances for symbolic links to device names, plus recovery from all sorts
of errors, etc.  An all-day+night project.  ckutio.c 5A(155), 17 Sep 94.

Added a message when C-Kermit interrupted during initialization file or
command-line processing to let user know why it is disappearing.  Suggested
by Eduard Vopicka.  ckcmai.c 5A(190), 18 Sep 94.

Some fixes to yesterday's work on file transfer success/failure.  ckcfn*.c,
ckcpro.w.

Made -h command-line option imply -Y, i.e. if all they want is the command-line
help screen, don't bother reading in the init file, since Kermit will exit
anyway as soon as the help screen is printed.  ckuus4.c, 18 Sep 94.

Fixed a bug in command recall reported by Clifford L. Pelletier
<PELLETIER@CCSUA.CTSTATEU.EDU>, with help from Jeff Altman.  ckucmd.c 5A(066),
18 Sep 94.

Fixed the "more?" prompter to be smart enough not to prompt if it knows
it's on the last line of the text.  ckuus2.c, 18 Sep 94.

This is Beta.23.
-----

A couple minor corrections to #ifdefs based on compiling it in dozens of
different environments...  Added a new makefile entry for LynxOS 2.1, from
Michael Brennen <mbrennen@maverick.intecom.com>.  19 Sep 94.

Added -DCK_NEWTERM to dynixptx20c makefile entry to fix terminal-mode problems
reported by Tom Kloos at Sequent.  Also, a correction to a typo in ckuusx.c
from Tom.  20 Sep 94.

New Stratus VOS files from David Lane: Automatic recovery from incomplete
packet sends, updated documentation, simulated "curses" support, new binaries
and updated docs.  20 Sep 94.

Fixes to 4.4BSD priv_xxx() package from John Kohl <jtk@kolvir.blrc.ma.us>.
ckutio.c 5A(156).  Also, John updated the ckuuid program to test for 4.4BSD
semantics.

From Mike Long: "4.4BSD doesn't have the lockf() function.  I verified this by
checking the original 4.4BSD distribution that freebsd.cdrom.com has up for
FTP.  So the following is probably appropriate (also fixes an unterminated
comment that gcc -Wall found)" -- patches to ckutio.c, 21 Sep 94.

From Steven Schultz <sms@WLV.IIPO.GTEGSC.COM>: BSDI does not use string-format
PIDs in lockfiles.  ckutio.c 5A(157), 22 Sep 94.

Changed ASK and ASKQ to take "comments" literally.  ckucmd.c, 26 Sep 94.

Increased max wildcard matches from 500 to 4096 in VMS C-Kermit,
ckvfio.c 5A(114), 29 Sep 94.

Fixed a prototype in ckcnet.c so SunLink X.25 code would compile again under
SunOS 4.1.x and old (pre-8.00, not sure exactly which version) SunLink.
Compiles, links, runs, and even works -- CONNECT, file transfer (7 and 8 bit),
various SET and SHOW commands all tested successfully.  ckcnet.c 5A(039),
30 Sep 94.

Numerous improvements to #ifdefs (esp NOLOCAL and NOSERVER) and removal of
declarations for unused variables, from Mike Long.  Many modules.  1 Oct 94.

Many other similar cleanups in other modules.

Increased OS/2 C-Kermit's HANGUP interval for dropping DTR from 1/2 sec to
one full second, suggested by Ric Anderson.  1 Oct 94.

Fixed OS/2 C-Kermit's display of TELNET TERMINAL-TYPE.  ckuus4.c, 1 Oct 94.

Added an #ifdef to enable REDIRECT support for Sony News (like NeXT) from
Bernard Chen <bern@CS.UCLA.EDU>, ckutio.c 5A(158) 1 Oct 94.

Discovered that somehow in the past month I seem to have destroyed the
much-touted benefits of SET COMMAND QUOTING OFF, e.g. for entering DOS
filespecs in their natural form.  The code for this command had a part of it
commented out (the part that makes the xxstring function pointer either point
to the real string processing function, zzstring(), or else NULL), so I
uncommented it and that fixed everything right up.  I can't remember why I
commented it out previously, so that's a little worrisome...
ckuus3.c, 1 Oct 94.

Jeff Altman noticed that MINPUT 30 {\13\10$ } ... ... didn't work.  Yup,
setatm() was breaking on the CR.  I changed SETATM to accept any characters
at all that are inside braces.  ckucmd.c 5A(067), 2 Oct 94.

Due to the accumulated weight of questions and complaints about the often
wildly fluctuating CPS figure in the fullscreen file transfer display, I
#ifdef'd out the weighted calculation and restored the simple, flat average.
The 1/4 weighted CPS can be put back with -DCPS_WEIGHTED; Vince Fatica's
formula can substituted by adding -DCPS_VINCE.  shocps(), ckuusx.c, 2 Oct 94.

Added SET CMD and SHOW CMD as invisible synonyms for SET COMMAND and SHOW
COMMAND.  ckuusr.c, 2 Oct 94.

This is Beta.24.
-----
Updated MINPUT help message (spaces, not commas, separate items).
ckuus2.c, 4 Oct 94.

Fixed a type in the dynixptx20c makefile entry, reported by Tom Kloos.
4 Oct 94.

Added 57600 bps for BSDI.  makefile, 4 Oct 94.

Added automatic recognition of Telebit Qblazer Plus to dial module and plugged
a nearby possibly null-pointer derefencing, thanks to Brian Utterback
<blu@jericho.mc.com>, ckudia.c 5A(062), 4 Oct 94.

William Bader noticed that if C-Kermit received (for example) "apc ls -l",
and he then Ctrl-C'd out of "ls", that PUSH, !, RUN, etc, did not work any
more.  Fixed in ckuusx.c.  4 Oct 94.

Eduard Vopicka said to change from using rdchk() to poll() in SCO UNIX
3.2v4, so I did -- he's the expert.  makefile, 4 Oct 94.

Fixed a malloc/free problem that could result in a segmentation fault when
INPUT and MINPUT were called alternately and repeatedly, noticed by
Corey Minyard <minyard@wf-rch.cirr.com>.  ckuusr.c 5A(156), 4 Oct 94.

Shuffled the 2.10/2.11 BSD overlays to make them all fit within their
alloted sizes.  ckubs2.mak, 4 Oct 94.

Changed UNIX congm() not give an error message and fail if it can't
open "/dev/tty", but instead to just go ahead and use 0 as the file
descriptor.  This is for cases where "/dev/tty" does not exist, i.e. when
there is no controlling terminal, e.g. when launched from a daemon.
ckutio.c 5A(159) 4 Oct 94.

Revised the makefile entry for Solaris 2.3 / SunLink X.25.

Added a makefile entry for IBM AIX 4.1 and 4.1.1.

Added TELNET CR handling to DIAL and SCRIPT command execution.
ckudia.c 5A(063) and ckuscr.c 5A(023).

From Mark Berryman: RESEND support for VMS.  ckvfio.c 5A(115) 4 Oct 94,
ckcfn3.c, ckcdeb.h.  zfseek() routine added to ckvfio.c.  It is strictly
block-oriented, since all binary file transfers in VMS are also block-oriented.
Later, fix resending to stop at FFB. ckvfio.c 5A(116).

Fix for OS/2 C-Kermit DECnet support from Jeff A.  ckonet.c 5A(035), 4 Oct 94.

Fix for OS/2 C-Kermit DECnet file transfer.  ckonet.c 5A(036), 4 Oct 94.

Removed the word "Beta" from the version herald.  ckcmai.c 5A(190), 4 Oct 94.

******************************

------------------------------
C-KERMIT 5A(188)-(190) TEST RESULTS

Systems where C-Kermit 5A was successfully compiled, linked, and executed.
Dates of October 4, 1994, or later apply the final release of edit 190.
June 1994 or later apply to edit 190 while in development; missing dates are
prior to November 1992, during the version 5A development cycle, 1990-1992,
others are as follows:

Chonology:
 5A(188) - 23 November 1992
 5A(189) - 30 June 1993
 5A(190) - Entered Beta June 1994, released 4 October 94.

Notes:
 ISC = Interactive Systems Corporation (a division of SunSoft)
 JLE = Japanese Language Environment (for SunOS, by Nihon Sun)
 ODT = SCO Open Desk Top
 ODT 1.1 = SCO UNIX/386 3.2v2 plus SCO TCP/IP
 ODT 2.0 = SCO UNIX/386 3.2v4 plus SCO TCP/IP
 ODT 3.0 = SCO UNIX/386 3.2v4.2 plus SCO TCP/IP + X11R5 + new DOSmerge
 Solaris 1.01 = SunOS 4.1.2
 Solaris 1.1  = SunOS 4.1.3
 Solaris 2.x  = SunOS 5.x (x = 0..3)
 gcc  = GNU C compiler
 apcc = Apogee C compiler for Solaris 2.x
 UCX  = DEC TCP/IP Services for (Open)VMS
 VMS  = VMS or OpenVMS

Non-UNIX versions:

MACHINE                   OS NAME     OS VERSION  BUILD FILE      DATE     SIZE
Apollo DN-570             Aegis              9.7  aegis           930405 552742
Apple Macintosh LC        Mac OS             7.0  ckmker.mak      940819 423117
Apple Macintosh II        Mac OS            6.03  ckmker.mak      940819 423117
Apple Centris 660 AV      Mac OS             7.1  ckmker.mak      940819 423117
Apple Power Mac 7100/66   Mac OS           7.1.2  ckmker.mak      940819 423117
Atari ST                  GEMDOS             1.0  cksker.mak      930701 292454
Atari ST                  GEMDOS             1.0  cksker.mak/min  930701  85281
Commodore Amiga           Amiga OS           2.1  ckiker.mak      941008 367628
-----
Data General MV2500       AOS/VS II      2.20.73  ckdker.mak      941006 677888
Data General MV ???       AOS/VS II         3.00  ckdker.mak      940712      ?
Data General MV7800XP     AOS/VS            7.67  ckdker.mak      930630 612352
-----
DEC Alpha AXP             VMS / no TCP       1.5  ckvker.mak      941026 833536
DEC Alpha AXP 3000-800    VMS / no TCP       6.1  ckvker.mak      941026 813056
DEC Alpha AXP             VMS / TGV          1.5  ckvker.mak      940026 868352
DEC Alpha AXP 3000-800    VMS / TGV 3.3      6.1  ckvker.mak      941026 847360
DEC Alpha AXP             VMS / UCX 3.1      1.5  ckvker.mak      941101 871936
DEC Alpha AXP 3000-300    VMS / TCPware      1.5  ckvker.mak      941027 637952
DECpc AXP 150 (2000)      VMS / TCPware      6.1  ckvker.mak      940627 820224
DEC Alpha AXP 3000-800S   VMS / Pathway1.1.2 6.1  ckvker.mak      941101 950784
DEC VAX model unknown     VMS / no_net       4.5  ckvold.com      941101 467456
DEC VAXstation 3100/38    VMS / no_net     5.5-2  ckvker.mak      941026 604160
DEC VAXstation 3100/38    VMS / UCX 2.0    5.5-2  ckvker.mak      941026 637952
DEC MicroVAX 3100/10      VMS / UCX 3.1      6.1  ckvold.com      940919 637952
DEC MicroVAX-II           VMS / TGV 3.1      5.3  ckvker.mak      941026 669696
DEC VAX 8650              VMS / TGV 3.3A   5.5-2  ckvker.mak      940626 645632
DEC VAX, model unknown    VMS / CMU/Tek    5.5-2  ckvker.mak      940623 586752
DEC VAXstation 4000/90    VMS / TCPware    5.5-2  ckvker.mak      941027 870400
DEC VAX 4000/300          VMS / Pathway1.1 5.5-2  ckvker.mak      941101 645632
-----
IBM PS/2                  OS/2 (16-bit)      1.3  ckoker.mak/msc         377237
IBM PS/2-70               OS/2 (16-bit)     2.00  ckoker.mak/msc         377237
IBM PS/2-70               OS/2 (32-bit)     2.00  ckoker.mak/ibm         458485
IBM PS/VP+IBM TCP/IP      OS/2 (16-bit)     2.10  ckoker.mak/msc  941006 499061
IBM PS/VP+IBM TCP/IP      OS/2 (32-bit)     2.10  ckoker.mak/ibm  941006 680014
PC 486 + Essex TCP/IP     OS/2 (16-bit)     2.10  ckoker.mak/msc  940824      ?
PC 486 + Essex TCP/IP     OS/2 (32-bit)     2.10  ckoker.mak/msc  940824 499987
PC 486 + FTP PC/TCP       OS/2 (32-bit)     2.10  ckoker.mak/msc  940902 499987
PC 486 + FTP PC/TCP       OS/2 (16-bit)     2.10  ckoker.mak/msc  940910      ?
PC 486 + IP-Switch TC/TCP OS/2 (32-bit)     2.10  ckoker.mak/msc  940916 499987
IBM PS/2-77 + SIO.SYS     OS/2 (32-bit)     2.10  ckoker.mak/ibm              ?
PC 486 + IBM TCP/IP 2.0   OS/2 (32-bit)     3.00  ckoker.mak/ibm  941004 682898
-----
Motorola 680x0            OS-9             2.2.2  ck9ker.mak      930630 294542
Motorola 680x0            OS-9                 ?  ck9ker.mak      941004 361004
-----
Stratus XA/2000 160 680x0 VOS               10.5  cklmak.cm       941016      ?
Stratus XA/2000 240 680x0 VOS               11.5  cklmak.cm       941016      ?
Stratus XA/2000 240 680x0 VOS             11.7.2  cklmak.cm       941016      ?
Stratus XA/R 310 i860     VOS               11.5  cklmak.cm       941016      ?
Stratus XA/R 310 i860     VOS               11.7  cklmak.cm       941016      ?
-----
UNIX versions:
-----

MACHINE                   OS NAME     OS VERSION  MAKE ENTRY      DATE     SIZE
Acorn                     RISCiX             1.2  riscixgcc       941201      ?
AGI (Everex) 386/20       ESIX        3.2 Rev. D  sys5r3          921203 423018
Altos ACS68000            UNIX System III     R2  altos3          921212 252102
Amdahl 5880               UTS 2.1      SVR5.2.6b  sys3            921204 489400
Amdahl mainframe          UTS         5.2.6b 580  sys3            940921 544999
Amdahl mainframe          UTS         5.2.6b 580  utsv            940921      ?
Amdahl mainframe          UTS             5.2.6b  utsv            921204 456044
Amdahl 5995A-700          UTS              2.1.5  utsvtcp              ? 526368
Apollo 425e               DomainOS 4.3BSD   10.4  sr10-bsd        940922 638780
Apple Macintosh IIfx      A/UX               3.0  aux3gcc         921204 382272
Apple Macintosh Powerbook Tenon MachTen  2.1.1.D  machten         940825 626396
Ardent Titan              ?                    ?  sys5r3               ?      ?
ARIX System 90 Model 85   UNIX              SVR3  sys5r3na             ? 452912
AT&T 3B2/300              UNIX          SVR2.1.0  att3bxc         921204 461844
AT&T 3B2/622              UNIX          SVR3.2.3  att3bxc         921204 458220
AT&T 3B2/MIPS             UNIX              SVR4  sys5r4sxtcpf    940713 694629
AT&T 6300 PLUS            UNIX            SVR2.0  att6300c        921204 353978
AT&T 6386E WGS            UNIX         V/386 3.2  sys5r3c         921204 441762
AT&T PC 7300 UNIXPC (3B1) System V         3.51m  sys3upcshcc     921204 415284
AT&T PC 7300 UNIXPC (3B1) System V         3.51m  sys3upcgc            ? 405312
AT&T PC 7300 UNIXPC (3B1) System V         3.51m  sys3upcx             ? 371340
AT&T PC 7300 UNIXPC (3B1) System V         3.51m  sys3upc         940809      ?
Atari ST                  MINIX           1.6.23  minix68k             ? 168310
BEST Compact 386/25       SCO UNIX       3.2v2.0  sco3r22              ? 336716
Bull DPX/2                BOS/X                ?  bulldpx2             ?      ?
CDC 4600 MIPS             ?                    ?  ?                    ?      ?
Commodore Amiga 2500/030  Amiga SVR4.0    2.1p2a  svr4amiganet    940827 483352
Commodore Amiga 2500/030  Amiga SVR4.0    2.1p2a  sys5r4sx        940827      ?
Concurrent 3280           Xelos System V     R02  ccop1           921294 566553
Concurrent/Masscomp 6000  RTU                4.1  rtubsd               ? 478348
Concurrent/Masscomp 6400  RTU                  5  rtusvr3              ? 488864
Concurrent/Masscomp 6400  RTU                6.0  rtusvr3              ? 488864
Convergent MiniFrame      CTIX System V R3  3.20  sys5                 ? 396438
Convergent, model unknown CTIX             6.4.1  ctix            921209 434456
Convex 3240               ConvexOS          10.1  convex9         921208      ?
Convex C1                 ConvexOS          V9.0  convex9              ?      ?
Convex C2                 ConvexOS          10.1  convex10gcc          ?      ?
Convex C220               ConvexOS       V10.0.3  convex9         921208 651264
Convex C240               ConvexOS       V10.0.2  convex9         921208 651264
Cray XMP                  UNICOS             6.1  cray            921208      ?
Cray XMP-EL               UNICOS             6.1  cray            921208      ?
Cray YMP 2E, 4E, 8I       UNICOS             6.1  cray            921208      ?
Cray YMP 2E, 4E, 8I       UNICOS             7.C  cray            921208      ?
Cray YMP16 (C90)          UNICOS             7.C  cray            921208      ?
Cray-2                    UNICOS       8.0-Alpha  cray8           921208      ?
Cray-2                    CSOS               1.0  craycsos             ?1295272
Cray-3                    CSOS               1.0  craycsos             ?1295272
DEC 3000 Model 500 AXP    DEC OSF/1       T1.2-1  dec-osf         921221      ?
DEC 3000 Model 500 AXP    DEC OSF/1     V1.3 112  dec-osf         940919 802816
DEC 3000 AXP              DEC OSF/1          1.3  dec-osf         940801 794624
DEC 4000 Model 610 AXP    DEC OSF/1      1.3.111  dec-osf         940415 753664
DEC 4000 Model 610 AXP    DEC OSF/1          2.0  dec-osf20       941006 770048
DEC 4000 Model 610 AXP    DEC OSF/1          3.0  dec-osf30       941027 737280
DEC PDP-11/44             BSD               2.11  bsd211          941006 127558
DEC PDP-11/73             BSD               2.11  bsd211          940418 133154
DEC MicroVAX-II           BSD                4.3  bsd43                ?      ?
DEC MicroVAX-II           BSD           4.3-Reno  bsd43           921127 253952
DECstation 5000/20        MACH               2.6  bsd43 (?)       940623      ?
DECstation 3000/500       OSF/1         T1.2-R12  dec-osf              ?      ?
DEC MicroVAX-II           ULTRIX             4.2  du42            921207 403456
DEC MicroVAX-II           ULTRIX             4.2  du42c           921207 418816
DEC MicroVAX 2000         ULTRIX             4.2  du42c           941008 485376
DEC MicroVAX 2000         ULTRIX             4.2  du42            941008 467968
DECstation 2100           ULTRIX             4.2  du42                 ? 532480
DECstation 2500           ULTRIX             4.2  du42c                ?      ?
DECstation 3100           ULTRIX             4.2  du42                 ? 532480
DECstation 5000/200       ULTRIX             4.2  du42                 ? 532480
DECstation 5100           ULTRIX             4.2  du42c                ?      ?
DECstation MIPS           ULTRIX             4.2  du42            940801 602112
DECstation 5800           ULTRIX         4.2-R96  du42c           941006 634880
DECstation 5800           ULTRIX         4.2-R96  du42s5r4             ? 540672
DECstation 5800           ULTRIX         4.2-R96  posix                ? 499712
DECstation 2100           ULTRIX             4.3  du42            921207 532480
DECstation 2100           ULTRIX             4.3  du42c           921207 557056
DECstation 2100           ULTRIX             4.4  du42c           940803 618496
DECstation 5000/200       ULTRIX             4.3  du42            940625 589824
DECstation 5000/25        ULTRIX             4.3  du42                 ? 532480
DECstation 5000/200       ULTRIX/UWS         4.3  du42            921221 532480
DECstation 5000/25        ULTRIX/UWS     4.3-R10  du42c           921221 532480
DECstation 5000/50 R4000  ULTRIX            4.3A  du43c-mips3          ? 561152
DECstation 5000/50 R4000  ULTRIX             4.4  du43c-mips3     941008 606208
DECstation 5000/50        ULTRIX             4.4  du44-mips3      941008 581632
DECstation 5000/200       ULTRIX            4.2C  du42c           940803 626688
DECstation 5000/240       ULTRIX             4.3  du42c           941008 634880
DECstation 5000/240       ULTRIX             4.3  du42            941008 610304
DECsystem 5100            ULTRIX             4.2  du42c           941008 634880
DECsystem 5100            ULTRIX             4.2  du42            941008 610304
DECsystem 5100            ULTRIX             4.3  du42c           941008 638976
DECsystem 5100            ULTRIX             4.3  du42            941008 610304
DECsystem 5100            ULTRIX            4.3A  du42c           941003 634880
DECsystem 5100            ULTRIX            4.3A  du42            941003 610304
DEC VAXstation 2000       ULTRIX             4.2  du42c           940803 480256
DEC VAX-11/750            BSD                4.3  bsd43           921127 253952
DEC VAX-11/785            BSD          4.3-Net/2  bsd44c               ? 379904
DEC VAX 8350              DEC UNIX SVR3      3.1  sys3                 ?      ?
DEC VAX 8650              DEC UNIX SVR3      3.1  sys3                 ?      ?
DEC VAX 8800              ULTRIX             4.2  du42                 ?      ?
DEC VAX Model Unknown     ULTRIX             4.2  du42c           940919 486400
DEC VAXstation 3100       ULTRIX/UWS         4.2  du42            921127      ?
Dell 433 DE               SCO UNIX       3.2v2.0  sco3r22              ? 336716
Dell 433 DE               SCO UNIX       3.2v2.0  sco3r22gcc           ? 344692
Dell 433 DE               SCO UNIX       3.2v2.0  sco3r22net           ? 363872
Dell 433 DE               SCO UNIX       3.2v2.0  sco3r22netc          ? 419396
DG AViiON                 DG/UX              5.4  dgux540c             ?      ?
DG AViiON                 DG/UX            5.4.1  dgux540c             ?      ?
DG AViiON                 DG/UX            5.4.2  dgux540c             ?      ?
DG AViiON                 DG/UX         5.4R2.01  dgux540c        941006 629908
DG AViiON                 DG/UX         5.4.2.10  dgux540         940714      ?
DG AViiON                 DG/UX         5.4.2.10  dgux540c        940822 627980
DG AViiON                 DG/UX         5.4R3.00  dgux543c        941130      ?
DIAB DS90-00              DNIX 5.2          2.2c  dnix                 ? 368496
DIAB DS90-00              DNIX 5.2          2.2c  dnixnetc             ? 424704
DIAB DS90-10              DNIX 5.3         1.4.3  dnix5r3              ?      ?
DIAB DS90-20              DNIX 5.3           2.2  dnix5r3ansi          ?      ?
DIAB DS90-30              DNIX 5.3         2.2.1  dnix5r3ansinet  941001      ?
Dolphin Triton 88/17      UNIX SV/88 R3.2    3.6  sv88r32         921210 604336
DTK Keen 2000             Microport SVR3  0U3.0e  sys5r3          921208 405668
Encore Multimax           UMAX               4.3  encorec              ? 465424
Everex 386DX/25           BSDI (BSD/386)   0.9.1  bsdi                 ? 360448
Fortune 32:16             For:Pro           2.1c  ft21                 ? 336368
Gateway 2000 386/25DX     ISC UNIX      SVR3 2.2  is5r3n3t             ? 399836
Gateway 2000 486DX/33     MWC Coherent  4.0.1r65  coherentmi           ? 111664
Gateway 2000 486DX/33     MWC Coherent  4.0.1r65  coherentmax          ? 324976
Gateway 2000 486DX/33     Linux           1.1.21  linuxnet        940623 410628
Harris HCX-2900           CX/UX              5.1  sys5r3               ? 390184
Harris Night Hawk         CX/UX              6.1  cx_ux                ? 626560
Hewitt/Rand 483/33EISA    SCO ODT         2.1.0b  sco32v4netc          ? 424688
Honeywell/Bull RS/6000    AIX              3.2.5  rs6aix32        940801      ?
HP 9000/300               BSD           4.4-Lite  bsd44           940703 462848
HP 9000/300               BSD           4.4-Lite  bsd44c          941006 512000
HP Integral (9000/207)    HP-UX/PAM          5.0  hpuxpre65            ? 396096
HP 9000/550               HP-UK             5.21  hpux500wintcp   940703 549512
HP 9000/550               HP-UK             5.21  hpuxpre65       941006 528548
HP 9836CU                 HP-UX            5.5-P  hpuxpre65            ?      ?
HP 9000/855               HP-UX          A.B7.00  hpux70lfnc           ? 587776
HP 9000/834               HP-UX              7.0  hpux80pac            ?      ?
HP 9000/350,370,375,380   HP-UX             7.05  hpux70lfnc           ? 495616
HP 9000/385,400dl,425s    HP-UX          A.08.00  hpux80               ? 368640
HP 9000/385,400dl,425s    HP-UX          A.08.00  hpux80c              ? 409600
HP 9000/710,750           HP-UX          A.08.07  hpux80pac            ? 421888
HP 9000/385               HP-UX          B.08.00  hpux80          941006 446464
HP 9000/385               HP-UX          B.08.00  hpux80c         940822 446464
HP 9000/700               HP-UX              8.0  hpux80pagcc     930120 623224
HP 9000/825,835SE         HP-UX              8.0  hpux80pac            ? 430080
HP 9000/847               HP-UX             8.02  hpux80pac            ? 430080
HP 9000/847               HP-UX          A.09.00  hpux90???       940624 495616
HP 9000/400               HP-UX          B.09.03  hpux90gcc       940623 405504
HP 9000/715               HP-UX          A.09.03  hpux90          940703 630704
HP 9000/715               HP-UX          A.09.03  hpux90o         940707 507904
HP 9000/715               HP-UX          A.09.03  hpux90o700      940822 503808
HP 9000/712               HP-UX          B.09.05  hpux90o700      941006 507904
HP 9000/715               HP-UX      IC1 B.10.00  hpux100         940703 626688
HP 9000/715               HP-UX      IC2 B.10.00  hpux100         941006 652622
HP 9000/715               HP-UX      IC1 B.10.00  hpux100o        940703 495616
HP 9000/715               HP-UX      IC2 B.10.00  hpux100o        941006 513297
IBM 370-Series mainframe  AIX              1.2.1  aix370          921217 527784
IBM 370-Series mainframe  AIX/ESA            2.1  aixesa          921229 959166
IBM PS/2                  AIX                1.2  ps2aix               ? 417772
IBM PS/2-70               AIX   Level 1009 1.2.1  ps2aix          930223 448936
IBM PS/2-95               AIX                1.3  ps2aix3         930223 417772
IBM RS/6000               AIX                3.1  rs6000c              ? 487297
IBM RS/6000 250 PowerPC   AIX              3.2.5  rs6aix32c       941010 584145
IBM RS/6000 320H          AIX              3.1.3  rs6000c         940803 569445
IBM RS/6000 320           AIX              3.1.5  rs6000c         941008 578285
IBM RS/6000 320           AIX              3.1.5  rs6000          941008 567450
IBM RS/6000 520           AIX              3.2.5  rs6aix32c       941008 585417
IBM RS/6000 520           AIX              3.2.5  rs6aix32        941008 575094
IBM RS/6000 530           AIX   Level 2008 3.1.8  rs6000c         930223 490909
IBM RS/6000 530           AIX   Level 2008 3.1.8  rs6000          930223 483326
IBM RS/6000 530           AIX   Level 2008 3.1.8  rs6000c              ? 490909
IBM RS/6000 530           AIX   Level 2008 3.1.8  rs6000               ? 483326
IBM RS/6000               AIX                3.2  rs6aix32        940627 549762
IBM RS/6000               AIX                3.2  rs6aix32c       940627 557929
IBM RS/6000 320H          AIX                3.2  rs6aix32             ? 483665
IBM RS/6000 550           AIX                3.2  rs6aix32             ? 492333
IBM RS/6000 950           AIX                3.2  rs6aix32             ? 483665
IBM RS/6000               AIX              3.2.2  ?                    ? 484750
IBM RS/6000 320           AIX             3.2.3E  rs6000c         930223 491565
IBM RS/6000 320           AIX             3.2.3E  rs6000          930223 483982
IBM RS/6000 320           AIX             3.2.3E  rs6aix32c       930223 491445
IBM RS/6000 320           AIX             3.2.3E  rs6aix32        930223 484494
IBM RS/6000 520           AIX              3.2.5  rs6aix32c       941007 579489
IBM RS/6000 520           AIX              3.2.5  rs6aix32        941003 576106
IBM RS/6000 580           AIX              3.2.5  rs6aix32c       940712 569169
IBM RS/6000 PowerPC       AIX              4.1.1  rs6aix41c       941018 643163
IBM RT PC 6150            AIX              2.2.1  rtaix           940827 554900
IBM RT PC 6150-125        AIX              2.2.1  rtaixc          941008 603488
IBM RT PC 6150-125        AIX              2.2.1  rtaix           941008 556612
IBM RT PC                 BSD           4.3/Reno  bsd44c          921206 438272
ICL DRS400                DRS/NS             2.1  iclsys5r3       921111      ?
ICL DRS400E               DRS/NS             5.1  sys5r4               ?      ?
ICL DRS3000 486           DRS/NX SVR4          ?  iclsys5r4_486   921209      ?
ICL DRS6000 SPARC         DRS/NX SVR4      5.1.4  iclsys5r4       921209 452840
Integrated Solutions V8S  ISI 4.2BSD       3.07D  isi                  ?      ?
Intel 303 383-33          SCO Xenix       2.3.1b  sco3r2               ? 364720
Intel 486/25              ESIX             4.0.4  esixr4               ? 393192
Intergraph Clipper x000   CLIX        3.1 R7.0.9  clix            930108      ?
Intergraph Clipper x000   CLIX               6.x  clix            930108      ?
Intergraph Clipper x000   CLIX                 ?  clixnetc        930108      ?
Luxor ABC-9000            DNIX 5.2          2.2c  ?                    ?      ?
MIPS 3230, 3240, M120     RISC/OS UMIPS     4.52  mips            940901      ?
MIPS 3230, 3240, M120     RISC/OS UMIPS     4.52  mipstcpc        940901 712704
Modcomp Realstar 1000     REAL/IX            D.1  sv88r32         921208 639312
Motorola MVME 147/68030   UNIX SV/68R3     3v5.1  sv68r3v51       921204 308772
Motorola VME Delta 3000   UNIX SV/68R3     3v6.2  sv68r3          921204 441256
Motorola VME Delta 4000   UNIX SV/68R3     3v6.2  sv68r3          921204 441256
Motorola VME Delta 4000   UNIX SV/68R3     3v7.1  sv68r3          921204 441256
Motorola VME Delta 8000   UNIX SV/88R3.2  32v3.0  sv88r32         921204 567296
Motorola VME Delta 8000   UNIX SV/88R3.2  32v3.1  sv88r32         921204 567296
Motorola VME Delta 8000   UNIX SV/88R4.0  40v3.0  sv88r4          921204 478752
Motorola VME Delta 8000   UNIX SV/88R4.1  40v4.1  sv88r4          940623      ?
NCR Tower 32/450          Tower 32 OS   02.01.00  tower32-2            ? 345864
NCR Tower 32/650          NCR UNIX           3.0  tower32              ? 376876
NCR Tower XP              NCR UNIX             ?  sys3nv               ?      ?
NCR Tower 32              NCR UNIX 5.0       1.1  tower32-1            ?      ?
NCR System 3000           System V R4        2.0  sys5r4sxna           ?      ?
NCR System 3000           System V R4        2.0  sys5r4net2           ?      ?
NCR System 3430/Pentium   System V R4        4.0  sys5r4sx             ?      ?
NCR System 3350           NCR UNIX +TWG 02.02.01  sys5r4net2      941006 483996
NCR System 3445           NCR UNIX +TWG 02.02.01  sys5r4net2      940819 478728
NCR System 3450           NCR UNIX +TWG 02.02.01  sys5r4net2      940819 478728
NeXTcube                  NeXTSTEP           2.1  next                 ? 344064
NeXTcube                  NeXTSTEP           3.0  next                 ? 352256
NeXTstation               NeXTSTEP           2.1  next                 ? 344064
NeXTstation               NeXTSTEP           3.0  next                 ? 352256
NeXTstation               NeXTSTEP           3.1  next            941006 417792
Nixdorf Targon/31         TOS             4.0.11  t31tos40x            ?      ?
Nixdorf Targon/31 M15     TOS             4.0.13  t31tos40x            ? 384044
Norsk Data Uniline 88/17  UNIX SV/88 3.2     3.6  sv88r32              ? 604336
Olivetti CP 486           UNIX SVR4        2.1.1  sys5r4nx        921206 356724
Olivetti CP 486           UNIX SVR4        2.1.1  sys5r4sx        921206 356988
Olivetti LSX 3005..3045   X/OS UNIX     2.3..3.0  xos23           921211 438944
Olivetti LSX 3005..3045   X/OS UNIX     2.3..3.0  xos23c          921211 475416
Olivetti LSX 5020         SCO UNIX         3.2.2  sco3r22         921206 354848
PC 386 and above          386BSD          0.1.24  386bsd               ? 401408
PC 386 and above          386BSD             0.1  bsd44           921205 401408
PC 386 and above          386BSD             0.1  bsd44c          921205      ?
PC 386 and above          AT&T SYSV/386  3.2.2.3  sys5r3          921210 380806
PC 386 and above          BSDI (BSD/386)     1.0  bsdi            941006 491520
PC 386 and above          Coherent/386     4.0.1  coherentmax          ? 324996
PC 486                    Consensys Sys V R4.2-1  sys5r4sxtcpc         ? 526720
PC 486                    DEC OSF/1          1.2  dec-osf              ?      ?
PC 386 and above          Dell SVR4.04       2.2  dellsys5r4c          ? 418216
PC 386 and above          Dell SVR4          2.2  dellsys5r4mi         ? 126276
PC 386 and above          Dell SVR4          2.2  dellsys5r4m          ?  90372
PC 386 and above          ESIX         3.2 Rev.D  sys5r3               ? 423018
PC 386 and above          FreeBSD            0.1  386bsd               ?      ?
PC 386 and above          ISC SV/386    3.2-3.01  isr3                 ?      ?
PC 386 and above          ISC SV/386 R3      3.0  is3gcc          930210 308528
PC 386 and above          ISC SV/386 R3      4.0  is5r3jc         940625 440060
PC 386 and above          ISC SV/386         2.2  is5r3netjc      921205 439816
PC 386 and above          ISC SV/386         3.0  is5r3netjc      921205 439816
PC 386 and above          ISC SV/386 3.1    1.06  is5r3net             ? 351104
PC 386 and above          ISC SV/386 3.1   2.2.1  is5r3gcc        930115 366286
PC 486 (Dell 466V)        Linux          0.99.14  linux           941006 443396
PC 486 (Dell 466V)        Linux          0.99.14  linuxs          940704 508932
PC 486 (Dell 466V)        Linux          0.99.14  linuxtcp        941006 459780
PC 486 (Dell 466V)        Linux          0.99.14  linuxtcps       940704 541700
PC 486                    Linux            1.0.9  linuxtcp        940801 459913
PC 486                    Linux           1.1.20  linux           940712 410628
PC 386 and above          Lynx OS            2.1  lynx21          940919 405536
PC 386 and above          Lynx OS            2.2  lynx22               ?      ?
PC 386 and above          Microport SVR4.0  V4.1  sys5r4sx             ? 310636
PC 386 and above          NetBSD             0.9  bsd44c               ? 471040
PC 486                    NetBSD        1.0 Beta  netbsd          940918 446464
PC 532 NS32532            NetBSD        1.0 Beta  netbsd          940805      ?
PC 486                    NeXTSTEP/486       3.2  next            940713      ?
PC 386 and above          Novell UnixWare   V1.0  unixware             ? 422296
PC 386 and above          Novell UnixWare   V1.1  unixware             ?      ?
PC 386 and above          Novell UnixWare   V1.1  unixwarenetc         ?      ?
PC 386 and above          Novell UnixWare V1.1.1  unixwarenetc    940822 518872
PC 386 and above          Novell UnixWare V1.1.2  unixware        941006 437160
PC 386 and above          Novell UnixWare V1.1.2  unixwarenetc    941006 525232
PC 486                    OSF/1                ?  ?                    ?      ?
PC 286 16-bit             QNX                4.1  qnx16_41        930114 252759
PC 286 & above 16-bit     QNX               4.21  qnx16           941006 535667
PC 386/486/586 32-bit     QNX               4.21  qnx32           941006 465675
PC 386 and above          SCO ODT            1.1  sco3r22net           ? 363872
PC 386 and above          SCO ODT            2.0  sco32v4net      940919      ?
PC 386 and above          SCO ODT            3.0  sco_odt30            ?      ?
PC 386 and above          SCO UNIX         3.2.0  sco3r2netnd          ? 364908
PC 386 and above          SCO UNIX=ODT20 3.2v4.0  sco32v4         940624 434196
PC 386 and above          SCO UNIX=ODT20 3.2v4.0  sco32v4net      941003      ?
PC 386 and above          SCO UNIX       3.2v4.0  sco32v4netnd         ? 368304
PC 386 and above          SCO UNIX       3.2v4.0  sco32v4netc          ? 402960
PC 386 and above          SCO UNIX       3.2v4.0  sco32v4netgcc        ? 370609
PC 386 and above          SCO UNIX=ODT30 3.2v4.2  sco_odt30       940826 484060
PC 386 and above          SCO UNIX/XPG4  3.2v4.2  sco_odt30       941006 505072
PC 386 and above          SCO UNIX       3.2v4.2  sco32v4              ? 408800
PC 286 and above          SCO Xenix/286    2.3.3  sco286               ? 312076
PC 386 and above          SCO Xenix/386    2.3.2  sco286               ? 363463
PC 386 and above          SCO Xenix/386    2.2.3  sco386               ? 342504
PC 386 and above          SCO Xenix/386    2.3.3  ?                    ?      ?
PC 386 and above          SCO Xenix/386    2.3.4  sco3r2x              ?      ?
PC 386 and above          Solaris 1.0    ISC 2.2  is5r3net               399836
PC 286 and 386            Trusted XENIX        ?  ?                    ?      ?
Perkin-Elmer 3200         Xelos System V     R02  ccop1                ? 566553
Pyramid MIS-S Series      DC/OSx SVR4        1.0  pyrdcosx             ? 655649
Pyramid MIS-S Series      DC/OSx SVR4        1.1  pyrdcosx             ? 645765
Pyramid MIS-T Series      OSx Dual Port     4.4b  pyramid         921201
Pyramid MIS-T Series      OSx Dual Port     5.1a  pyramid         921201 516096
Pyramid MIS-T Series      OSx Dual Port     5.1a  pyramid-hdb     921201 540672
Sequent S27               DYNIX/ptx        1.3.1  dynixptx13      921205 544080
Sequent S2000/700         DYNIX/ptx       V1.4.0  dynixptx13      921205 544080
Sequent S81               DYNIX/ptx          1.4  dynixptx13      921205 409600
Sequent S400 (6 x 486/50) DYNIX/ptx        1.4.1  dynixptx13      940623 597204
Sequent S400 (6 x 486/50) DYNIX/ptx        1.4.2  dynixptx13      941003 613644
Sequent S2000/250         DYNIX/ptx          2.0  dynixptx20           ? 513972
Sequent S27               DYNIX           V3.1.4  dynix31c        940623 460929
Sequent S81               DYNIX        V3.2.0NFS  dynix31         921205 409600
Sequent S81               DYNIX             V3.2  dynix31c             ? 364548
Sequent S2000/250         DYNIX/ptx        2.0.3  dynix20              ? 513972
Sequent S2000/250         DYNIX/ptx        2.0.3  dynix20c             ? 610128
Sequent S2000/700         DYNIX/ptx        2.1.0  dynixptx20      940919 674542
Sequent S2000/700         DYNIX/ptx        2.1.0  dynixptx20c     941002 776518
Sequent S2000/700         DYNIX/ptx        4.0.0  dynixptx20c     941002 650012
SGI Iris                  IRIX               3.3  sys5r3               ?      ?
SGI 4D/35                 IRIX             4.0.1  irix40               ? 331776
SGI 4D                    IRIX SVR3        4.0.5  irix40          921216 499712
SGI Indigo                IRIX            4.0.5F  irix40          930414 495616
SGI Indigo                IRIX            4.0.5F  irix40ypc       930414 606208
SGI Elan                  IRIX            4.0.5H  irix40               ? 507904
SGI Elan                  IRIX            4.0.5H  irix40ypc            ? 618946
SGI Elan                  IRIX            4.0.5H  irix40u              ? 507904
SGI Elan                  IRIX            4.0.5H  irix40uc             ? 569344
SGI Indigo Elan           IRIX               5.2  irix51ypc       940822 676608
SGI Indigo                IRIX               5.0  irix40ypc            ?      ?
SGI Challenge             IRIX           5.1.1.1  irix51ypc            ?      ?
SGI Indigo R3000          IRIX               5.2  irix51ypc       940623 652032
SGI Indigo R4000          IRIX               5.2  irix40ypc       940809 660224
SGI Indigo R4000          IRIX               5.2  irix51ypc       941015 680704
Solbourne 5E/905          OS/MP           4.1A.1  sunos41         921222 475136
Solbourne 5E/900          OS/MP           4.1A.3  sunos41              ?      ?
Sony NEWS                 NEWS-OS         4.0.1C  sonynews             ?      ?
Sony NEWS                 NEWS-OS         4.1.2C  sonynews             ?      ?
Stardent 1520             Stardent UNIX      2.2  sys5r3          921127      ?
Stratus, various models   FTX                2.1  sys5r4               ?      ?
Stratus XA/R Model 310    FTX              2.2.1  sys5r4sxtcpc    940829 725212
Stratus XA/R Model 20     FTX            2.2.2.2  sys5r4sxtcpc    940829 732716
Sun (model unknown)       Solaris            2.0  sunsol20gcc          ?      ?
Sun-3/160                 Sun UNIX 4.2       3.2  bsd                  ? 434176
Sun-3/60                  Sun UNIX 4.2       3.5  sunos3gcc       930115      ?
Sun 3/60                  SunOS              4.1  sunos41c        940827 335872
Sun-3/60                  SunOS            4.1.1  sunos41c        921204 417792
Sun-4/280                 SunOS            4.1.1  sunos41c             ? 499712
Sun-4/280                 SunOS            4.1.1  sunos41s5r3          ? 450560
Sun-4/280                 SunOS            4.1.1  sunposix             ? 442368
Sun-4/470                 SunOS            4.1.2  sunos41              ? 475136
Sun-4/470                 SunOS            4.1.2  sunos41c        921204 524288
Sun-4/690                 SunOS            4.1.2  sunos41c             ?      ?
Sun SPARCserver           SunOS            4.1.1  sunos41         940623 573440
Sun SPARCserver           SunOS  4.1.3/X.25 7.00  sunos41x25c     941024 606208
Sun SPARCserver           SunOS            4.1.2  sunos41s5r3          ? 450560
Sun SPARCserver           SunOS            4.1.2  sunposix             ? 442368
Sun SPARCstation 1        SunOS            4.1.2  sunos41c             ? 499712
Sun SPARCstation 2        SunOS           4.1.1b  sunos41c             ? 507904
Sun SPARCstation 2        SunOS            4.1.3  sunos41gcc           ? 475136
Sun SPARCstation 2        SunOS            4.1.3  sunos41c             ? 499712
Sun SPARCstation 2        SunOS 4.1.3/JLE  1.1.3  sunos41c        921205 524288
Sun SPARCstation 2        SunOS 5.0  Solaris 2.0  sunsol20        921204 547144
Sun SPARCstation 2        SunOS 5.1  Solaris 2.1  sunos51              ?      ?
Sun SPARCstation 2        SunOS 5.1  Solaris 2.1  sunos51c             ?      ?
Sun SPARCstation 2        SunOS 5.1  Solaris 2.1  sunos51tcp           ?      ?
Sun 4M SS10               SunOS            4.1.3  sunos41gcc      940623 524288
Sun 4 ELC                 SunOS         4.1.3_U1  sunos41gcc      940623 524288
Sun 4 SS1+                SunOS            4.1.3  sunos41gcc      940624 524288
Sun 4M SS10-40            SunOS            4.1.3  sunos41gcc      940623 524288
Sun 4M Classic            Solaris            2.3  solaris2xg      940919 578768
Sun SPARCserver 10        Solaris            2.3  solaris2xg      940919 578768
Sun SPARCserver 10        SunOS            4.1.3  sunos41c        941006 589824
Sun SPARCserver 10        SunOS            4.1.3  sunos41mi       940822 196608
Sun SPARCserver 10        SunOS            4.1.3  sunos41m        940822 147456
Sun SPARCserver 10        SunOS            4.1.3  sunposix        941006 516096
Sun SPARCserver 10        SunOS            4.1.3  sunos41s5c      940813 573440
Sun SPARCserver 1000      Solaris            2.3  solaris2x       941006 651188
Sun SPARCstation 10       SunOS            4.1.3  sunos41gcc      940808 540672
Sun SPARCstation 10       SunOS 5.1  Solaris 2.1  sunos51/cc           ? 366960
Sun SPARCstation 10       SunOS 5.1  Solaris 2.1  sunos51c             ?      ?
Sun SPARCstation 10       SunOS 5.1  Solaris 2.1  sunos51tcp           ?      ?
Sun SPARCstation 10       SunOS 5.1  Solaris 2.1  sunos51tcpc/cc       ? 448220
Sun SPARCstation 10       SunOS 5.1  Solaris 2.1  sunos51/apcc         ? 411100
Sun SPARCstation 10       SunOS 5.1  Solaris 2.1  sunos51tcp/apcc      ? 433984
Sun SPARCstation 10       SunOS 5.1  Solaris 2.1  sunos51tcpc/apc      ? 492476
Sun model unknown         SunOS 5.1  Solaris 2.1  sunos51cgcc     930119 438908
Sun SPARCstation LX       SunOS 5.1  Solaris 2.1  sunos51cgcc          ? 476156
Sun SPARCserver  10       SunOS 5.2  Solaris 2.2  sunos51tcp           ? 450204
Sun SPARCclassic          SunOS 5.3  Solaris 2.3  solaris2xg      941006 578960
Sun SPARCstation 2        SunOS 5.3  Solaris 2.3  solaris2x       940916 576404
Sun SPARCstation 2        Solaris 2.3, X.25 8.01  solaris2x25     941014 607324
Sun SPARCstation ELC      SunOS            4.1.1  sunos41c        921127      ?
Sun SPARCstation ELC      SunOS            4.1.2  sunos41gcc           ?      ?
Sun SPARCstation IPC      SunOS           4.1.1b  sunos41c             ? 507904
Sun SPARCstation IPC      SunOS 5.1  Solaris 2.1  sunsol20             ?      ?
Sun SPARCstation IPX      SunOS 5.0  Solaris 2.0  sunsol20             ? 481264
Sun SPARCstation IPX      SunOS            4.1.1  sunos41c             ? 499712
Sun SPARCstation IPX      SunOS            4.1.3  sunos41         940712 540672
Sun SPARCstation IPX      SunOS            4.1.3  sunos41gcc      940712 540672
Sun SPARCstation IPX      SunOS         4.1.3_U1  sunos41         940919 557056
Sun SPARCstation IPX      SunOS         4.1.3_U1  sunos41gcc      940919 548864
Tandy Model 6000          Xenix              3.2  trs16           940827 354940
Tektronix 6130            Utek             2.3.1  utek            921205 363520
Tektronix 6130            Utek               3.0  utek            921205 363520
Tektronix XD88            UtekV SVR3      3.2e.3  utekvr3         921229 648368
Torch XXX 68010           Unisoft UniPlus+   5.2  sys3            930107 426701
UNISYS S/4040 68040/25    CTIX SVR3.2      6.4.1  sys5r3          921201 373600
UNISYS U5000/95           UNIX SVR3        6.0.2  sys5r3c         940727 481704
UNISYS U6000/65 MP 486/50 UNIX SVR4        1.0.2  sys5r4nx        921201 366828
UNISYS U6000/65           UNIX SVR4        1.1.1  sys5r4nxnetc    940727 514096

(End of CKC190.UPD)
