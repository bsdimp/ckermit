Date: Wed 8 Jun 88 21:43:05-EDT
From: Frank da Cruz <SY.FDC@CU20B.CC.COLUMBIA.EDU>
Subject: Mac Kermit
To: paul@TUT.CIS.OHIO-STATE.EDU

I got a report that it doesn't compile under MPW 2.0.2, which is the latest
release, and that a major reworking will be required for MPW 3.0, sigh...
What version of MPW are you using?  I also heard that the file ckmkr2.r was
missing.  Did you send it to me?   - Frank

------------------------------

Date: Thu, 9 Jun 88 10:19:42 EDT
From: paul@morganucodon.cis.ohio-state.edu (Paul Placeway)
To: SY.FDC@CU20B.CC.COLUMBIA.EDU
Subject: Mac Kermit
Reply-To: paul@tut.cis.ohio-state.edu

D*mn.  Maybe I'll port it to LightSpeed C and be done with it; LSC
doesn't seem to change radically with each rev.  Mumble...

I'm using MPW 2.0d4 (developer pre-release), which probably explains
the incompatibility.  We have been trying to get a real MPW for about
a year, with no real success (LSC is sounding better and better...)

I thought you picked up ckmkr2.r, but since it's short, here it is:

		--P

[Ed. - Moved to its rightful place...]

------------------------------

Date: Thu, 9 Jun 88 10:49:46 EDT
From: Charlie C. Kim <cck@cunixc.cc.columbia.edu>
To: paul@tut.cis.ohio-state.edu
Subject: Re: Mac Kermit

APDA has MPW 2.0.2 C as an upgrade... I think it was 100 dollars.

The only thing that caused problems (as I remember) was the fact that
you had "environs.h" which isn't there anymore -- it's included in
systypes.h (i believe).  I'll poke in the resource file and see if a
working copy comes out.

The main changes, supposed, will make mpw "more" compatible with other
Cs.  Basically (re: a posting on comp.sys.mac.programmers), the trap
names will change so pascal mode is "mixed case" and c mode is all
lower case.  There will be a set of Canon directives to help people
convert. I noticed you used the c mode, but if you watch out for the
int=2 bytes in lsc, and int=4 bytes in mpw (by using defines or always
using for short=2, long=4 bytes in both), then your LSC port should
work with MPW 3.0 without too much more work.

Just don't port it to megamax :-)

Charlie

------------------------------

Date: Thu, 9 Jun 88 11:00:52 EDT
From: Charlie C. Kim <cck@cunixc.cc.columbia.edu>
To: paul@morganucodon.cis.ohio-state.edu
Subject: macker

Two other problems.

First, link tries to link in glueenviron.a.o

Second, you used the special characters in ckmker.r (high order bits
on).  They should changed to corresponding \ooo format so the files
can be xfered properly.

Seems to work (launches) other than that.

Charlie

------------------------------

Date: Thu, 9 Jun 88 11:11:49 EDT
From: paul@morganucodon.cis.ohio-state.edu (Paul Placeway)
To: cck@cunixc.cc.columbia.edu
Cc: sy.fdc@cu20b.cc.columbia.edu
Subject: macker
Reply-To: paul@tut.cis.ohio-state.edu

Thanks.  I'll go and change things...

I've been waiting for OSU to send the $100 (a trivial amount) to APDA,
but at the rate things are going I might as well buy it myself.  8-(

If MPW 3.0 is supposed to be more compatible with everyone else, I may
very well take a stab at a port...

I don't know what real MPW links in to get the glueenviron.a.o stuff.
If it is allready in the normal library, fine.  If not, the other
MacKermit hackers will need to know.

		whatever...
			--P

------------------------------

Date:     Tue, 14 Jun 88 14:00:58 EDT
From:     Dick Atlee <ATLEE%UMDC.BITNET@CUVMA.CC.COLUMBIA.EDU>
Subject:  MacKermit
To:       Frank da Cruz <SY.FDC@CU20B.COLUMBIA.EDU>

The mouse feature does not work on our system.  After a go-round about Ted
Medin's Apple Kermit in VT100 mode, which worked on some machines and not on
others, we found a problem with the cursor keys.  The VT100 has a set/reset
mode governing the cursor keys -- when Cursor Key Mode is RESET (default) the
sequence is ESC [ A/B/C/D, while when SET it is ESC O A/B/C/D.  Our IBM 7171
here is programmed to RESET this mode as part of the initialization and then
expect the ESC-[ pattern from the cursor keys.  Ted's Kermit was not responding
properly to the RESET command.  If the mouse driver for MacKermit is not
sensitive to the RESET command, and sends the ESC-O pattern, it won't work on
a lot of machines.  Any info on this?

------------------------------

Date: Sun, 19 Jun 88 21:53:42 +0100
From: Eamonn McManus <emcmanus@csvax1.tcd.ie>
Subject: Bug in Macintosh Kermit Version 0.9(40)
Keywords: MacKermit 0.9(40)

> This is to announce Macintosh Kermit 0.9(40), by Paul Placeway of Ohio State
> University and Matthias Aebi of ECOFIN Research and Consulting, Ltd, Zuerich.
> MacKermit 0.9(40) runs on all Macs except the 128K original.

There is a trivial but annoying bug in Mac Kermit 0.9(40), as released to
comp.binaries.mac on Usenet.  (The version says it is Kermit version 0.9(40),
04/05/88 11:51.)  The default settings for tab stops place the last one at
column 71 (zero-origin) rather than 72 as it should be.  Most of the time
this doesn't show up (which is presumably why the bug hasn't been fixed so
far) but it is quite noticeable in editors like vi that attempt to optimise
cursor motion, frequently by using tabs.

Here is a patch that fixes the bug.  The version of ckmcon.c is that from
0.9(36)b4 but I assume it hasn't changed.

*** ckmcon.c.orig       Wed Jun  8 17:03:27 1988
--- ckmcon.c    Sun Jun 19 20:56:06 1988
***************
*** 85,91
  /* (UoR) do tapstops via an array: 0 means no tab, 1 means tab at that column
*/
  short tabstops[MAXCOL+1] = {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,
     0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,
!    0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1};

  #define USA_SET  0                      /*  (UoR) VT100 character set numbers
*/
  #define UK_SET   1

--- 85,91 -----
  /* (UoR) do tapstops via an array: 0 means no tab, 1 means tab at that column
*/
  short tabstops[MAXCOL+1] = {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,
     0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,
!    0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1};

  #define USA_SET  0                      /*  (UoR) VT100 character set numbers
*/
  #define UK_SET   1


Since I don't have the 0.9(40) sources, I've had to patch the binary.  This
involves editing block 132(dec) and changing byte 0x19c to a 0, and byte
0x19e to a 1.

Eamonn

------------------------------

(reported by many, and observed to be true...) MacKermit often reports the
block check type to be 0 when sending a file with block check type 1.

------------------------------

Date:     Sat, 13 Aug 88 23:44:22 EDT
From: Dick Atlee <ATLEE%UMDC.BITNET@cuvmb.cc.columbia.edu>
Subject:  MacKermit bugs

I wrote to Paul a while back about the fact that, while the cursor keys will
respond to a VT100 "reset" command to change their output from ESC-O-x to
ESC-[-x (necessary on our IBM CMS 7171 front end), the mouse will not, making
the mouse useless on our system.  He said it was a relatively simple job to fix
it.  I'm interested in getting it fixed in time for distribution to incoming
students this September.

While I was preparing settings files for this distribution, I stumbled on
another aspect of bizarre behavior, which, after playing around with a data
monitor, I sent him a copy of on Thursday.  I'll pass it along to you, but it
still needs confirmation by someone else....

I have been having trouble using the Option key as an ESC-prefixer.  In the
Modifiers setup I have Opt checked for Unmodify with a prefix string of \033.
However, the same problem occurs (ignoring references below to ESC) when the
setting is for Meta with no parity and no prefix.

The ESC prefixing works fine for the majority of the characters on the
keyboard.  However, there are 5 exceptions (left column below):

                           e     +
   TABLE 1:                i     ^
    Oddball Opt-chars      n     ~
     and "replacements"    u     ,
                           `     `

(NOTE: the problem I'm about to describe does not happen when the Shift key or
CapsLock key is down, although in both these and the non-shifted cases, the
character produced when the option key is held down is a lower-case character.)

Normally, when you hold down the Option key and type a character, an ESC is
generated, followed by the character.  If you type the character twice, you get
ESC <char> ESC <char>, just as you'd expect (I have been checking this with
a data monitor hooked up to the Mac).

However, when you hold down the Option key and type one of the above five
characters, nothing is generated immediately.  Subsequent repeats of this
process produce the normal ESC <char> sequence.  The fascinating part of the
problem occurs when you press Option followed by anything other than those
five characters.  You get a double output of the new character!.  For instance,
the following hold:

   1    Opt-e                  produces      nothing
   2*   Opt-e Opt-e            produces      ESC e
   3    Opt-e Opt-a            produces      ESC a ESC a
   4    Opt-e Opt-e Opt-a      produces      ESC e ESC a ESC a

   * In case 2, although only one sequence was produced, an instability
     exists which affects the next keypress (as shown in #s 3 and 4)

However, the truly bizarre behavior happens when you use one of the five
oddball Opt-<char>s, followed by a non-Opt-<char>.  In most cases, when you
press Option plus one of the characters in Table 1's left-hand column, followed
by a non-Opt character, you produce instead the corresponding right-hand column
character followed by the non-Opt character -- e.g.

                 Opt-e               produces      nothing (unstable)
                 Opt-e b             produces      +b

The accent grave produces itself as the prefix-character, but this is not
trivial.  In all 5 cases, the two resulting characters only appear AFTER both
characters are typed.

Strange though it is, this odd situation begins to look "normal" compared to
what happens when the "second character" is one of a select group. For example:

                 Opt-e e      produces a single    ^N
                 Opt-e o      produces a single    ^W
                 Opt-i e      produces a single    ^p

A fairly exhaustive series of tests shows the following  (these have been
arranged so as to show the pattern of increasing values of the resulting
character, although I haven't figured out how the mapping works.......):

                          Second |  ----Initial Opt-char---
                           Char  |   e    `    i    u    n
                          ------ |  ---  ---  ---  ---  ---
                            A    |       (K)       ^@   (L)
                            E    |  ^C
        TABLE 2             N    |                      ^D
                            O    |                 ^E   (M)
    Results of typing       a    |  ^G   ^H   ^I   ^J   ^K
    one of the oddball      e    |  ^N   ^O   ^P   ^Q
    Opt-chars followed      i    |  ^R   ^S   ^T   ^U
    by the indicated        n    |                      ^V
    second character        o    |  ^W   ^X   ^Y   ^Z   ^[
                            u    |  ^\   ^]   ^^   ^_
                            `    |       (``) (``) (``) (``)
                            ~    |  (~~) (~~) (~~) (~~) (~~)
                          space  |  (+)  (`)  (^)  (,)  (~)
                           tab   |  **   **   **   **   **
                           del   |  **   **   **   **   **
                          ctl-chr|  [^K] [^@] [^^] [^L] [^^]

       an empty space indicates the "normal" behavior described above.
    () enclose literal characters that appear after both chars have been typed
    [] indicate a character which appears with the "second character" following
         it after both the Opt and second characters have been typed.
    ** indicates the second character appears twice, after both the Opt and
         second characters have been typed.

This behavior on the part of the oddball characters makes using the Option key
almost useless (ESC-e and ESC-i and ESC-` are all used in our IBM CMS ful-
screen environment).  I have mapped these sequences to other keys, but there
are times when it would be nice to have access to them in this form.  (By the
way, the keys with direct mapping show none of the above behavior.)

------------------------------

Date: Fri, 15 Jul 88 22:52:11 EDT
From: mholden@ajpo.sei.cmu.edu
Subject: Re: Transferring application via MacKermit 0.9(40) 
Keywords:

The underlying problem I have is that I have no control over the encoding
of the original file I am trying to download. The scenario as I understand
it is as follows:
	The Mac file is compressed with Stuffit 
	The stuffed file is uploaded to a DEC-20 using Red Ryder Kermit
	The uploaded file is ftp'd (using TENEX binary) to a UNIX VAX
	I then try to download to my Mac over TELENET
	I tried MacKermit with no luck
	After a kind soul put XMODEM up on the UNIX host, I downloaded the
file using MacTerminal MacBinary and the stuffed file was reconstituted
	I then proceeded to unstuff and all was well
Is there some place in this scenario for the use of MacKermit with BinHex
5.0 (which I have). I have no documentation although I did send in a shareware
fee. I confess that I am somewhat naive about the arcane structure of Mac 
files.

Since I am now operational with XMODEM, the problem is not urgent, but I 
would like to know a little more about what is going on and how to use my
available options.

- Maretta

------------------------------

Date: Mon, 8 Aug 88 16:21:05 EDT
From: mates%applga.uucp@umix.cc.umich.edu (Valerie Mates)
Subject: Re: MacKermit question

My copy of MacKermit, version 0.9(40) often tells me it is using block
check type 0 and window size 00 during a file transfer.  Is this just a
cosmetic problem, or is MacKermit really using no checksum?  Files often
arrive garbled on the Mac.  I'm using a Mac II.

Thanks! 
    -Valerie Mates
    (if reply mail bounces, try popcorn@caen.engin.umich.edu
     or Valerie_Mates@ub.cc.umich.edu)

------------------------------

Date: Tue, 16 Aug 88 21:15:29 IST
From: "Jonathan B. Owen" <GDAU100%BGUVM.BITNET@cuvmb.cc.columbia.edu>
Subject: MacKermit Key Escape Sequences

    Mike O'rourke has asked about using an IBM with a VT100 (by emulation).
Well, I am no IBM expert.  But if the port in question is connected to
a 7171 terminal server and if this server works the same when connected
to a "VT100" then the following applies:

    Switch between VM and CP mode            <ESC> <,>
    Clear Screen (when prompted with MORE... <ESC> <.>
    F1 thru F12                              <ESC> <1> thru <ESC> <=>
    Screen refresh                           <CTRL> <G>

All of the above was found by expermentation.  I have not found and am
not sure that a squence exists for switching between INSERT mode and
OVERSTRIKE mode.  After all, the real VT100 terminal does not have such
keys...

    If you are planning to define a setup with the above sequences,
the following might be of help (extracted from the VT100 manual):

    Cursor Up        <ESC> [ A
    Cursor Down      <ESC> [ B
    Cursor Right     <ESC> [ C
    Cursor Left      <ESC> [ D

    The reason I did not define such a setup is because I miss being
able to switch between Insert and Overstrike mode.  Therefore, I
defined a setup which contains the VT220 sequences for the above plus
the sequences for switching betwen the above two modes.  This works fine,
if you define yourself to the IBM as a VT220 with the exception that
during a screen refresh, a few scribbles flash on the screen.
The setup file conta8ins key macros which are mapped to an Apple
Extended Keyboard.  F1 thru F12 act as the twelve function keys.
F15 acts as CLEAR.  Also, the arrow keys, ins and del keys are defined.
If anyone is interested in this file, I will gladly upload it provided
I told how by the Moderator...

                         Hope this is of help...
                                                JB

P.S. Oddly enough, I did not find the proper escape sequence that the VT220
     is expected to send in order to switch between VM and CP mode.  Maybe
     you know?...

  (--)    /--)     /-(\                 Email: gdau100@bguvm (bitnet)
  \ /    /--K      | \|/\   /\/) /|-\   Snail: 55 Hovevei Zion
  _/_/o /L__)_/o \/\__/  \X/  \_/ | |_/        Tel-Aviv, 63346  ISRAEL
 (/        Jonathan B. Owen             Voice: (03) 281-422

 Point of view:  A chicken is the means by which an egg reproduces an egg.

------------------------------

Date: Thu, 08 Sep 88 08:34:30 EDT
From: Bob Rahe <CES00661%UDACSVM.BITNET@cuvmb.cc.columbia.edu>
Subject: MacKermit visible control chars
Keywords:

  Well, just spent some time debugging a problem that wasn't a problem
at all(!).  We were having a problem with a concentrator, it
seemed to be (and actually is) eating the SOH for start of packet.
While running some tests on it with MacKermit, I put the terminal
emulator into 'visible control character' mode and found what seemed to
be extraneous characters at the end of lines coming from the host.
Characters '13' and '10'.  I read these as DC3 and DLE. WRONG! They
aren't hex representations but DECIMAL!

  Is this the way a VT100 does it?  I've used a lot of terminals and/or
line monitors in my day and either they display the character in a
pseudo-mnemonic ( CR, DL, LF, etc.) or the put out the character in HEX.
Decimal may be useful for BASIC  programmers etc. but I wouldn't expect
many datacomm hackers to be expecting it.  Anyone got a different
version of the font that puts the characters in (IMHO) the more
reasonable hex format?  Or alternatively, in mnemonics?

If nobody else will/has I'll volunteer.  Which should it be? Objections?

       Bob

------------------------------

Date: Mon, 19 Sep 88 14:03:39 PDT
From: lulue@manta.nosc.mil (Dan Lulue )
Subject: Macintosh Kermit and vi strangeness.
Keywords: MacKermit 0.9(40)

I do some user consulting here at NOSC in San Diego.  I recently received
this message from a person who used. 9(40) with vi and experienced
dropped characters (message follows):

-----Start-----
Message-Id: <8809191813.AA19986@cod.nosc.mil>
To: lulue
Subject: The letters come in here, and then they go around and around
Status: RO

-------
...and then they????

Well, I am using Kermit, as you requested, and all *&?#@!! is breaking
loose when I use 'vi.'

To wit:

I was editing a line which ended with the word "modeltly".  The cursor
was on the first column, and I wanted to move to the last word to change it
to "modestly."  Okay.  I typed $ to jump to the end of the line.
Instead, here is what happened (underline indicates position of cursor):

               -- -- -- -- says    modellly
                                      -
Next, I did some other stuff until the word was "modelsty."  Then I
attempted to remove the "l" by using 'x'.  The results:

	       -- -- -- -- says    mode

Next, I tried to complete the word by adding "stly."  With the cursor
on the final letter of "mode," I pressed 'a' for append.  Results:

	       -- -- -- -- says    mods

Next, I moved the cursor to the "s" of "mods" and successfully removed the
"s."  Then I again tried to use 'a' for append.   Results:

	       -- -- -- -- says    moe

Now, I'm a peaceful, quiet, easy-going guy as you know.  You do know that,
right?  Anyway, by this time I was getting annoyed as what looked to like
a consistent pattern of weird behavior.  Okay, onward...

Next, I decided to delete the word "moe" entirely, so I used 'h' to move
the cursor left of the offending word.  Results:

	       -- -- -- -- saysmmoe
                               -
Somehow I got the final word in that line down to "says."  To try to finish the
line, I used 'a' while the cursor was on final "s" of "says."  Results:

	       __ __ __ __ say 
                               - (underline indicates cursor position)

Well, that's it for me.  Enough of this research.  I sincerely hope I have
provided you with more information than you every wanted on this topic.

Bill

PS: please fix this, somebody, anybody!!!

-------
----Stop----

I checked this user's communication parameters (no parity, 8 bits, 1
stop/start) and flow control (xon) and they are the standard settings
for our Sytek network.

He is using .9(40) on a Mac Plus, System 4.2, Finder 6.0.  Red Ryder,
and MacTerminal seem to work fine.

It sounds like the cursor positioning control sequences that vi
transmits are being misinterpreted or dropped.

Has anyone else seen this behavior?  If not, the problem must be ours
somehow.  Any suggestions would be most welcomed.

Thanks, Dan.

lulue@nosc.mil

------------------------------

Date: Sat, 15 Oct 88 04:37:40 -0700
From: Alastair Milne <milne@ics.uci.edu>
Subject: MacKermit Bugs
Keywords: MacKermit 0.9(40)

I have been running MacKermit 0.9(40) on a 2 meg full-colour Mac II under
Multifinder.  It has been of great use to me; it has been working very well,
and besides being my terminal emulator of choice for daily work, has succeeded
in populating a fair part of my hard disc with distribution list shareware.  I
particularly enjoy its ability to transfer in the background: it saves a lot
of time at 2400 baud when I can work in WriteNow or Word, while Kermit is
cheerfully churning away in the background.

I have encountered one or two oddities, which I thought you might like to know
about.  I just checked the ckmker.bwr file to see if they had been reported.
I don't see them there, so here they are:

- in Getting files from a remote server Kermit (on UNIX): the * wildcard 
  when requesting files works fine, but the other UNIX wildcard generators
  ( [...], {one,two,three}) do not.  I get back an alert dialogue saying
  the file wasn't found.  

[Ed. - This is because Unix Kermit does not interpret the other wildcard
characters.]

Looks as if either MacKermit is manipulating the file name string before
sending it, or C-kermit under UNIX isn't correctly handling the wildcard
resolution (I presume the method is to pass the received string to the shell).

[Ed. - No, C-Kermit does the wildcard matching itself.]

- When the Init called HierDA (activates the Mac II's "walking" submenu 
  feature) is installed, Kermit launches, shows and clears its terminal
  window, then aborts with system error 1.  It seems to happen under both
  Multifinder and Finder.  The emulator VT100-Maculator does the same 
  thing, so it may be a general serial port problem.  I'll try to pass it 
  on to HierDA's author, too (if I can find his address), but I thought 
  you'd be interested in knowing.

This is more a wish than a bug: there are several server commands listed in
the menu, but the remote Kermit setting command seems to be missing.  This is
important, for instance, to be able to turn UNIX Kermit's "image" mode on or
off.

Finally, can we look forward to Attribute packets for MacKermit?  It would be
useful to know the sizes of incoming files, and very useful to preserve file
dates.

Thanks for a fine program.

   Alastair Milne

------------------------------

Date: Sat, 12 Nov 88 18:35:44 EST
From: Maretta Holden <mholden@ajpo.sei.cmu.edu>
Subject: Mac Kermit 0.9(40) vs Extended Keyboard
Keywords: MacKermit 0.9(40)

I am using Mac Kermit 0.9(40) to access a DEC microVAX from a Mac II with
an extended keyboard. I occasionally need to use the EDT editor on the VAX.
Although the cursor control keys work as expected, Kermit does not appear
to emulate the numeric keypad so that it can be understood by EDT. I assume
I could compensate by using the key macro capability but I suspect I do
not have enough information to do it without help. Are there any available
macro definitions for this purpose? [Or is Mac Kermit going to be updated
to handle the extended keyboards more completely?]

Thanks for any help,
Maretta Holden
mholden@ajpo.sei.cmu.edu

------------------------------

Date: Wed, 30 Nov 88 16:40:43 EST
From: Bob Rahe <CES00661%UDACSVM.BITNET@cuvmb.cc.columbia.edu>
Subject: Visible control chars in MacKermit
Keywords:

  I sent this to info-kermit in Sept, but.... anyway here goes again:

  Well, just spent some time debugging a problem that wasn't a problem at
all(!).  We were having a problem with a concentrator, it seemed to be (and
actually is) eating the SOH for start of packet.  While running some tests on
it with MacKermit, I put the terminal emulator into 'visible control
character' mode and found what seemed to be extraneous characters at the end
of lines coming from the host.  Characters '13' and '10'.  I read these as DC3
and DLE. WRONG! They aren't hex representations but DECIMAL!

  Is this the way a VT100 does it?  I've used a lot of terminals and/or line
monitors in my day and either they display the character in a pseudo-mnemonic
( CR, DL, LF, etc.) or the put out the character in HEX.  Decimal may be
useful for BASIC programmers etc. but I wouldn't expect many datacomm hackers
to be expecting it.  Anyone got a different version of the font that puts the
characters in (IMHO) the more reasonable hex format?  Or alternatively, in
mnemonics?

If nobody else will/has I'll volunteer.  Which should it be? Objections?

       Bob

------------------------------

Date: 22 Dec 1988 16:18:59 EST
From: Eric.Yang@ewt.mit.edu
Subject: New Year's wish for Mac Kermit 

Is there any plan to add port-selection support to Mac Kermit in the near
future?  We have recently installed a network software that works only on the
modem port.  But I also want to use Kermit to communication with our VAX
through the printer port.  Really wish this feature incorporated like the
other world of PCs.

	Greetings and many thanks to the Mac Kermit developers! 

------------------------------

Date: Fri, 30 Dec 88 18:46 EST
From: Peter Szolovits <psz@zermatt.lcs.mit.edu>
Subject: Additional Features for MacKermit?

I wonder if you know whether any of the following are being contemplated
as future features for MacKermit, and (more importantly) if anyone is
actually building things along these lines:

1.  Support for RTS/CTS serial-line handshakes.  I find that at 9600
baud, I must use ^S/^Q flow control now, or else I risk losing
characters at times when my Mac II can't keep up (boo, hiss for the
slowness of this code).  Alas, because I am a frequent Emacs user, this
loss of two chars in Emacs' command set is quite inconvenient.  My other
particular interest in this is to be able to use MacKermit with a pair
of USRobotics 9600-baud modems, which are able to transmit at close to
19,200 by using internal data compression/decompression, but to do so
they must be set up to communicate with the machines at either end at
19,200.  Because data compression can't always guarantee the factor of
2, they must be able to stop the flow of bits.  Again, out-of-band
signals are much preferable to stealing two of the character codes for
this purpose.  Along the same lines, I wonder if Kermit couldn't take
advantage of the MNP level 5 protocol said to be built into these modems
to assure uncorrupted packet transmission.  I believe that the only
reason I've seen bad packets is because Kermit can't keep up with the
9600-baud stream and thus loses something that came through the modem
ok.

2.  Faster i/o handling.  I don't know if the bottleneck is the serial
line control or screen display, but on a 16MHz 68020 it seems like 9600
baud should be attainable.

3.  In the absence of faster screen i/o, I'd like an option to turn off
screen display while running with session logging on.  With error
correction built into the modem (see above), I should be able to blast a
file down and catch it in the session log without corruption.  I can't
do this now because MacKermit must use flow control or else it just gets
overrun.

4.  Sliding windows, especially for Kermiting to hosts that live at some
far corner of the Internet, so I'm not waiting all the time for packet
handshakes.

5.  The ability to stretch the VT100 window beyond 25x80 characters.  On
a large display screen, many systems now support "large VT100's" that
are just like a VT100 except with more lines and columns.  This would be
a real boon.

6.  Other things everyone wishes for: scripts, some way of shipping Mac
files as a lump (e.g., Apple's "single" or "double" formats for storing
Mac files on non-Mac machines).

Thank you, and I look forward to hearing about progress.  
--Pete Szolovits

------------------------------

Date: Tue, 3 Jan 89 14:06:31 EST
From: bayer%zariski@harvard.harvard.edu (Dave Bayer)
Subject: Large packets

Thanks for your previous help.
I am using Macintosh kermit 0.9(36) B4.osu with a recent vanilla
kermit on a Sun 4 over a 2400 baud phone line. My mean time between
errors is easily over an hour, and THAT is mostly my stupidly
picking up the phone. Thus I calculate that I should increase packet
sizes to the point where between packet overhead is <<1%. This is
larger than 1024 bytes, the current limit.
[1] Can you increase packet size to 64K max on all new versions
without disturbing old versions? I would think so, and I would think
that the time has come, given today's clean links.

[Ed. - The technical limit to long packets is 9024 bytes.  There is
an "extra long packets" option to the Kermit protocol, as yet unused by
any Kermit implementation, that can extend the packet length to about
800K bytes.]

[2] For some reason I can't pin down, I can't go past 512 byte actual
packet size without infinite retries, getting files from Sun server to
Mac kermit. I set both sides to 512 send and receive, increased timeout
limits, etc. to no avail. Is this a common problem? I am only at 70% of
my line capacity for transfers at 512 byte packets.
I know you're swamped (I support my own freeware to others!) so a
succinct reply will be perceived as a warm reply!
Regards, Dave Bayer
bayer@huma1.harvard.edu

[Ed. - Here we're running up against other bottlenecks -- processor speed,
disk i/o & interaction between disk & comm port interrupts, and inefficiency
in the code itself.]

------------------------------


Date: Sat, 17 Dec 88 09:54:07 EST
From: CES00661%UDACSVM.BITNET@cunyvm.cuny.edu
Subject: MacKermit and System 6.0.x
Keywords:

  I recently upgraded to System Tools 6.0.2 and noticed MacKermit seemed
to run 'sluggishly' on my Mac+.  In fact, since I didn't make the
connection originally, I went thru a major virus search(!).  Then I
remembered that one of the 'problems' that had been seen in a number
of programs with system 6.0.x was the test for WaitNextEvent as a way
to tell if MultiFinder was running no longer worked since that trap would
be present all the time.  So, taking out my tech notes and the source for
Kermit found that that was exactly what he was testing so he was using the
WaitNextEvent trap instead of GetNextEvent when not running under Multi-
Finder, causing the slowdown.  I then added the following (per TN158):
                                     (';' = TAB)
Filename:  ckmasm.h

124    #define num_WaitNextEvent    0x60
125    #define num_UnknownTrap        0x9F

Change to:

124    #define num_WaitNextEvent    0x60
125    #define num_JugglDispatch    0x8F    /* The Temp Memory calls (RWR) */
126    #define num_UnknownTrap        0x9F

And

Filename:  ckmini.c

435        if (NGetTrapAddress (num_WaitNextEvent, 1) !=
436        NGetTrapAddress (num_UnknownTrap, 1))
437        return TRUE;

Change to:

435        if (NGetTrapAddress (num_WaitNextEvent, 1) !=
436                NGetTrapAddress (num_UnknownTrap, 1) &&    /* RWR  */
437            NGetTrapAddress (num_JugglDispatch, 1) !=    /* RWR  */
438                NGetTrapAddress (num_UnknownTrap, 1))    /* RWR  */
439        return TRUE;

  I'd be happy to Stuffit and BinHex the resulting code file for anyone
who wants it.

    Bob

------------------------------

